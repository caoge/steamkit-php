<?php
/**
 * Generated by Protobuf protoc plugin.
 *
 * File descriptor : steamclient/steammessages_clientserver_2.proto
 */


namespace SteamKit\Base\SteamMsgClientServer2;

/**
 * Protobuf message :
 * SteamKit.Base.SteamMsgClientServer2.CMsgTrading_InitiateTradeResponse
 */
class CMsgTrading_InitiateTradeResponse extends \Protobuf\AbstractMessage
{

    /**
     * @var \Protobuf\UnknownFieldSet
     */
    protected $unknownFieldSet = null;

    /**
     * @var \Protobuf\Extension\ExtensionFieldMap
     */
    protected $extensions = null;

    /**
     * response optional uint32 = 1
     *
     * @var int
     */
    protected $response = null;

    /**
     * trade_request_id optional uint32 = 2
     *
     * @var int
     */
    protected $trade_request_id = null;

    /**
     * other_steamid optional uint64 = 3
     *
     * @var int
     */
    protected $other_steamid = null;

    /**
     * steamguard_required_days optional uint32 = 4
     *
     * @var int
     */
    protected $steamguard_required_days = null;

    /**
     * new_device_cooldown_days optional uint32 = 5
     *
     * @var int
     */
    protected $new_device_cooldown_days = null;

    /**
     * default_password_reset_probation_days optional uint32 = 6
     *
     * @var int
     */
    protected $default_password_reset_probation_days = null;

    /**
     * password_reset_probation_days optional uint32 = 7
     *
     * @var int
     */
    protected $password_reset_probation_days = null;

    /**
     * default_email_change_probation_days optional uint32 = 8
     *
     * @var int
     */
    protected $default_email_change_probation_days = null;

    /**
     * email_change_probation_days optional uint32 = 9
     *
     * @var int
     */
    protected $email_change_probation_days = null;

    /**
     * Check if 'response' has a value
     *
     * @return bool
     */
    public function hasResponse()
    {
        return $this->response !== null;
    }

    /**
     * Get 'response' value
     *
     * @return int
     */
    public function getResponse()
    {
        return $this->response;
    }

    /**
     * Set 'response' value
     *
     * @param int $value
     */
    public function setResponse($value = null)
    {
        $this->response = $value;
    }

    /**
     * Check if 'trade_request_id' has a value
     *
     * @return bool
     */
    public function hasTradeRequestId()
    {
        return $this->trade_request_id !== null;
    }

    /**
     * Get 'trade_request_id' value
     *
     * @return int
     */
    public function getTradeRequestId()
    {
        return $this->trade_request_id;
    }

    /**
     * Set 'trade_request_id' value
     *
     * @param int $value
     */
    public function setTradeRequestId($value = null)
    {
        $this->trade_request_id = $value;
    }

    /**
     * Check if 'other_steamid' has a value
     *
     * @return bool
     */
    public function hasOtherSteamid()
    {
        return $this->other_steamid !== null;
    }

    /**
     * Get 'other_steamid' value
     *
     * @return int
     */
    public function getOtherSteamid()
    {
        return $this->other_steamid;
    }

    /**
     * Set 'other_steamid' value
     *
     * @param int $value
     */
    public function setOtherSteamid($value = null)
    {
        $this->other_steamid = $value;
    }

    /**
     * Check if 'steamguard_required_days' has a value
     *
     * @return bool
     */
    public function hasSteamguardRequiredDays()
    {
        return $this->steamguard_required_days !== null;
    }

    /**
     * Get 'steamguard_required_days' value
     *
     * @return int
     */
    public function getSteamguardRequiredDays()
    {
        return $this->steamguard_required_days;
    }

    /**
     * Set 'steamguard_required_days' value
     *
     * @param int $value
     */
    public function setSteamguardRequiredDays($value = null)
    {
        $this->steamguard_required_days = $value;
    }

    /**
     * Check if 'new_device_cooldown_days' has a value
     *
     * @return bool
     */
    public function hasNewDeviceCooldownDays()
    {
        return $this->new_device_cooldown_days !== null;
    }

    /**
     * Get 'new_device_cooldown_days' value
     *
     * @return int
     */
    public function getNewDeviceCooldownDays()
    {
        return $this->new_device_cooldown_days;
    }

    /**
     * Set 'new_device_cooldown_days' value
     *
     * @param int $value
     */
    public function setNewDeviceCooldownDays($value = null)
    {
        $this->new_device_cooldown_days = $value;
    }

    /**
     * Check if 'default_password_reset_probation_days' has a value
     *
     * @return bool
     */
    public function hasDefaultPasswordResetProbationDays()
    {
        return $this->default_password_reset_probation_days !== null;
    }

    /**
     * Get 'default_password_reset_probation_days' value
     *
     * @return int
     */
    public function getDefaultPasswordResetProbationDays()
    {
        return $this->default_password_reset_probation_days;
    }

    /**
     * Set 'default_password_reset_probation_days' value
     *
     * @param int $value
     */
    public function setDefaultPasswordResetProbationDays($value = null)
    {
        $this->default_password_reset_probation_days = $value;
    }

    /**
     * Check if 'password_reset_probation_days' has a value
     *
     * @return bool
     */
    public function hasPasswordResetProbationDays()
    {
        return $this->password_reset_probation_days !== null;
    }

    /**
     * Get 'password_reset_probation_days' value
     *
     * @return int
     */
    public function getPasswordResetProbationDays()
    {
        return $this->password_reset_probation_days;
    }

    /**
     * Set 'password_reset_probation_days' value
     *
     * @param int $value
     */
    public function setPasswordResetProbationDays($value = null)
    {
        $this->password_reset_probation_days = $value;
    }

    /**
     * Check if 'default_email_change_probation_days' has a value
     *
     * @return bool
     */
    public function hasDefaultEmailChangeProbationDays()
    {
        return $this->default_email_change_probation_days !== null;
    }

    /**
     * Get 'default_email_change_probation_days' value
     *
     * @return int
     */
    public function getDefaultEmailChangeProbationDays()
    {
        return $this->default_email_change_probation_days;
    }

    /**
     * Set 'default_email_change_probation_days' value
     *
     * @param int $value
     */
    public function setDefaultEmailChangeProbationDays($value = null)
    {
        $this->default_email_change_probation_days = $value;
    }

    /**
     * Check if 'email_change_probation_days' has a value
     *
     * @return bool
     */
    public function hasEmailChangeProbationDays()
    {
        return $this->email_change_probation_days !== null;
    }

    /**
     * Get 'email_change_probation_days' value
     *
     * @return int
     */
    public function getEmailChangeProbationDays()
    {
        return $this->email_change_probation_days;
    }

    /**
     * Set 'email_change_probation_days' value
     *
     * @param int $value
     */
    public function setEmailChangeProbationDays($value = null)
    {
        $this->email_change_probation_days = $value;
    }

    /**
     * {@inheritdoc}
     */
    public function extensions()
    {
        if ( $this->extensions !== null) {
            return $this->extensions;
        }

        return $this->extensions = new \Protobuf\Extension\ExtensionFieldMap(__CLASS__);
    }

    /**
     * {@inheritdoc}
     */
    public function unknownFieldSet()
    {
        return $this->unknownFieldSet;
    }

    /**
     * {@inheritdoc}
     */
    public static function fromStream($stream, \Protobuf\Configuration $configuration = null)
    {
        return new self($stream, $configuration);
    }

    /**
     * {@inheritdoc}
     */
    public static function fromArray(array $values)
    {
        $message = new self();
        $values  = array_merge([
            'response' => null,
            'trade_request_id' => null,
            'other_steamid' => null,
            'steamguard_required_days' => null,
            'new_device_cooldown_days' => null,
            'default_password_reset_probation_days' => null,
            'password_reset_probation_days' => null,
            'default_email_change_probation_days' => null,
            'email_change_probation_days' => null
        ], $values);

        $message->setResponse($values['response']);
        $message->setTradeRequestId($values['trade_request_id']);
        $message->setOtherSteamid($values['other_steamid']);
        $message->setSteamguardRequiredDays($values['steamguard_required_days']);
        $message->setNewDeviceCooldownDays($values['new_device_cooldown_days']);
        $message->setDefaultPasswordResetProbationDays($values['default_password_reset_probation_days']);
        $message->setPasswordResetProbationDays($values['password_reset_probation_days']);
        $message->setDefaultEmailChangeProbationDays($values['default_email_change_probation_days']);
        $message->setEmailChangeProbationDays($values['email_change_probation_days']);

        return $message;
    }

    /**
     * {@inheritdoc}
     */
    public static function descriptor()
    {
        return \google\protobuf\DescriptorProto::fromArray([
            'name'      => 'CMsgTrading_InitiateTradeResponse',
            'field'     => [
                \google\protobuf\FieldDescriptorProto::fromArray([
                    'number' => 1,
                    'name' => 'response',
                    'type' => \google\protobuf\FieldDescriptorProto\Type::TYPE_UINT32(),
                    'label' => \google\protobuf\FieldDescriptorProto\Label::LABEL_OPTIONAL()
                ]),
                \google\protobuf\FieldDescriptorProto::fromArray([
                    'number' => 2,
                    'name' => 'trade_request_id',
                    'type' => \google\protobuf\FieldDescriptorProto\Type::TYPE_UINT32(),
                    'label' => \google\protobuf\FieldDescriptorProto\Label::LABEL_OPTIONAL()
                ]),
                \google\protobuf\FieldDescriptorProto::fromArray([
                    'number' => 3,
                    'name' => 'other_steamid',
                    'type' => \google\protobuf\FieldDescriptorProto\Type::TYPE_UINT64(),
                    'label' => \google\protobuf\FieldDescriptorProto\Label::LABEL_OPTIONAL()
                ]),
                \google\protobuf\FieldDescriptorProto::fromArray([
                    'number' => 4,
                    'name' => 'steamguard_required_days',
                    'type' => \google\protobuf\FieldDescriptorProto\Type::TYPE_UINT32(),
                    'label' => \google\protobuf\FieldDescriptorProto\Label::LABEL_OPTIONAL()
                ]),
                \google\protobuf\FieldDescriptorProto::fromArray([
                    'number' => 5,
                    'name' => 'new_device_cooldown_days',
                    'type' => \google\protobuf\FieldDescriptorProto\Type::TYPE_UINT32(),
                    'label' => \google\protobuf\FieldDescriptorProto\Label::LABEL_OPTIONAL()
                ]),
                \google\protobuf\FieldDescriptorProto::fromArray([
                    'number' => 6,
                    'name' => 'default_password_reset_probation_days',
                    'type' => \google\protobuf\FieldDescriptorProto\Type::TYPE_UINT32(),
                    'label' => \google\protobuf\FieldDescriptorProto\Label::LABEL_OPTIONAL()
                ]),
                \google\protobuf\FieldDescriptorProto::fromArray([
                    'number' => 7,
                    'name' => 'password_reset_probation_days',
                    'type' => \google\protobuf\FieldDescriptorProto\Type::TYPE_UINT32(),
                    'label' => \google\protobuf\FieldDescriptorProto\Label::LABEL_OPTIONAL()
                ]),
                \google\protobuf\FieldDescriptorProto::fromArray([
                    'number' => 8,
                    'name' => 'default_email_change_probation_days',
                    'type' => \google\protobuf\FieldDescriptorProto\Type::TYPE_UINT32(),
                    'label' => \google\protobuf\FieldDescriptorProto\Label::LABEL_OPTIONAL()
                ]),
                \google\protobuf\FieldDescriptorProto::fromArray([
                    'number' => 9,
                    'name' => 'email_change_probation_days',
                    'type' => \google\protobuf\FieldDescriptorProto\Type::TYPE_UINT32(),
                    'label' => \google\protobuf\FieldDescriptorProto\Label::LABEL_OPTIONAL()
                ]),
            ],
        ]);
    }

    /**
     * {@inheritdoc}
     */
    public function toStream(\Protobuf\Configuration $configuration = null)
    {
        $config  = $configuration ?: \Protobuf\Configuration::getInstance();
        $context = $config->createWriteContext();
        $stream  = $context->getStream();

        $this->writeTo($context);
        $stream->seek(0);

        return $stream;
    }

    /**
     * {@inheritdoc}
     */
    public function writeTo(\Protobuf\WriteContext $context)
    {
        $stream      = $context->getStream();
        $writer      = $context->getWriter();
        $sizeContext = $context->getComputeSizeContext();

        if ($this->response !== null) {
            $writer->writeVarint($stream, 8);
            $writer->writeVarint($stream, $this->response);
        }

        if ($this->trade_request_id !== null) {
            $writer->writeVarint($stream, 16);
            $writer->writeVarint($stream, $this->trade_request_id);
        }

        if ($this->other_steamid !== null) {
            $writer->writeVarint($stream, 24);
            $writer->writeVarint($stream, $this->other_steamid);
        }

        if ($this->steamguard_required_days !== null) {
            $writer->writeVarint($stream, 32);
            $writer->writeVarint($stream, $this->steamguard_required_days);
        }

        if ($this->new_device_cooldown_days !== null) {
            $writer->writeVarint($stream, 40);
            $writer->writeVarint($stream, $this->new_device_cooldown_days);
        }

        if ($this->default_password_reset_probation_days !== null) {
            $writer->writeVarint($stream, 48);
            $writer->writeVarint($stream, $this->default_password_reset_probation_days);
        }

        if ($this->password_reset_probation_days !== null) {
            $writer->writeVarint($stream, 56);
            $writer->writeVarint($stream, $this->password_reset_probation_days);
        }

        if ($this->default_email_change_probation_days !== null) {
            $writer->writeVarint($stream, 64);
            $writer->writeVarint($stream, $this->default_email_change_probation_days);
        }

        if ($this->email_change_probation_days !== null) {
            $writer->writeVarint($stream, 72);
            $writer->writeVarint($stream, $this->email_change_probation_days);
        }

        if ($this->extensions !== null) {
            $this->extensions->writeTo($context);
        }

        return $stream;
    }

    /**
     * {@inheritdoc}
     */
    public function readFrom(\Protobuf\ReadContext $context)
    {
        $reader = $context->getReader();
        $length = $context->getLength();
        $stream = $context->getStream();

        $limit = ($length !== null)
            ? ($stream->tell() + $length)
            : null;

        while ($limit === null || $stream->tell() < $limit) {

            if ($stream->eof()) {
                break;
            }

            $key  = $reader->readVarint($stream);
            $wire = \Protobuf\WireFormat::getTagWireType($key);
            $tag  = \Protobuf\WireFormat::getTagFieldNumber($key);

            if ($stream->eof()) {
                break;
            }

            if ($tag === 1) {
                \Protobuf\WireFormat::assertWireType($wire, 13);

                $this->response = $reader->readVarint($stream);

                continue;
            }

            if ($tag === 2) {
                \Protobuf\WireFormat::assertWireType($wire, 13);

                $this->trade_request_id = $reader->readVarint($stream);

                continue;
            }

            if ($tag === 3) {
                \Protobuf\WireFormat::assertWireType($wire, 4);

                $this->other_steamid = $reader->readVarint($stream);

                continue;
            }

            if ($tag === 4) {
                \Protobuf\WireFormat::assertWireType($wire, 13);

                $this->steamguard_required_days = $reader->readVarint($stream);

                continue;
            }

            if ($tag === 5) {
                \Protobuf\WireFormat::assertWireType($wire, 13);

                $this->new_device_cooldown_days = $reader->readVarint($stream);

                continue;
            }

            if ($tag === 6) {
                \Protobuf\WireFormat::assertWireType($wire, 13);

                $this->default_password_reset_probation_days = $reader->readVarint($stream);

                continue;
            }

            if ($tag === 7) {
                \Protobuf\WireFormat::assertWireType($wire, 13);

                $this->password_reset_probation_days = $reader->readVarint($stream);

                continue;
            }

            if ($tag === 8) {
                \Protobuf\WireFormat::assertWireType($wire, 13);

                $this->default_email_change_probation_days = $reader->readVarint($stream);

                continue;
            }

            if ($tag === 9) {
                \Protobuf\WireFormat::assertWireType($wire, 13);

                $this->email_change_probation_days = $reader->readVarint($stream);

                continue;
            }

            $extensions = $context->getExtensionRegistry();
            $extension  = $extensions ? $extensions->findByNumber(__CLASS__, $tag) : null;

            if ($extension !== null) {
                $this->extensions()->add($extension, $extension->readFrom($context, $wire));

                continue;
            }

            if ($this->unknownFieldSet === null) {
                $this->unknownFieldSet = new \Protobuf\UnknownFieldSet();
            }

            $data    = $reader->readUnknown($stream, $wire);
            $unknown = new \Protobuf\Unknown($tag, $wire, $data);

            $this->unknownFieldSet->add($unknown);

        }
    }

    /**
     * {@inheritdoc}
     */
    public function serializedSize(\Protobuf\ComputeSizeContext $context)
    {
        $calculator = $context->getSizeCalculator();
        $size       = 0;

        if ($this->response !== null) {
            $size += 1;
            $size += $calculator->computeVarintSize($this->response);
        }

        if ($this->trade_request_id !== null) {
            $size += 1;
            $size += $calculator->computeVarintSize($this->trade_request_id);
        }

        if ($this->other_steamid !== null) {
            $size += 1;
            $size += $calculator->computeVarintSize($this->other_steamid);
        }

        if ($this->steamguard_required_days !== null) {
            $size += 1;
            $size += $calculator->computeVarintSize($this->steamguard_required_days);
        }

        if ($this->new_device_cooldown_days !== null) {
            $size += 1;
            $size += $calculator->computeVarintSize($this->new_device_cooldown_days);
        }

        if ($this->default_password_reset_probation_days !== null) {
            $size += 1;
            $size += $calculator->computeVarintSize($this->default_password_reset_probation_days);
        }

        if ($this->password_reset_probation_days !== null) {
            $size += 1;
            $size += $calculator->computeVarintSize($this->password_reset_probation_days);
        }

        if ($this->default_email_change_probation_days !== null) {
            $size += 1;
            $size += $calculator->computeVarintSize($this->default_email_change_probation_days);
        }

        if ($this->email_change_probation_days !== null) {
            $size += 1;
            $size += $calculator->computeVarintSize($this->email_change_probation_days);
        }

        if ($this->extensions !== null) {
            $size += $this->extensions->serializedSize($context);
        }

        return $size;
    }

    /**
     * {@inheritdoc}
     */
    public function clear()
    {
        $this->response = null;
        $this->trade_request_id = null;
        $this->other_steamid = null;
        $this->steamguard_required_days = null;
        $this->new_device_cooldown_days = null;
        $this->default_password_reset_probation_days = null;
        $this->password_reset_probation_days = null;
        $this->default_email_change_probation_days = null;
        $this->email_change_probation_days = null;
    }

    /**
     * {@inheritdoc}
     */
    public function merge(\Protobuf\Message $message)
    {
        if ( ! $message instanceof \SteamKit\Base\SteamMsgClientServer2\CMsgTrading_InitiateTradeResponse) {
            throw new \InvalidArgumentException(sprintf('Argument 1 passed to %s must be a %s, %s given', __METHOD__, __CLASS__, get_class($message)));
        }

        $this->response = ($message->response !== null) ? $message->response : $this->response;
        $this->trade_request_id = ($message->trade_request_id !== null) ? $message->trade_request_id : $this->trade_request_id;
        $this->other_steamid = ($message->other_steamid !== null) ? $message->other_steamid : $this->other_steamid;
        $this->steamguard_required_days = ($message->steamguard_required_days !== null) ? $message->steamguard_required_days : $this->steamguard_required_days;
        $this->new_device_cooldown_days = ($message->new_device_cooldown_days !== null) ? $message->new_device_cooldown_days : $this->new_device_cooldown_days;
        $this->default_password_reset_probation_days = ($message->default_password_reset_probation_days !== null) ? $message->default_password_reset_probation_days : $this->default_password_reset_probation_days;
        $this->password_reset_probation_days = ($message->password_reset_probation_days !== null) ? $message->password_reset_probation_days : $this->password_reset_probation_days;
        $this->default_email_change_probation_days = ($message->default_email_change_probation_days !== null) ? $message->default_email_change_probation_days : $this->default_email_change_probation_days;
        $this->email_change_probation_days = ($message->email_change_probation_days !== null) ? $message->email_change_probation_days : $this->email_change_probation_days;
    }


}

