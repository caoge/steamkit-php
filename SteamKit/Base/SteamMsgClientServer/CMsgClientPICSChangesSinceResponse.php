<?php
/**
 * Generated by Protobuf protoc plugin.
 *
 * File descriptor : steamclient/steammessages_clientserver.proto
 */


namespace SteamKit\Base\SteamMsgClientServer;

/**
 * Protobuf message :
 * SteamKit.Base.SteamMsgClientServer.CMsgClientPICSChangesSinceResponse
 */
class CMsgClientPICSChangesSinceResponse extends \Protobuf\AbstractMessage
{

    /**
     * @var \Protobuf\UnknownFieldSet
     */
    protected $unknownFieldSet = null;

    /**
     * @var \Protobuf\Extension\ExtensionFieldMap
     */
    protected $extensions = null;

    /**
     * current_change_number optional uint32 = 1
     *
     * @var int
     */
    protected $current_change_number = null;

    /**
     * since_change_number optional uint32 = 2
     *
     * @var int
     */
    protected $since_change_number = null;

    /**
     * force_full_update optional bool = 3
     *
     * @var bool
     */
    protected $force_full_update = null;

    /**
     * package_changes repeated message = 4
     *
     * @var \Protobuf\Collection<\SteamKit\Base\SteamMsgClientServer\CMsgClientPICSChangesSinceResponse\PackageChange>
     */
    protected $package_changes = null;

    /**
     * app_changes repeated message = 5
     *
     * @var \Protobuf\Collection<\SteamKit\Base\SteamMsgClientServer\CMsgClientPICSChangesSinceResponse\AppChange>
     */
    protected $app_changes = null;

    /**
     * force_full_app_update optional bool = 6
     *
     * @var bool
     */
    protected $force_full_app_update = null;

    /**
     * force_full_package_update optional bool = 7
     *
     * @var bool
     */
    protected $force_full_package_update = null;

    /**
     * Check if 'current_change_number' has a value
     *
     * @return bool
     */
    public function hasCurrentChangeNumber()
    {
        return $this->current_change_number !== null;
    }

    /**
     * Get 'current_change_number' value
     *
     * @return int
     */
    public function getCurrentChangeNumber()
    {
        return $this->current_change_number;
    }

    /**
     * Set 'current_change_number' value
     *
     * @param int $value
     */
    public function setCurrentChangeNumber($value = null)
    {
        $this->current_change_number = $value;
    }

    /**
     * Check if 'since_change_number' has a value
     *
     * @return bool
     */
    public function hasSinceChangeNumber()
    {
        return $this->since_change_number !== null;
    }

    /**
     * Get 'since_change_number' value
     *
     * @return int
     */
    public function getSinceChangeNumber()
    {
        return $this->since_change_number;
    }

    /**
     * Set 'since_change_number' value
     *
     * @param int $value
     */
    public function setSinceChangeNumber($value = null)
    {
        $this->since_change_number = $value;
    }

    /**
     * Check if 'force_full_update' has a value
     *
     * @return bool
     */
    public function hasForceFullUpdate()
    {
        return $this->force_full_update !== null;
    }

    /**
     * Get 'force_full_update' value
     *
     * @return bool
     */
    public function getForceFullUpdate()
    {
        return $this->force_full_update;
    }

    /**
     * Set 'force_full_update' value
     *
     * @param bool $value
     */
    public function setForceFullUpdate($value = null)
    {
        $this->force_full_update = $value;
    }

    /**
     * Check if 'package_changes' has a value
     *
     * @return bool
     */
    public function hasPackageChangesList()
    {
        return $this->package_changes !== null;
    }

    /**
     * Get 'package_changes' value
     *
     * @return \Protobuf\Collection<\SteamKit\Base\SteamMsgClientServer\CMsgClientPICSChangesSinceResponse\PackageChange>
     */
    public function getPackageChangesList()
    {
        return $this->package_changes;
    }

    /**
     * Set 'package_changes' value
     *
     * @param \Protobuf\Collection<\SteamKit\Base\SteamMsgClientServer\CMsgClientPICSChangesSinceResponse\PackageChange> $value
     */
    public function setPackageChangesList(\Protobuf\Collection $value = null)
    {
        $this->package_changes = $value;
    }

    /**
     * Add a new element to 'package_changes'
     *
     * @param
     * \SteamKit\Base\SteamMsgClientServer\CMsgClientPICSChangesSinceResponse\PackageChange
     * $value
     */
    public function addPackageChanges(\SteamKit\Base\SteamMsgClientServer\CMsgClientPICSChangesSinceResponse\PackageChange $value)
    {
        if ($this->package_changes === null) {
            $this->package_changes = new \Protobuf\MessageCollection();
        }

        $this->package_changes->add($value);
    }

    /**
     * Check if 'app_changes' has a value
     *
     * @return bool
     */
    public function hasAppChangesList()
    {
        return $this->app_changes !== null;
    }

    /**
     * Get 'app_changes' value
     *
     * @return \Protobuf\Collection<\SteamKit\Base\SteamMsgClientServer\CMsgClientPICSChangesSinceResponse\AppChange>
     */
    public function getAppChangesList()
    {
        return $this->app_changes;
    }

    /**
     * Set 'app_changes' value
     *
     * @param \Protobuf\Collection<\SteamKit\Base\SteamMsgClientServer\CMsgClientPICSChangesSinceResponse\AppChange> $value
     */
    public function setAppChangesList(\Protobuf\Collection $value = null)
    {
        $this->app_changes = $value;
    }

    /**
     * Add a new element to 'app_changes'
     *
     * @param
     * \SteamKit\Base\SteamMsgClientServer\CMsgClientPICSChangesSinceResponse\AppChange
     * $value
     */
    public function addAppChanges(\SteamKit\Base\SteamMsgClientServer\CMsgClientPICSChangesSinceResponse\AppChange $value)
    {
        if ($this->app_changes === null) {
            $this->app_changes = new \Protobuf\MessageCollection();
        }

        $this->app_changes->add($value);
    }

    /**
     * Check if 'force_full_app_update' has a value
     *
     * @return bool
     */
    public function hasForceFullAppUpdate()
    {
        return $this->force_full_app_update !== null;
    }

    /**
     * Get 'force_full_app_update' value
     *
     * @return bool
     */
    public function getForceFullAppUpdate()
    {
        return $this->force_full_app_update;
    }

    /**
     * Set 'force_full_app_update' value
     *
     * @param bool $value
     */
    public function setForceFullAppUpdate($value = null)
    {
        $this->force_full_app_update = $value;
    }

    /**
     * Check if 'force_full_package_update' has a value
     *
     * @return bool
     */
    public function hasForceFullPackageUpdate()
    {
        return $this->force_full_package_update !== null;
    }

    /**
     * Get 'force_full_package_update' value
     *
     * @return bool
     */
    public function getForceFullPackageUpdate()
    {
        return $this->force_full_package_update;
    }

    /**
     * Set 'force_full_package_update' value
     *
     * @param bool $value
     */
    public function setForceFullPackageUpdate($value = null)
    {
        $this->force_full_package_update = $value;
    }

    /**
     * {@inheritdoc}
     */
    public function extensions()
    {
        if ( $this->extensions !== null) {
            return $this->extensions;
        }

        return $this->extensions = new \Protobuf\Extension\ExtensionFieldMap(__CLASS__);
    }

    /**
     * {@inheritdoc}
     */
    public function unknownFieldSet()
    {
        return $this->unknownFieldSet;
    }

    /**
     * {@inheritdoc}
     */
    public static function fromStream($stream, \Protobuf\Configuration $configuration = null)
    {
        return new self($stream, $configuration);
    }

    /**
     * {@inheritdoc}
     */
    public static function fromArray(array $values)
    {
        $message = new self();
        $values  = array_merge([
            'current_change_number' => null,
            'since_change_number' => null,
            'force_full_update' => null,
            'package_changes' => [],
            'app_changes' => [],
            'force_full_app_update' => null,
            'force_full_package_update' => null
        ], $values);

        $message->setCurrentChangeNumber($values['current_change_number']);
        $message->setSinceChangeNumber($values['since_change_number']);
        $message->setForceFullUpdate($values['force_full_update']);
        $message->setForceFullAppUpdate($values['force_full_app_update']);
        $message->setForceFullPackageUpdate($values['force_full_package_update']);

        foreach ($values['package_changes'] as $item) {
            $message->addPackageChanges($item);
        }

        foreach ($values['app_changes'] as $item) {
            $message->addAppChanges($item);
        }

        return $message;
    }

    /**
     * {@inheritdoc}
     */
    public static function descriptor()
    {
        return \google\protobuf\DescriptorProto::fromArray([
            'name'      => 'CMsgClientPICSChangesSinceResponse',
            'field'     => [
                \google\protobuf\FieldDescriptorProto::fromArray([
                    'number' => 1,
                    'name' => 'current_change_number',
                    'type' => \google\protobuf\FieldDescriptorProto\Type::TYPE_UINT32(),
                    'label' => \google\protobuf\FieldDescriptorProto\Label::LABEL_OPTIONAL()
                ]),
                \google\protobuf\FieldDescriptorProto::fromArray([
                    'number' => 2,
                    'name' => 'since_change_number',
                    'type' => \google\protobuf\FieldDescriptorProto\Type::TYPE_UINT32(),
                    'label' => \google\protobuf\FieldDescriptorProto\Label::LABEL_OPTIONAL()
                ]),
                \google\protobuf\FieldDescriptorProto::fromArray([
                    'number' => 3,
                    'name' => 'force_full_update',
                    'type' => \google\protobuf\FieldDescriptorProto\Type::TYPE_BOOL(),
                    'label' => \google\protobuf\FieldDescriptorProto\Label::LABEL_OPTIONAL()
                ]),
                \google\protobuf\FieldDescriptorProto::fromArray([
                    'number' => 4,
                    'name' => 'package_changes',
                    'type' => \google\protobuf\FieldDescriptorProto\Type::TYPE_MESSAGE(),
                    'label' => \google\protobuf\FieldDescriptorProto\Label::LABEL_REPEATED(),
                    'type_name' => '.SteamKit.Base.SteamMsgClientServer.CMsgClientPICSChangesSinceResponse.PackageChange'
                ]),
                \google\protobuf\FieldDescriptorProto::fromArray([
                    'number' => 5,
                    'name' => 'app_changes',
                    'type' => \google\protobuf\FieldDescriptorProto\Type::TYPE_MESSAGE(),
                    'label' => \google\protobuf\FieldDescriptorProto\Label::LABEL_REPEATED(),
                    'type_name' => '.SteamKit.Base.SteamMsgClientServer.CMsgClientPICSChangesSinceResponse.AppChange'
                ]),
                \google\protobuf\FieldDescriptorProto::fromArray([
                    'number' => 6,
                    'name' => 'force_full_app_update',
                    'type' => \google\protobuf\FieldDescriptorProto\Type::TYPE_BOOL(),
                    'label' => \google\protobuf\FieldDescriptorProto\Label::LABEL_OPTIONAL()
                ]),
                \google\protobuf\FieldDescriptorProto::fromArray([
                    'number' => 7,
                    'name' => 'force_full_package_update',
                    'type' => \google\protobuf\FieldDescriptorProto\Type::TYPE_BOOL(),
                    'label' => \google\protobuf\FieldDescriptorProto\Label::LABEL_OPTIONAL()
                ]),
            ],
        ]);
    }

    /**
     * {@inheritdoc}
     */
    public function toStream(\Protobuf\Configuration $configuration = null)
    {
        $config  = $configuration ?: \Protobuf\Configuration::getInstance();
        $context = $config->createWriteContext();
        $stream  = $context->getStream();

        $this->writeTo($context);
        $stream->seek(0);

        return $stream;
    }

    /**
     * {@inheritdoc}
     */
    public function writeTo(\Protobuf\WriteContext $context)
    {
        $stream      = $context->getStream();
        $writer      = $context->getWriter();
        $sizeContext = $context->getComputeSizeContext();

        if ($this->current_change_number !== null) {
            $writer->writeVarint($stream, 8);
            $writer->writeVarint($stream, $this->current_change_number);
        }

        if ($this->since_change_number !== null) {
            $writer->writeVarint($stream, 16);
            $writer->writeVarint($stream, $this->since_change_number);
        }

        if ($this->force_full_update !== null) {
            $writer->writeVarint($stream, 24);
            $writer->writeBool($stream, $this->force_full_update);
        }

        if ($this->package_changes !== null) {
            foreach ($this->package_changes as $val) {
                $writer->writeVarint($stream, 34);
                $writer->writeVarint($stream, $val->serializedSize($sizeContext));
                $val->writeTo($context);
            }
        }

        if ($this->app_changes !== null) {
            foreach ($this->app_changes as $val) {
                $writer->writeVarint($stream, 42);
                $writer->writeVarint($stream, $val->serializedSize($sizeContext));
                $val->writeTo($context);
            }
        }

        if ($this->force_full_app_update !== null) {
            $writer->writeVarint($stream, 48);
            $writer->writeBool($stream, $this->force_full_app_update);
        }

        if ($this->force_full_package_update !== null) {
            $writer->writeVarint($stream, 56);
            $writer->writeBool($stream, $this->force_full_package_update);
        }

        if ($this->extensions !== null) {
            $this->extensions->writeTo($context);
        }

        return $stream;
    }

    /**
     * {@inheritdoc}
     */
    public function readFrom(\Protobuf\ReadContext $context)
    {
        $reader = $context->getReader();
        $length = $context->getLength();
        $stream = $context->getStream();

        $limit = ($length !== null)
            ? ($stream->tell() + $length)
            : null;

        while ($limit === null || $stream->tell() < $limit) {

            if ($stream->eof()) {
                break;
            }

            $key  = $reader->readVarint($stream);
            $wire = \Protobuf\WireFormat::getTagWireType($key);
            $tag  = \Protobuf\WireFormat::getTagFieldNumber($key);

            if ($stream->eof()) {
                break;
            }

            if ($tag === 1) {
                \Protobuf\WireFormat::assertWireType($wire, 13);

                $this->current_change_number = $reader->readVarint($stream);

                continue;
            }

            if ($tag === 2) {
                \Protobuf\WireFormat::assertWireType($wire, 13);

                $this->since_change_number = $reader->readVarint($stream);

                continue;
            }

            if ($tag === 3) {
                \Protobuf\WireFormat::assertWireType($wire, 8);

                $this->force_full_update = $reader->readBool($stream);

                continue;
            }

            if ($tag === 4) {
                \Protobuf\WireFormat::assertWireType($wire, 11);

                $innerSize    = $reader->readVarint($stream);
                $innerMessage = new \SteamKit\Base\SteamMsgClientServer\CMsgClientPICSChangesSinceResponse\PackageChange();

                if ($this->package_changes === null) {
                    $this->package_changes = new \Protobuf\MessageCollection();
                }

                $this->package_changes->add($innerMessage);

                $context->setLength($innerSize);
                $innerMessage->readFrom($context);
                $context->setLength($length);

                continue;
            }

            if ($tag === 5) {
                \Protobuf\WireFormat::assertWireType($wire, 11);

                $innerSize    = $reader->readVarint($stream);
                $innerMessage = new \SteamKit\Base\SteamMsgClientServer\CMsgClientPICSChangesSinceResponse\AppChange();

                if ($this->app_changes === null) {
                    $this->app_changes = new \Protobuf\MessageCollection();
                }

                $this->app_changes->add($innerMessage);

                $context->setLength($innerSize);
                $innerMessage->readFrom($context);
                $context->setLength($length);

                continue;
            }

            if ($tag === 6) {
                \Protobuf\WireFormat::assertWireType($wire, 8);

                $this->force_full_app_update = $reader->readBool($stream);

                continue;
            }

            if ($tag === 7) {
                \Protobuf\WireFormat::assertWireType($wire, 8);

                $this->force_full_package_update = $reader->readBool($stream);

                continue;
            }

            $extensions = $context->getExtensionRegistry();
            $extension  = $extensions ? $extensions->findByNumber(__CLASS__, $tag) : null;

            if ($extension !== null) {
                $this->extensions()->add($extension, $extension->readFrom($context, $wire));

                continue;
            }

            if ($this->unknownFieldSet === null) {
                $this->unknownFieldSet = new \Protobuf\UnknownFieldSet();
            }

            $data    = $reader->readUnknown($stream, $wire);
            $unknown = new \Protobuf\Unknown($tag, $wire, $data);

            $this->unknownFieldSet->add($unknown);

        }
    }

    /**
     * {@inheritdoc}
     */
    public function serializedSize(\Protobuf\ComputeSizeContext $context)
    {
        $calculator = $context->getSizeCalculator();
        $size       = 0;

        if ($this->current_change_number !== null) {
            $size += 1;
            $size += $calculator->computeVarintSize($this->current_change_number);
        }

        if ($this->since_change_number !== null) {
            $size += 1;
            $size += $calculator->computeVarintSize($this->since_change_number);
        }

        if ($this->force_full_update !== null) {
            $size += 1;
            $size += 1;
        }

        if ($this->package_changes !== null) {
            foreach ($this->package_changes as $val) {
                $innerSize = $val->serializedSize($context);

                $size += 1;
                $size += $innerSize;
                $size += $calculator->computeVarintSize($innerSize);
            }
        }

        if ($this->app_changes !== null) {
            foreach ($this->app_changes as $val) {
                $innerSize = $val->serializedSize($context);

                $size += 1;
                $size += $innerSize;
                $size += $calculator->computeVarintSize($innerSize);
            }
        }

        if ($this->force_full_app_update !== null) {
            $size += 1;
            $size += 1;
        }

        if ($this->force_full_package_update !== null) {
            $size += 1;
            $size += 1;
        }

        if ($this->extensions !== null) {
            $size += $this->extensions->serializedSize($context);
        }

        return $size;
    }

    /**
     * {@inheritdoc}
     */
    public function clear()
    {
        $this->current_change_number = null;
        $this->since_change_number = null;
        $this->force_full_update = null;
        $this->package_changes = null;
        $this->app_changes = null;
        $this->force_full_app_update = null;
        $this->force_full_package_update = null;
    }

    /**
     * {@inheritdoc}
     */
    public function merge(\Protobuf\Message $message)
    {
        if ( ! $message instanceof \SteamKit\Base\SteamMsgClientServer\CMsgClientPICSChangesSinceResponse) {
            throw new \InvalidArgumentException(sprintf('Argument 1 passed to %s must be a %s, %s given', __METHOD__, __CLASS__, get_class($message)));
        }

        $this->current_change_number = ($message->current_change_number !== null) ? $message->current_change_number : $this->current_change_number;
        $this->since_change_number = ($message->since_change_number !== null) ? $message->since_change_number : $this->since_change_number;
        $this->force_full_update = ($message->force_full_update !== null) ? $message->force_full_update : $this->force_full_update;
        $this->package_changes = ($message->package_changes !== null) ? $message->package_changes : $this->package_changes;
        $this->app_changes = ($message->app_changes !== null) ? $message->app_changes : $this->app_changes;
        $this->force_full_app_update = ($message->force_full_app_update !== null) ? $message->force_full_app_update : $this->force_full_app_update;
        $this->force_full_package_update = ($message->force_full_package_update !== null) ? $message->force_full_package_update : $this->force_full_package_update;
    }


}

