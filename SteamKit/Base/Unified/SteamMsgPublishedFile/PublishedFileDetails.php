<?php
/**
 * Generated by Protobuf protoc plugin.
 *
 * File descriptor : steamclient/steammessages_publishedfile.steamclient.proto
 */


namespace SteamKit\Base\Unified\SteamMsgPublishedFile;

/**
 * Protobuf message :
 * SteamKit.Base.Unified.SteamMsgPublishedFile.PublishedFileDetails
 */
class PublishedFileDetails extends \Protobuf\AbstractMessage
{

    /**
     * @var \Protobuf\UnknownFieldSet
     */
    protected $unknownFieldSet = null;

    /**
     * @var \Protobuf\Extension\ExtensionFieldMap
     */
    protected $extensions = null;

    /**
     * result optional uint32 = 1
     *
     * @var int
     */
    protected $result = null;

    /**
     * publishedfileid optional uint64 = 2
     *
     * @var int
     */
    protected $publishedfileid = null;

    /**
     * creator optional fixed64 = 3
     *
     * @var int
     */
    protected $creator = null;

    /**
     * creator_appid optional uint32 = 4
     *
     * @var int
     */
    protected $creator_appid = null;

    /**
     * consumer_appid optional uint32 = 5
     *
     * @var int
     */
    protected $consumer_appid = null;

    /**
     * consumer_shortcutid optional uint32 = 6
     *
     * @var int
     */
    protected $consumer_shortcutid = null;

    /**
     * filename optional string = 7
     *
     * @var string
     */
    protected $filename = null;

    /**
     * file_size optional uint64 = 8
     *
     * @var int
     */
    protected $file_size = null;

    /**
     * preview_file_size optional uint64 = 9
     *
     * @var int
     */
    protected $preview_file_size = null;

    /**
     * file_url optional string = 10
     *
     * @var string
     */
    protected $file_url = null;

    /**
     * preview_url optional string = 11
     *
     * @var string
     */
    protected $preview_url = null;

    /**
     * youtubevideoid optional string = 12
     *
     * @var string
     */
    protected $youtubevideoid = null;

    /**
     * url optional string = 13
     *
     * @var string
     */
    protected $url = null;

    /**
     * hcontent_file optional fixed64 = 14
     *
     * @var int
     */
    protected $hcontent_file = null;

    /**
     * hcontent_preview optional fixed64 = 15
     *
     * @var int
     */
    protected $hcontent_preview = null;

    /**
     * title optional string = 16
     *
     * @var string
     */
    protected $title = null;

    /**
     * file_description optional string = 17
     *
     * @var string
     */
    protected $file_description = null;

    /**
     * short_description optional string = 18
     *
     * @var string
     */
    protected $short_description = null;

    /**
     * time_created optional uint32 = 19
     *
     * @var int
     */
    protected $time_created = null;

    /**
     * time_updated optional uint32 = 20
     *
     * @var int
     */
    protected $time_updated = null;

    /**
     * visibility optional uint32 = 21
     *
     * @var int
     */
    protected $visibility = null;

    /**
     * flags optional uint32 = 22
     *
     * @var int
     */
    protected $flags = null;

    /**
     * workshop_file optional bool = 23
     *
     * @var bool
     */
    protected $workshop_file = null;

    /**
     * workshop_accepted optional bool = 24
     *
     * @var bool
     */
    protected $workshop_accepted = null;

    /**
     * show_subscribe_all optional bool = 25
     *
     * @var bool
     */
    protected $show_subscribe_all = null;

    /**
     * num_comments_developer optional int32 = 26
     *
     * @var int
     */
    protected $num_comments_developer = null;

    /**
     * num_comments_public optional int32 = 27
     *
     * @var int
     */
    protected $num_comments_public = null;

    /**
     * banned optional bool = 28
     *
     * @var bool
     */
    protected $banned = null;

    /**
     * ban_reason optional string = 29
     *
     * @var string
     */
    protected $ban_reason = null;

    /**
     * banner optional fixed64 = 30
     *
     * @var int
     */
    protected $banner = null;

    /**
     * can_be_deleted optional bool = 31
     *
     * @var bool
     */
    protected $can_be_deleted = null;

    /**
     * incompatible optional bool = 32
     *
     * @var bool
     */
    protected $incompatible = null;

    /**
     * app_name optional string = 33
     *
     * @var string
     */
    protected $app_name = null;

    /**
     * file_type optional uint32 = 34
     *
     * @var int
     */
    protected $file_type = null;

    /**
     * can_subscribe optional bool = 35
     *
     * @var bool
     */
    protected $can_subscribe = null;

    /**
     * subscriptions optional uint32 = 36
     *
     * @var int
     */
    protected $subscriptions = null;

    /**
     * favorited optional uint32 = 37
     *
     * @var int
     */
    protected $favorited = null;

    /**
     * followers optional uint32 = 38
     *
     * @var int
     */
    protected $followers = null;

    /**
     * lifetime_subscriptions optional uint32 = 39
     *
     * @var int
     */
    protected $lifetime_subscriptions = null;

    /**
     * lifetime_favorited optional uint32 = 40
     *
     * @var int
     */
    protected $lifetime_favorited = null;

    /**
     * lifetime_followers optional uint32 = 41
     *
     * @var int
     */
    protected $lifetime_followers = null;

    /**
     * lifetime_playtime optional uint64 = 62
     *
     * @var int
     */
    protected $lifetime_playtime = null;

    /**
     * lifetime_playtime_sessions optional uint64 = 63
     *
     * @var int
     */
    protected $lifetime_playtime_sessions = null;

    /**
     * views optional uint32 = 42
     *
     * @var int
     */
    protected $views = null;

    /**
     * image_width optional uint32 = 43
     *
     * @var int
     */
    protected $image_width = null;

    /**
     * image_height optional uint32 = 44
     *
     * @var int
     */
    protected $image_height = null;

    /**
     * image_url optional string = 45
     *
     * @var string
     */
    protected $image_url = null;

    /**
     * spoiler_tag optional bool = 46
     *
     * @var bool
     */
    protected $spoiler_tag = null;

    /**
     * shortcutid optional uint32 = 47
     *
     * @var int
     */
    protected $shortcutid = null;

    /**
     * shortcutname optional string = 48
     *
     * @var string
     */
    protected $shortcutname = null;

    /**
     * num_children optional uint32 = 49
     *
     * @var int
     */
    protected $num_children = null;

    /**
     * num_reports optional uint32 = 50
     *
     * @var int
     */
    protected $num_reports = null;

    /**
     * previews repeated message = 51
     *
     * @var \Protobuf\Collection<\SteamKit\Base\Unified\SteamMsgPublishedFile\PublishedFileDetails\Preview>
     */
    protected $previews = null;

    /**
     * tags repeated message = 52
     *
     * @var \Protobuf\Collection<\SteamKit\Base\Unified\SteamMsgPublishedFile\PublishedFileDetails\Tag>
     */
    protected $tags = null;

    /**
     * children repeated message = 53
     *
     * @var \Protobuf\Collection<\SteamKit\Base\Unified\SteamMsgPublishedFile\PublishedFileDetails\Child>
     */
    protected $children = null;

    /**
     * kvtags repeated message = 54
     *
     * @var \Protobuf\Collection<\SteamKit\Base\Unified\SteamMsgPublishedFile\PublishedFileDetails\KVTag>
     */
    protected $kvtags = null;

    /**
     * vote_data optional message = 55
     *
     * @var \SteamKit\Base\Unified\SteamMsgPublishedFile\PublishedFileDetails\VoteData
     */
    protected $vote_data = null;

    /**
     * time_subscribed optional uint32 = 56
     *
     * @var int
     */
    protected $time_subscribed = null;

    /**
     * for_sale_data optional message = 57
     *
     * @var \SteamKit\Base\Unified\SteamMsgPublishedFile\PublishedFileDetails\ForSaleData
     */
    protected $for_sale_data = null;

    /**
     * metadata optional string = 58
     *
     * @var string
     */
    protected $metadata = null;

    /**
     * incompatible_actor optional fixed64 = 59
     *
     * @var int
     */
    protected $incompatible_actor = null;

    /**
     * incompatible_timestamp optional uint32 = 60
     *
     * @var int
     */
    protected $incompatible_timestamp = null;

    /**
     * language optional int32 = 61
     *
     * @var int
     */
    protected $language = null;

    /**
     * {@inheritdoc}
     */
    public function __construct($stream = null, \Protobuf\Configuration $configuration = null)
    {
        $this->language = '0';

        parent::__construct($stream, $configuration);
    }

    /**
     * Check if 'result' has a value
     *
     * @return bool
     */
    public function hasResult()
    {
        return $this->result !== null;
    }

    /**
     * Get 'result' value
     *
     * @return int
     */
    public function getResult()
    {
        return $this->result;
    }

    /**
     * Set 'result' value
     *
     * @param int $value
     */
    public function setResult($value = null)
    {
        $this->result = $value;
    }

    /**
     * Check if 'publishedfileid' has a value
     *
     * @return bool
     */
    public function hasPublishedfileid()
    {
        return $this->publishedfileid !== null;
    }

    /**
     * Get 'publishedfileid' value
     *
     * @return int
     */
    public function getPublishedfileid()
    {
        return $this->publishedfileid;
    }

    /**
     * Set 'publishedfileid' value
     *
     * @param int $value
     */
    public function setPublishedfileid($value = null)
    {
        $this->publishedfileid = $value;
    }

    /**
     * Check if 'creator' has a value
     *
     * @return bool
     */
    public function hasCreator()
    {
        return $this->creator !== null;
    }

    /**
     * Get 'creator' value
     *
     * @return int
     */
    public function getCreator()
    {
        return $this->creator;
    }

    /**
     * Set 'creator' value
     *
     * @param int $value
     */
    public function setCreator($value = null)
    {
        $this->creator = $value;
    }

    /**
     * Check if 'creator_appid' has a value
     *
     * @return bool
     */
    public function hasCreatorAppid()
    {
        return $this->creator_appid !== null;
    }

    /**
     * Get 'creator_appid' value
     *
     * @return int
     */
    public function getCreatorAppid()
    {
        return $this->creator_appid;
    }

    /**
     * Set 'creator_appid' value
     *
     * @param int $value
     */
    public function setCreatorAppid($value = null)
    {
        $this->creator_appid = $value;
    }

    /**
     * Check if 'consumer_appid' has a value
     *
     * @return bool
     */
    public function hasConsumerAppid()
    {
        return $this->consumer_appid !== null;
    }

    /**
     * Get 'consumer_appid' value
     *
     * @return int
     */
    public function getConsumerAppid()
    {
        return $this->consumer_appid;
    }

    /**
     * Set 'consumer_appid' value
     *
     * @param int $value
     */
    public function setConsumerAppid($value = null)
    {
        $this->consumer_appid = $value;
    }

    /**
     * Check if 'consumer_shortcutid' has a value
     *
     * @return bool
     */
    public function hasConsumerShortcutid()
    {
        return $this->consumer_shortcutid !== null;
    }

    /**
     * Get 'consumer_shortcutid' value
     *
     * @return int
     */
    public function getConsumerShortcutid()
    {
        return $this->consumer_shortcutid;
    }

    /**
     * Set 'consumer_shortcutid' value
     *
     * @param int $value
     */
    public function setConsumerShortcutid($value = null)
    {
        $this->consumer_shortcutid = $value;
    }

    /**
     * Check if 'filename' has a value
     *
     * @return bool
     */
    public function hasFilename()
    {
        return $this->filename !== null;
    }

    /**
     * Get 'filename' value
     *
     * @return string
     */
    public function getFilename()
    {
        return $this->filename;
    }

    /**
     * Set 'filename' value
     *
     * @param string $value
     */
    public function setFilename($value = null)
    {
        $this->filename = $value;
    }

    /**
     * Check if 'file_size' has a value
     *
     * @return bool
     */
    public function hasFileSize()
    {
        return $this->file_size !== null;
    }

    /**
     * Get 'file_size' value
     *
     * @return int
     */
    public function getFileSize()
    {
        return $this->file_size;
    }

    /**
     * Set 'file_size' value
     *
     * @param int $value
     */
    public function setFileSize($value = null)
    {
        $this->file_size = $value;
    }

    /**
     * Check if 'preview_file_size' has a value
     *
     * @return bool
     */
    public function hasPreviewFileSize()
    {
        return $this->preview_file_size !== null;
    }

    /**
     * Get 'preview_file_size' value
     *
     * @return int
     */
    public function getPreviewFileSize()
    {
        return $this->preview_file_size;
    }

    /**
     * Set 'preview_file_size' value
     *
     * @param int $value
     */
    public function setPreviewFileSize($value = null)
    {
        $this->preview_file_size = $value;
    }

    /**
     * Check if 'file_url' has a value
     *
     * @return bool
     */
    public function hasFileUrl()
    {
        return $this->file_url !== null;
    }

    /**
     * Get 'file_url' value
     *
     * @return string
     */
    public function getFileUrl()
    {
        return $this->file_url;
    }

    /**
     * Set 'file_url' value
     *
     * @param string $value
     */
    public function setFileUrl($value = null)
    {
        $this->file_url = $value;
    }

    /**
     * Check if 'preview_url' has a value
     *
     * @return bool
     */
    public function hasPreviewUrl()
    {
        return $this->preview_url !== null;
    }

    /**
     * Get 'preview_url' value
     *
     * @return string
     */
    public function getPreviewUrl()
    {
        return $this->preview_url;
    }

    /**
     * Set 'preview_url' value
     *
     * @param string $value
     */
    public function setPreviewUrl($value = null)
    {
        $this->preview_url = $value;
    }

    /**
     * Check if 'youtubevideoid' has a value
     *
     * @return bool
     */
    public function hasYoutubevideoid()
    {
        return $this->youtubevideoid !== null;
    }

    /**
     * Get 'youtubevideoid' value
     *
     * @return string
     */
    public function getYoutubevideoid()
    {
        return $this->youtubevideoid;
    }

    /**
     * Set 'youtubevideoid' value
     *
     * @param string $value
     */
    public function setYoutubevideoid($value = null)
    {
        $this->youtubevideoid = $value;
    }

    /**
     * Check if 'url' has a value
     *
     * @return bool
     */
    public function hasUrl()
    {
        return $this->url !== null;
    }

    /**
     * Get 'url' value
     *
     * @return string
     */
    public function getUrl()
    {
        return $this->url;
    }

    /**
     * Set 'url' value
     *
     * @param string $value
     */
    public function setUrl($value = null)
    {
        $this->url = $value;
    }

    /**
     * Check if 'hcontent_file' has a value
     *
     * @return bool
     */
    public function hasHcontentFile()
    {
        return $this->hcontent_file !== null;
    }

    /**
     * Get 'hcontent_file' value
     *
     * @return int
     */
    public function getHcontentFile()
    {
        return $this->hcontent_file;
    }

    /**
     * Set 'hcontent_file' value
     *
     * @param int $value
     */
    public function setHcontentFile($value = null)
    {
        $this->hcontent_file = $value;
    }

    /**
     * Check if 'hcontent_preview' has a value
     *
     * @return bool
     */
    public function hasHcontentPreview()
    {
        return $this->hcontent_preview !== null;
    }

    /**
     * Get 'hcontent_preview' value
     *
     * @return int
     */
    public function getHcontentPreview()
    {
        return $this->hcontent_preview;
    }

    /**
     * Set 'hcontent_preview' value
     *
     * @param int $value
     */
    public function setHcontentPreview($value = null)
    {
        $this->hcontent_preview = $value;
    }

    /**
     * Check if 'title' has a value
     *
     * @return bool
     */
    public function hasTitle()
    {
        return $this->title !== null;
    }

    /**
     * Get 'title' value
     *
     * @return string
     */
    public function getTitle()
    {
        return $this->title;
    }

    /**
     * Set 'title' value
     *
     * @param string $value
     */
    public function setTitle($value = null)
    {
        $this->title = $value;
    }

    /**
     * Check if 'file_description' has a value
     *
     * @return bool
     */
    public function hasFileDescription()
    {
        return $this->file_description !== null;
    }

    /**
     * Get 'file_description' value
     *
     * @return string
     */
    public function getFileDescription()
    {
        return $this->file_description;
    }

    /**
     * Set 'file_description' value
     *
     * @param string $value
     */
    public function setFileDescription($value = null)
    {
        $this->file_description = $value;
    }

    /**
     * Check if 'short_description' has a value
     *
     * @return bool
     */
    public function hasShortDescription()
    {
        return $this->short_description !== null;
    }

    /**
     * Get 'short_description' value
     *
     * @return string
     */
    public function getShortDescription()
    {
        return $this->short_description;
    }

    /**
     * Set 'short_description' value
     *
     * @param string $value
     */
    public function setShortDescription($value = null)
    {
        $this->short_description = $value;
    }

    /**
     * Check if 'time_created' has a value
     *
     * @return bool
     */
    public function hasTimeCreated()
    {
        return $this->time_created !== null;
    }

    /**
     * Get 'time_created' value
     *
     * @return int
     */
    public function getTimeCreated()
    {
        return $this->time_created;
    }

    /**
     * Set 'time_created' value
     *
     * @param int $value
     */
    public function setTimeCreated($value = null)
    {
        $this->time_created = $value;
    }

    /**
     * Check if 'time_updated' has a value
     *
     * @return bool
     */
    public function hasTimeUpdated()
    {
        return $this->time_updated !== null;
    }

    /**
     * Get 'time_updated' value
     *
     * @return int
     */
    public function getTimeUpdated()
    {
        return $this->time_updated;
    }

    /**
     * Set 'time_updated' value
     *
     * @param int $value
     */
    public function setTimeUpdated($value = null)
    {
        $this->time_updated = $value;
    }

    /**
     * Check if 'visibility' has a value
     *
     * @return bool
     */
    public function hasVisibility()
    {
        return $this->visibility !== null;
    }

    /**
     * Get 'visibility' value
     *
     * @return int
     */
    public function getVisibility()
    {
        return $this->visibility;
    }

    /**
     * Set 'visibility' value
     *
     * @param int $value
     */
    public function setVisibility($value = null)
    {
        $this->visibility = $value;
    }

    /**
     * Check if 'flags' has a value
     *
     * @return bool
     */
    public function hasFlags()
    {
        return $this->flags !== null;
    }

    /**
     * Get 'flags' value
     *
     * @return int
     */
    public function getFlags()
    {
        return $this->flags;
    }

    /**
     * Set 'flags' value
     *
     * @param int $value
     */
    public function setFlags($value = null)
    {
        $this->flags = $value;
    }

    /**
     * Check if 'workshop_file' has a value
     *
     * @return bool
     */
    public function hasWorkshopFile()
    {
        return $this->workshop_file !== null;
    }

    /**
     * Get 'workshop_file' value
     *
     * @return bool
     */
    public function getWorkshopFile()
    {
        return $this->workshop_file;
    }

    /**
     * Set 'workshop_file' value
     *
     * @param bool $value
     */
    public function setWorkshopFile($value = null)
    {
        $this->workshop_file = $value;
    }

    /**
     * Check if 'workshop_accepted' has a value
     *
     * @return bool
     */
    public function hasWorkshopAccepted()
    {
        return $this->workshop_accepted !== null;
    }

    /**
     * Get 'workshop_accepted' value
     *
     * @return bool
     */
    public function getWorkshopAccepted()
    {
        return $this->workshop_accepted;
    }

    /**
     * Set 'workshop_accepted' value
     *
     * @param bool $value
     */
    public function setWorkshopAccepted($value = null)
    {
        $this->workshop_accepted = $value;
    }

    /**
     * Check if 'show_subscribe_all' has a value
     *
     * @return bool
     */
    public function hasShowSubscribeAll()
    {
        return $this->show_subscribe_all !== null;
    }

    /**
     * Get 'show_subscribe_all' value
     *
     * @return bool
     */
    public function getShowSubscribeAll()
    {
        return $this->show_subscribe_all;
    }

    /**
     * Set 'show_subscribe_all' value
     *
     * @param bool $value
     */
    public function setShowSubscribeAll($value = null)
    {
        $this->show_subscribe_all = $value;
    }

    /**
     * Check if 'num_comments_developer' has a value
     *
     * @return bool
     */
    public function hasNumCommentsDeveloper()
    {
        return $this->num_comments_developer !== null;
    }

    /**
     * Get 'num_comments_developer' value
     *
     * @return int
     */
    public function getNumCommentsDeveloper()
    {
        return $this->num_comments_developer;
    }

    /**
     * Set 'num_comments_developer' value
     *
     * @param int $value
     */
    public function setNumCommentsDeveloper($value = null)
    {
        $this->num_comments_developer = $value;
    }

    /**
     * Check if 'num_comments_public' has a value
     *
     * @return bool
     */
    public function hasNumCommentsPublic()
    {
        return $this->num_comments_public !== null;
    }

    /**
     * Get 'num_comments_public' value
     *
     * @return int
     */
    public function getNumCommentsPublic()
    {
        return $this->num_comments_public;
    }

    /**
     * Set 'num_comments_public' value
     *
     * @param int $value
     */
    public function setNumCommentsPublic($value = null)
    {
        $this->num_comments_public = $value;
    }

    /**
     * Check if 'banned' has a value
     *
     * @return bool
     */
    public function hasBanned()
    {
        return $this->banned !== null;
    }

    /**
     * Get 'banned' value
     *
     * @return bool
     */
    public function getBanned()
    {
        return $this->banned;
    }

    /**
     * Set 'banned' value
     *
     * @param bool $value
     */
    public function setBanned($value = null)
    {
        $this->banned = $value;
    }

    /**
     * Check if 'ban_reason' has a value
     *
     * @return bool
     */
    public function hasBanReason()
    {
        return $this->ban_reason !== null;
    }

    /**
     * Get 'ban_reason' value
     *
     * @return string
     */
    public function getBanReason()
    {
        return $this->ban_reason;
    }

    /**
     * Set 'ban_reason' value
     *
     * @param string $value
     */
    public function setBanReason($value = null)
    {
        $this->ban_reason = $value;
    }

    /**
     * Check if 'banner' has a value
     *
     * @return bool
     */
    public function hasBanner()
    {
        return $this->banner !== null;
    }

    /**
     * Get 'banner' value
     *
     * @return int
     */
    public function getBanner()
    {
        return $this->banner;
    }

    /**
     * Set 'banner' value
     *
     * @param int $value
     */
    public function setBanner($value = null)
    {
        $this->banner = $value;
    }

    /**
     * Check if 'can_be_deleted' has a value
     *
     * @return bool
     */
    public function hasCanBeDeleted()
    {
        return $this->can_be_deleted !== null;
    }

    /**
     * Get 'can_be_deleted' value
     *
     * @return bool
     */
    public function getCanBeDeleted()
    {
        return $this->can_be_deleted;
    }

    /**
     * Set 'can_be_deleted' value
     *
     * @param bool $value
     */
    public function setCanBeDeleted($value = null)
    {
        $this->can_be_deleted = $value;
    }

    /**
     * Check if 'incompatible' has a value
     *
     * @return bool
     */
    public function hasIncompatible()
    {
        return $this->incompatible !== null;
    }

    /**
     * Get 'incompatible' value
     *
     * @return bool
     */
    public function getIncompatible()
    {
        return $this->incompatible;
    }

    /**
     * Set 'incompatible' value
     *
     * @param bool $value
     */
    public function setIncompatible($value = null)
    {
        $this->incompatible = $value;
    }

    /**
     * Check if 'app_name' has a value
     *
     * @return bool
     */
    public function hasAppName()
    {
        return $this->app_name !== null;
    }

    /**
     * Get 'app_name' value
     *
     * @return string
     */
    public function getAppName()
    {
        return $this->app_name;
    }

    /**
     * Set 'app_name' value
     *
     * @param string $value
     */
    public function setAppName($value = null)
    {
        $this->app_name = $value;
    }

    /**
     * Check if 'file_type' has a value
     *
     * @return bool
     */
    public function hasFileType()
    {
        return $this->file_type !== null;
    }

    /**
     * Get 'file_type' value
     *
     * @return int
     */
    public function getFileType()
    {
        return $this->file_type;
    }

    /**
     * Set 'file_type' value
     *
     * @param int $value
     */
    public function setFileType($value = null)
    {
        $this->file_type = $value;
    }

    /**
     * Check if 'can_subscribe' has a value
     *
     * @return bool
     */
    public function hasCanSubscribe()
    {
        return $this->can_subscribe !== null;
    }

    /**
     * Get 'can_subscribe' value
     *
     * @return bool
     */
    public function getCanSubscribe()
    {
        return $this->can_subscribe;
    }

    /**
     * Set 'can_subscribe' value
     *
     * @param bool $value
     */
    public function setCanSubscribe($value = null)
    {
        $this->can_subscribe = $value;
    }

    /**
     * Check if 'subscriptions' has a value
     *
     * @return bool
     */
    public function hasSubscriptions()
    {
        return $this->subscriptions !== null;
    }

    /**
     * Get 'subscriptions' value
     *
     * @return int
     */
    public function getSubscriptions()
    {
        return $this->subscriptions;
    }

    /**
     * Set 'subscriptions' value
     *
     * @param int $value
     */
    public function setSubscriptions($value = null)
    {
        $this->subscriptions = $value;
    }

    /**
     * Check if 'favorited' has a value
     *
     * @return bool
     */
    public function hasFavorited()
    {
        return $this->favorited !== null;
    }

    /**
     * Get 'favorited' value
     *
     * @return int
     */
    public function getFavorited()
    {
        return $this->favorited;
    }

    /**
     * Set 'favorited' value
     *
     * @param int $value
     */
    public function setFavorited($value = null)
    {
        $this->favorited = $value;
    }

    /**
     * Check if 'followers' has a value
     *
     * @return bool
     */
    public function hasFollowers()
    {
        return $this->followers !== null;
    }

    /**
     * Get 'followers' value
     *
     * @return int
     */
    public function getFollowers()
    {
        return $this->followers;
    }

    /**
     * Set 'followers' value
     *
     * @param int $value
     */
    public function setFollowers($value = null)
    {
        $this->followers = $value;
    }

    /**
     * Check if 'lifetime_subscriptions' has a value
     *
     * @return bool
     */
    public function hasLifetimeSubscriptions()
    {
        return $this->lifetime_subscriptions !== null;
    }

    /**
     * Get 'lifetime_subscriptions' value
     *
     * @return int
     */
    public function getLifetimeSubscriptions()
    {
        return $this->lifetime_subscriptions;
    }

    /**
     * Set 'lifetime_subscriptions' value
     *
     * @param int $value
     */
    public function setLifetimeSubscriptions($value = null)
    {
        $this->lifetime_subscriptions = $value;
    }

    /**
     * Check if 'lifetime_favorited' has a value
     *
     * @return bool
     */
    public function hasLifetimeFavorited()
    {
        return $this->lifetime_favorited !== null;
    }

    /**
     * Get 'lifetime_favorited' value
     *
     * @return int
     */
    public function getLifetimeFavorited()
    {
        return $this->lifetime_favorited;
    }

    /**
     * Set 'lifetime_favorited' value
     *
     * @param int $value
     */
    public function setLifetimeFavorited($value = null)
    {
        $this->lifetime_favorited = $value;
    }

    /**
     * Check if 'lifetime_followers' has a value
     *
     * @return bool
     */
    public function hasLifetimeFollowers()
    {
        return $this->lifetime_followers !== null;
    }

    /**
     * Get 'lifetime_followers' value
     *
     * @return int
     */
    public function getLifetimeFollowers()
    {
        return $this->lifetime_followers;
    }

    /**
     * Set 'lifetime_followers' value
     *
     * @param int $value
     */
    public function setLifetimeFollowers($value = null)
    {
        $this->lifetime_followers = $value;
    }

    /**
     * Check if 'lifetime_playtime' has a value
     *
     * @return bool
     */
    public function hasLifetimePlaytime()
    {
        return $this->lifetime_playtime !== null;
    }

    /**
     * Get 'lifetime_playtime' value
     *
     * @return int
     */
    public function getLifetimePlaytime()
    {
        return $this->lifetime_playtime;
    }

    /**
     * Set 'lifetime_playtime' value
     *
     * @param int $value
     */
    public function setLifetimePlaytime($value = null)
    {
        $this->lifetime_playtime = $value;
    }

    /**
     * Check if 'lifetime_playtime_sessions' has a value
     *
     * @return bool
     */
    public function hasLifetimePlaytimeSessions()
    {
        return $this->lifetime_playtime_sessions !== null;
    }

    /**
     * Get 'lifetime_playtime_sessions' value
     *
     * @return int
     */
    public function getLifetimePlaytimeSessions()
    {
        return $this->lifetime_playtime_sessions;
    }

    /**
     * Set 'lifetime_playtime_sessions' value
     *
     * @param int $value
     */
    public function setLifetimePlaytimeSessions($value = null)
    {
        $this->lifetime_playtime_sessions = $value;
    }

    /**
     * Check if 'views' has a value
     *
     * @return bool
     */
    public function hasViews()
    {
        return $this->views !== null;
    }

    /**
     * Get 'views' value
     *
     * @return int
     */
    public function getViews()
    {
        return $this->views;
    }

    /**
     * Set 'views' value
     *
     * @param int $value
     */
    public function setViews($value = null)
    {
        $this->views = $value;
    }

    /**
     * Check if 'image_width' has a value
     *
     * @return bool
     */
    public function hasImageWidth()
    {
        return $this->image_width !== null;
    }

    /**
     * Get 'image_width' value
     *
     * @return int
     */
    public function getImageWidth()
    {
        return $this->image_width;
    }

    /**
     * Set 'image_width' value
     *
     * @param int $value
     */
    public function setImageWidth($value = null)
    {
        $this->image_width = $value;
    }

    /**
     * Check if 'image_height' has a value
     *
     * @return bool
     */
    public function hasImageHeight()
    {
        return $this->image_height !== null;
    }

    /**
     * Get 'image_height' value
     *
     * @return int
     */
    public function getImageHeight()
    {
        return $this->image_height;
    }

    /**
     * Set 'image_height' value
     *
     * @param int $value
     */
    public function setImageHeight($value = null)
    {
        $this->image_height = $value;
    }

    /**
     * Check if 'image_url' has a value
     *
     * @return bool
     */
    public function hasImageUrl()
    {
        return $this->image_url !== null;
    }

    /**
     * Get 'image_url' value
     *
     * @return string
     */
    public function getImageUrl()
    {
        return $this->image_url;
    }

    /**
     * Set 'image_url' value
     *
     * @param string $value
     */
    public function setImageUrl($value = null)
    {
        $this->image_url = $value;
    }

    /**
     * Check if 'spoiler_tag' has a value
     *
     * @return bool
     */
    public function hasSpoilerTag()
    {
        return $this->spoiler_tag !== null;
    }

    /**
     * Get 'spoiler_tag' value
     *
     * @return bool
     */
    public function getSpoilerTag()
    {
        return $this->spoiler_tag;
    }

    /**
     * Set 'spoiler_tag' value
     *
     * @param bool $value
     */
    public function setSpoilerTag($value = null)
    {
        $this->spoiler_tag = $value;
    }

    /**
     * Check if 'shortcutid' has a value
     *
     * @return bool
     */
    public function hasShortcutid()
    {
        return $this->shortcutid !== null;
    }

    /**
     * Get 'shortcutid' value
     *
     * @return int
     */
    public function getShortcutid()
    {
        return $this->shortcutid;
    }

    /**
     * Set 'shortcutid' value
     *
     * @param int $value
     */
    public function setShortcutid($value = null)
    {
        $this->shortcutid = $value;
    }

    /**
     * Check if 'shortcutname' has a value
     *
     * @return bool
     */
    public function hasShortcutname()
    {
        return $this->shortcutname !== null;
    }

    /**
     * Get 'shortcutname' value
     *
     * @return string
     */
    public function getShortcutname()
    {
        return $this->shortcutname;
    }

    /**
     * Set 'shortcutname' value
     *
     * @param string $value
     */
    public function setShortcutname($value = null)
    {
        $this->shortcutname = $value;
    }

    /**
     * Check if 'num_children' has a value
     *
     * @return bool
     */
    public function hasNumChildren()
    {
        return $this->num_children !== null;
    }

    /**
     * Get 'num_children' value
     *
     * @return int
     */
    public function getNumChildren()
    {
        return $this->num_children;
    }

    /**
     * Set 'num_children' value
     *
     * @param int $value
     */
    public function setNumChildren($value = null)
    {
        $this->num_children = $value;
    }

    /**
     * Check if 'num_reports' has a value
     *
     * @return bool
     */
    public function hasNumReports()
    {
        return $this->num_reports !== null;
    }

    /**
     * Get 'num_reports' value
     *
     * @return int
     */
    public function getNumReports()
    {
        return $this->num_reports;
    }

    /**
     * Set 'num_reports' value
     *
     * @param int $value
     */
    public function setNumReports($value = null)
    {
        $this->num_reports = $value;
    }

    /**
     * Check if 'previews' has a value
     *
     * @return bool
     */
    public function hasPreviewsList()
    {
        return $this->previews !== null;
    }

    /**
     * Get 'previews' value
     *
     * @return \Protobuf\Collection<\SteamKit\Base\Unified\SteamMsgPublishedFile\PublishedFileDetails\Preview>
     */
    public function getPreviewsList()
    {
        return $this->previews;
    }

    /**
     * Set 'previews' value
     *
     * @param \Protobuf\Collection<\SteamKit\Base\Unified\SteamMsgPublishedFile\PublishedFileDetails\Preview> $value
     */
    public function setPreviewsList(\Protobuf\Collection $value = null)
    {
        $this->previews = $value;
    }

    /**
     * Add a new element to 'previews'
     *
     * @param \SteamKit\Base\Unified\SteamMsgPublishedFile\PublishedFileDetails\Preview
     * $value
     */
    public function addPreviews(\SteamKit\Base\Unified\SteamMsgPublishedFile\PublishedFileDetails\Preview $value)
    {
        if ($this->previews === null) {
            $this->previews = new \Protobuf\MessageCollection();
        }

        $this->previews->add($value);
    }

    /**
     * Check if 'tags' has a value
     *
     * @return bool
     */
    public function hasTagsList()
    {
        return $this->tags !== null;
    }

    /**
     * Get 'tags' value
     *
     * @return \Protobuf\Collection<\SteamKit\Base\Unified\SteamMsgPublishedFile\PublishedFileDetails\Tag>
     */
    public function getTagsList()
    {
        return $this->tags;
    }

    /**
     * Set 'tags' value
     *
     * @param \Protobuf\Collection<\SteamKit\Base\Unified\SteamMsgPublishedFile\PublishedFileDetails\Tag> $value
     */
    public function setTagsList(\Protobuf\Collection $value = null)
    {
        $this->tags = $value;
    }

    /**
     * Add a new element to 'tags'
     *
     * @param \SteamKit\Base\Unified\SteamMsgPublishedFile\PublishedFileDetails\Tag
     * $value
     */
    public function addTags(\SteamKit\Base\Unified\SteamMsgPublishedFile\PublishedFileDetails\Tag $value)
    {
        if ($this->tags === null) {
            $this->tags = new \Protobuf\MessageCollection();
        }

        $this->tags->add($value);
    }

    /**
     * Check if 'children' has a value
     *
     * @return bool
     */
    public function hasChildrenList()
    {
        return $this->children !== null;
    }

    /**
     * Get 'children' value
     *
     * @return \Protobuf\Collection<\SteamKit\Base\Unified\SteamMsgPublishedFile\PublishedFileDetails\Child>
     */
    public function getChildrenList()
    {
        return $this->children;
    }

    /**
     * Set 'children' value
     *
     * @param \Protobuf\Collection<\SteamKit\Base\Unified\SteamMsgPublishedFile\PublishedFileDetails\Child> $value
     */
    public function setChildrenList(\Protobuf\Collection $value = null)
    {
        $this->children = $value;
    }

    /**
     * Add a new element to 'children'
     *
     * @param \SteamKit\Base\Unified\SteamMsgPublishedFile\PublishedFileDetails\Child
     * $value
     */
    public function addChildren(\SteamKit\Base\Unified\SteamMsgPublishedFile\PublishedFileDetails\Child $value)
    {
        if ($this->children === null) {
            $this->children = new \Protobuf\MessageCollection();
        }

        $this->children->add($value);
    }

    /**
     * Check if 'kvtags' has a value
     *
     * @return bool
     */
    public function hasKvtagsList()
    {
        return $this->kvtags !== null;
    }

    /**
     * Get 'kvtags' value
     *
     * @return \Protobuf\Collection<\SteamKit\Base\Unified\SteamMsgPublishedFile\PublishedFileDetails\KVTag>
     */
    public function getKvtagsList()
    {
        return $this->kvtags;
    }

    /**
     * Set 'kvtags' value
     *
     * @param \Protobuf\Collection<\SteamKit\Base\Unified\SteamMsgPublishedFile\PublishedFileDetails\KVTag> $value
     */
    public function setKvtagsList(\Protobuf\Collection $value = null)
    {
        $this->kvtags = $value;
    }

    /**
     * Add a new element to 'kvtags'
     *
     * @param \SteamKit\Base\Unified\SteamMsgPublishedFile\PublishedFileDetails\KVTag
     * $value
     */
    public function addKvtags(\SteamKit\Base\Unified\SteamMsgPublishedFile\PublishedFileDetails\KVTag $value)
    {
        if ($this->kvtags === null) {
            $this->kvtags = new \Protobuf\MessageCollection();
        }

        $this->kvtags->add($value);
    }

    /**
     * Check if 'vote_data' has a value
     *
     * @return bool
     */
    public function hasVoteData()
    {
        return $this->vote_data !== null;
    }

    /**
     * Get 'vote_data' value
     *
     * @return \SteamKit\Base\Unified\SteamMsgPublishedFile\PublishedFileDetails\VoteData
     */
    public function getVoteData()
    {
        return $this->vote_data;
    }

    /**
     * Set 'vote_data' value
     *
     * @param \SteamKit\Base\Unified\SteamMsgPublishedFile\PublishedFileDetails\VoteData $value
     */
    public function setVoteData(\SteamKit\Base\Unified\SteamMsgPublishedFile\PublishedFileDetails\VoteData $value = null)
    {
        $this->vote_data = $value;
    }

    /**
     * Check if 'time_subscribed' has a value
     *
     * @return bool
     */
    public function hasTimeSubscribed()
    {
        return $this->time_subscribed !== null;
    }

    /**
     * Get 'time_subscribed' value
     *
     * @return int
     */
    public function getTimeSubscribed()
    {
        return $this->time_subscribed;
    }

    /**
     * Set 'time_subscribed' value
     *
     * @param int $value
     */
    public function setTimeSubscribed($value = null)
    {
        $this->time_subscribed = $value;
    }

    /**
     * Check if 'for_sale_data' has a value
     *
     * @return bool
     */
    public function hasForSaleData()
    {
        return $this->for_sale_data !== null;
    }

    /**
     * Get 'for_sale_data' value
     *
     * @return \SteamKit\Base\Unified\SteamMsgPublishedFile\PublishedFileDetails\ForSaleData
     */
    public function getForSaleData()
    {
        return $this->for_sale_data;
    }

    /**
     * Set 'for_sale_data' value
     *
     * @param \SteamKit\Base\Unified\SteamMsgPublishedFile\PublishedFileDetails\ForSaleData $value
     */
    public function setForSaleData(\SteamKit\Base\Unified\SteamMsgPublishedFile\PublishedFileDetails\ForSaleData $value = null)
    {
        $this->for_sale_data = $value;
    }

    /**
     * Check if 'metadata' has a value
     *
     * @return bool
     */
    public function hasMetadata()
    {
        return $this->metadata !== null;
    }

    /**
     * Get 'metadata' value
     *
     * @return string
     */
    public function getMetadata()
    {
        return $this->metadata;
    }

    /**
     * Set 'metadata' value
     *
     * @param string $value
     */
    public function setMetadata($value = null)
    {
        $this->metadata = $value;
    }

    /**
     * Check if 'incompatible_actor' has a value
     *
     * @return bool
     */
    public function hasIncompatibleActor()
    {
        return $this->incompatible_actor !== null;
    }

    /**
     * Get 'incompatible_actor' value
     *
     * @return int
     */
    public function getIncompatibleActor()
    {
        return $this->incompatible_actor;
    }

    /**
     * Set 'incompatible_actor' value
     *
     * @param int $value
     */
    public function setIncompatibleActor($value = null)
    {
        $this->incompatible_actor = $value;
    }

    /**
     * Check if 'incompatible_timestamp' has a value
     *
     * @return bool
     */
    public function hasIncompatibleTimestamp()
    {
        return $this->incompatible_timestamp !== null;
    }

    /**
     * Get 'incompatible_timestamp' value
     *
     * @return int
     */
    public function getIncompatibleTimestamp()
    {
        return $this->incompatible_timestamp;
    }

    /**
     * Set 'incompatible_timestamp' value
     *
     * @param int $value
     */
    public function setIncompatibleTimestamp($value = null)
    {
        $this->incompatible_timestamp = $value;
    }

    /**
     * Check if 'language' has a value
     *
     * @return bool
     */
    public function hasLanguage()
    {
        return $this->language !== null;
    }

    /**
     * Get 'language' value
     *
     * @return int
     */
    public function getLanguage()
    {
        return $this->language;
    }

    /**
     * Set 'language' value
     *
     * @param int $value
     */
    public function setLanguage($value = null)
    {
        $this->language = $value;
    }

    /**
     * {@inheritdoc}
     */
    public function extensions()
    {
        if ( $this->extensions !== null) {
            return $this->extensions;
        }

        return $this->extensions = new \Protobuf\Extension\ExtensionFieldMap(__CLASS__);
    }

    /**
     * {@inheritdoc}
     */
    public function unknownFieldSet()
    {
        return $this->unknownFieldSet;
    }

    /**
     * {@inheritdoc}
     */
    public static function fromStream($stream, \Protobuf\Configuration $configuration = null)
    {
        return new self($stream, $configuration);
    }

    /**
     * {@inheritdoc}
     */
    public static function fromArray(array $values)
    {
        $message = new self();
        $values  = array_merge([
            'result' => null,
            'publishedfileid' => null,
            'creator' => null,
            'creator_appid' => null,
            'consumer_appid' => null,
            'consumer_shortcutid' => null,
            'filename' => null,
            'file_size' => null,
            'preview_file_size' => null,
            'file_url' => null,
            'preview_url' => null,
            'youtubevideoid' => null,
            'url' => null,
            'hcontent_file' => null,
            'hcontent_preview' => null,
            'title' => null,
            'file_description' => null,
            'short_description' => null,
            'time_created' => null,
            'time_updated' => null,
            'visibility' => null,
            'flags' => null,
            'workshop_file' => null,
            'workshop_accepted' => null,
            'show_subscribe_all' => null,
            'num_comments_developer' => null,
            'num_comments_public' => null,
            'banned' => null,
            'ban_reason' => null,
            'banner' => null,
            'can_be_deleted' => null,
            'incompatible' => null,
            'app_name' => null,
            'file_type' => null,
            'can_subscribe' => null,
            'subscriptions' => null,
            'favorited' => null,
            'followers' => null,
            'lifetime_subscriptions' => null,
            'lifetime_favorited' => null,
            'lifetime_followers' => null,
            'lifetime_playtime' => null,
            'lifetime_playtime_sessions' => null,
            'views' => null,
            'image_width' => null,
            'image_height' => null,
            'image_url' => null,
            'spoiler_tag' => null,
            'shortcutid' => null,
            'shortcutname' => null,
            'num_children' => null,
            'num_reports' => null,
            'previews' => [],
            'tags' => [],
            'children' => [],
            'kvtags' => [],
            'vote_data' => null,
            'time_subscribed' => null,
            'for_sale_data' => null,
            'metadata' => null,
            'incompatible_actor' => null,
            'incompatible_timestamp' => null,
            'language' => '0'
        ], $values);

        $message->setResult($values['result']);
        $message->setPublishedfileid($values['publishedfileid']);
        $message->setCreator($values['creator']);
        $message->setCreatorAppid($values['creator_appid']);
        $message->setConsumerAppid($values['consumer_appid']);
        $message->setConsumerShortcutid($values['consumer_shortcutid']);
        $message->setFilename($values['filename']);
        $message->setFileSize($values['file_size']);
        $message->setPreviewFileSize($values['preview_file_size']);
        $message->setFileUrl($values['file_url']);
        $message->setPreviewUrl($values['preview_url']);
        $message->setYoutubevideoid($values['youtubevideoid']);
        $message->setUrl($values['url']);
        $message->setHcontentFile($values['hcontent_file']);
        $message->setHcontentPreview($values['hcontent_preview']);
        $message->setTitle($values['title']);
        $message->setFileDescription($values['file_description']);
        $message->setShortDescription($values['short_description']);
        $message->setTimeCreated($values['time_created']);
        $message->setTimeUpdated($values['time_updated']);
        $message->setVisibility($values['visibility']);
        $message->setFlags($values['flags']);
        $message->setWorkshopFile($values['workshop_file']);
        $message->setWorkshopAccepted($values['workshop_accepted']);
        $message->setShowSubscribeAll($values['show_subscribe_all']);
        $message->setNumCommentsDeveloper($values['num_comments_developer']);
        $message->setNumCommentsPublic($values['num_comments_public']);
        $message->setBanned($values['banned']);
        $message->setBanReason($values['ban_reason']);
        $message->setBanner($values['banner']);
        $message->setCanBeDeleted($values['can_be_deleted']);
        $message->setIncompatible($values['incompatible']);
        $message->setAppName($values['app_name']);
        $message->setFileType($values['file_type']);
        $message->setCanSubscribe($values['can_subscribe']);
        $message->setSubscriptions($values['subscriptions']);
        $message->setFavorited($values['favorited']);
        $message->setFollowers($values['followers']);
        $message->setLifetimeSubscriptions($values['lifetime_subscriptions']);
        $message->setLifetimeFavorited($values['lifetime_favorited']);
        $message->setLifetimeFollowers($values['lifetime_followers']);
        $message->setLifetimePlaytime($values['lifetime_playtime']);
        $message->setLifetimePlaytimeSessions($values['lifetime_playtime_sessions']);
        $message->setViews($values['views']);
        $message->setImageWidth($values['image_width']);
        $message->setImageHeight($values['image_height']);
        $message->setImageUrl($values['image_url']);
        $message->setSpoilerTag($values['spoiler_tag']);
        $message->setShortcutid($values['shortcutid']);
        $message->setShortcutname($values['shortcutname']);
        $message->setNumChildren($values['num_children']);
        $message->setNumReports($values['num_reports']);
        $message->setVoteData($values['vote_data']);
        $message->setTimeSubscribed($values['time_subscribed']);
        $message->setForSaleData($values['for_sale_data']);
        $message->setMetadata($values['metadata']);
        $message->setIncompatibleActor($values['incompatible_actor']);
        $message->setIncompatibleTimestamp($values['incompatible_timestamp']);
        $message->setLanguage($values['language']);

        foreach ($values['previews'] as $item) {
            $message->addPreviews($item);
        }

        foreach ($values['tags'] as $item) {
            $message->addTags($item);
        }

        foreach ($values['children'] as $item) {
            $message->addChildren($item);
        }

        foreach ($values['kvtags'] as $item) {
            $message->addKvtags($item);
        }

        return $message;
    }

    /**
     * {@inheritdoc}
     */
    public static function descriptor()
    {
        return \google\protobuf\DescriptorProto::fromArray([
            'name'      => 'PublishedFileDetails',
            'field'     => [
                \google\protobuf\FieldDescriptorProto::fromArray([
                    'number' => 1,
                    'name' => 'result',
                    'type' => \google\protobuf\FieldDescriptorProto\Type::TYPE_UINT32(),
                    'label' => \google\protobuf\FieldDescriptorProto\Label::LABEL_OPTIONAL()
                ]),
                \google\protobuf\FieldDescriptorProto::fromArray([
                    'number' => 2,
                    'name' => 'publishedfileid',
                    'type' => \google\protobuf\FieldDescriptorProto\Type::TYPE_UINT64(),
                    'label' => \google\protobuf\FieldDescriptorProto\Label::LABEL_OPTIONAL()
                ]),
                \google\protobuf\FieldDescriptorProto::fromArray([
                    'number' => 3,
                    'name' => 'creator',
                    'type' => \google\protobuf\FieldDescriptorProto\Type::TYPE_FIXED64(),
                    'label' => \google\protobuf\FieldDescriptorProto\Label::LABEL_OPTIONAL()
                ]),
                \google\protobuf\FieldDescriptorProto::fromArray([
                    'number' => 4,
                    'name' => 'creator_appid',
                    'type' => \google\protobuf\FieldDescriptorProto\Type::TYPE_UINT32(),
                    'label' => \google\protobuf\FieldDescriptorProto\Label::LABEL_OPTIONAL()
                ]),
                \google\protobuf\FieldDescriptorProto::fromArray([
                    'number' => 5,
                    'name' => 'consumer_appid',
                    'type' => \google\protobuf\FieldDescriptorProto\Type::TYPE_UINT32(),
                    'label' => \google\protobuf\FieldDescriptorProto\Label::LABEL_OPTIONAL()
                ]),
                \google\protobuf\FieldDescriptorProto::fromArray([
                    'number' => 6,
                    'name' => 'consumer_shortcutid',
                    'type' => \google\protobuf\FieldDescriptorProto\Type::TYPE_UINT32(),
                    'label' => \google\protobuf\FieldDescriptorProto\Label::LABEL_OPTIONAL()
                ]),
                \google\protobuf\FieldDescriptorProto::fromArray([
                    'number' => 7,
                    'name' => 'filename',
                    'type' => \google\protobuf\FieldDescriptorProto\Type::TYPE_STRING(),
                    'label' => \google\protobuf\FieldDescriptorProto\Label::LABEL_OPTIONAL()
                ]),
                \google\protobuf\FieldDescriptorProto::fromArray([
                    'number' => 8,
                    'name' => 'file_size',
                    'type' => \google\protobuf\FieldDescriptorProto\Type::TYPE_UINT64(),
                    'label' => \google\protobuf\FieldDescriptorProto\Label::LABEL_OPTIONAL()
                ]),
                \google\protobuf\FieldDescriptorProto::fromArray([
                    'number' => 9,
                    'name' => 'preview_file_size',
                    'type' => \google\protobuf\FieldDescriptorProto\Type::TYPE_UINT64(),
                    'label' => \google\protobuf\FieldDescriptorProto\Label::LABEL_OPTIONAL()
                ]),
                \google\protobuf\FieldDescriptorProto::fromArray([
                    'number' => 10,
                    'name' => 'file_url',
                    'type' => \google\protobuf\FieldDescriptorProto\Type::TYPE_STRING(),
                    'label' => \google\protobuf\FieldDescriptorProto\Label::LABEL_OPTIONAL()
                ]),
                \google\protobuf\FieldDescriptorProto::fromArray([
                    'number' => 11,
                    'name' => 'preview_url',
                    'type' => \google\protobuf\FieldDescriptorProto\Type::TYPE_STRING(),
                    'label' => \google\protobuf\FieldDescriptorProto\Label::LABEL_OPTIONAL()
                ]),
                \google\protobuf\FieldDescriptorProto::fromArray([
                    'number' => 12,
                    'name' => 'youtubevideoid',
                    'type' => \google\protobuf\FieldDescriptorProto\Type::TYPE_STRING(),
                    'label' => \google\protobuf\FieldDescriptorProto\Label::LABEL_OPTIONAL()
                ]),
                \google\protobuf\FieldDescriptorProto::fromArray([
                    'number' => 13,
                    'name' => 'url',
                    'type' => \google\protobuf\FieldDescriptorProto\Type::TYPE_STRING(),
                    'label' => \google\protobuf\FieldDescriptorProto\Label::LABEL_OPTIONAL()
                ]),
                \google\protobuf\FieldDescriptorProto::fromArray([
                    'number' => 14,
                    'name' => 'hcontent_file',
                    'type' => \google\protobuf\FieldDescriptorProto\Type::TYPE_FIXED64(),
                    'label' => \google\protobuf\FieldDescriptorProto\Label::LABEL_OPTIONAL()
                ]),
                \google\protobuf\FieldDescriptorProto::fromArray([
                    'number' => 15,
                    'name' => 'hcontent_preview',
                    'type' => \google\protobuf\FieldDescriptorProto\Type::TYPE_FIXED64(),
                    'label' => \google\protobuf\FieldDescriptorProto\Label::LABEL_OPTIONAL()
                ]),
                \google\protobuf\FieldDescriptorProto::fromArray([
                    'number' => 16,
                    'name' => 'title',
                    'type' => \google\protobuf\FieldDescriptorProto\Type::TYPE_STRING(),
                    'label' => \google\protobuf\FieldDescriptorProto\Label::LABEL_OPTIONAL()
                ]),
                \google\protobuf\FieldDescriptorProto::fromArray([
                    'number' => 17,
                    'name' => 'file_description',
                    'type' => \google\protobuf\FieldDescriptorProto\Type::TYPE_STRING(),
                    'label' => \google\protobuf\FieldDescriptorProto\Label::LABEL_OPTIONAL()
                ]),
                \google\protobuf\FieldDescriptorProto::fromArray([
                    'number' => 18,
                    'name' => 'short_description',
                    'type' => \google\protobuf\FieldDescriptorProto\Type::TYPE_STRING(),
                    'label' => \google\protobuf\FieldDescriptorProto\Label::LABEL_OPTIONAL()
                ]),
                \google\protobuf\FieldDescriptorProto::fromArray([
                    'number' => 19,
                    'name' => 'time_created',
                    'type' => \google\protobuf\FieldDescriptorProto\Type::TYPE_UINT32(),
                    'label' => \google\protobuf\FieldDescriptorProto\Label::LABEL_OPTIONAL()
                ]),
                \google\protobuf\FieldDescriptorProto::fromArray([
                    'number' => 20,
                    'name' => 'time_updated',
                    'type' => \google\protobuf\FieldDescriptorProto\Type::TYPE_UINT32(),
                    'label' => \google\protobuf\FieldDescriptorProto\Label::LABEL_OPTIONAL()
                ]),
                \google\protobuf\FieldDescriptorProto::fromArray([
                    'number' => 21,
                    'name' => 'visibility',
                    'type' => \google\protobuf\FieldDescriptorProto\Type::TYPE_UINT32(),
                    'label' => \google\protobuf\FieldDescriptorProto\Label::LABEL_OPTIONAL()
                ]),
                \google\protobuf\FieldDescriptorProto::fromArray([
                    'number' => 22,
                    'name' => 'flags',
                    'type' => \google\protobuf\FieldDescriptorProto\Type::TYPE_UINT32(),
                    'label' => \google\protobuf\FieldDescriptorProto\Label::LABEL_OPTIONAL()
                ]),
                \google\protobuf\FieldDescriptorProto::fromArray([
                    'number' => 23,
                    'name' => 'workshop_file',
                    'type' => \google\protobuf\FieldDescriptorProto\Type::TYPE_BOOL(),
                    'label' => \google\protobuf\FieldDescriptorProto\Label::LABEL_OPTIONAL()
                ]),
                \google\protobuf\FieldDescriptorProto::fromArray([
                    'number' => 24,
                    'name' => 'workshop_accepted',
                    'type' => \google\protobuf\FieldDescriptorProto\Type::TYPE_BOOL(),
                    'label' => \google\protobuf\FieldDescriptorProto\Label::LABEL_OPTIONAL()
                ]),
                \google\protobuf\FieldDescriptorProto::fromArray([
                    'number' => 25,
                    'name' => 'show_subscribe_all',
                    'type' => \google\protobuf\FieldDescriptorProto\Type::TYPE_BOOL(),
                    'label' => \google\protobuf\FieldDescriptorProto\Label::LABEL_OPTIONAL()
                ]),
                \google\protobuf\FieldDescriptorProto::fromArray([
                    'number' => 26,
                    'name' => 'num_comments_developer',
                    'type' => \google\protobuf\FieldDescriptorProto\Type::TYPE_INT32(),
                    'label' => \google\protobuf\FieldDescriptorProto\Label::LABEL_OPTIONAL()
                ]),
                \google\protobuf\FieldDescriptorProto::fromArray([
                    'number' => 27,
                    'name' => 'num_comments_public',
                    'type' => \google\protobuf\FieldDescriptorProto\Type::TYPE_INT32(),
                    'label' => \google\protobuf\FieldDescriptorProto\Label::LABEL_OPTIONAL()
                ]),
                \google\protobuf\FieldDescriptorProto::fromArray([
                    'number' => 28,
                    'name' => 'banned',
                    'type' => \google\protobuf\FieldDescriptorProto\Type::TYPE_BOOL(),
                    'label' => \google\protobuf\FieldDescriptorProto\Label::LABEL_OPTIONAL()
                ]),
                \google\protobuf\FieldDescriptorProto::fromArray([
                    'number' => 29,
                    'name' => 'ban_reason',
                    'type' => \google\protobuf\FieldDescriptorProto\Type::TYPE_STRING(),
                    'label' => \google\protobuf\FieldDescriptorProto\Label::LABEL_OPTIONAL()
                ]),
                \google\protobuf\FieldDescriptorProto::fromArray([
                    'number' => 30,
                    'name' => 'banner',
                    'type' => \google\protobuf\FieldDescriptorProto\Type::TYPE_FIXED64(),
                    'label' => \google\protobuf\FieldDescriptorProto\Label::LABEL_OPTIONAL()
                ]),
                \google\protobuf\FieldDescriptorProto::fromArray([
                    'number' => 31,
                    'name' => 'can_be_deleted',
                    'type' => \google\protobuf\FieldDescriptorProto\Type::TYPE_BOOL(),
                    'label' => \google\protobuf\FieldDescriptorProto\Label::LABEL_OPTIONAL()
                ]),
                \google\protobuf\FieldDescriptorProto::fromArray([
                    'number' => 32,
                    'name' => 'incompatible',
                    'type' => \google\protobuf\FieldDescriptorProto\Type::TYPE_BOOL(),
                    'label' => \google\protobuf\FieldDescriptorProto\Label::LABEL_OPTIONAL()
                ]),
                \google\protobuf\FieldDescriptorProto::fromArray([
                    'number' => 33,
                    'name' => 'app_name',
                    'type' => \google\protobuf\FieldDescriptorProto\Type::TYPE_STRING(),
                    'label' => \google\protobuf\FieldDescriptorProto\Label::LABEL_OPTIONAL()
                ]),
                \google\protobuf\FieldDescriptorProto::fromArray([
                    'number' => 34,
                    'name' => 'file_type',
                    'type' => \google\protobuf\FieldDescriptorProto\Type::TYPE_UINT32(),
                    'label' => \google\protobuf\FieldDescriptorProto\Label::LABEL_OPTIONAL()
                ]),
                \google\protobuf\FieldDescriptorProto::fromArray([
                    'number' => 35,
                    'name' => 'can_subscribe',
                    'type' => \google\protobuf\FieldDescriptorProto\Type::TYPE_BOOL(),
                    'label' => \google\protobuf\FieldDescriptorProto\Label::LABEL_OPTIONAL()
                ]),
                \google\protobuf\FieldDescriptorProto::fromArray([
                    'number' => 36,
                    'name' => 'subscriptions',
                    'type' => \google\protobuf\FieldDescriptorProto\Type::TYPE_UINT32(),
                    'label' => \google\protobuf\FieldDescriptorProto\Label::LABEL_OPTIONAL()
                ]),
                \google\protobuf\FieldDescriptorProto::fromArray([
                    'number' => 37,
                    'name' => 'favorited',
                    'type' => \google\protobuf\FieldDescriptorProto\Type::TYPE_UINT32(),
                    'label' => \google\protobuf\FieldDescriptorProto\Label::LABEL_OPTIONAL()
                ]),
                \google\protobuf\FieldDescriptorProto::fromArray([
                    'number' => 38,
                    'name' => 'followers',
                    'type' => \google\protobuf\FieldDescriptorProto\Type::TYPE_UINT32(),
                    'label' => \google\protobuf\FieldDescriptorProto\Label::LABEL_OPTIONAL()
                ]),
                \google\protobuf\FieldDescriptorProto::fromArray([
                    'number' => 39,
                    'name' => 'lifetime_subscriptions',
                    'type' => \google\protobuf\FieldDescriptorProto\Type::TYPE_UINT32(),
                    'label' => \google\protobuf\FieldDescriptorProto\Label::LABEL_OPTIONAL()
                ]),
                \google\protobuf\FieldDescriptorProto::fromArray([
                    'number' => 40,
                    'name' => 'lifetime_favorited',
                    'type' => \google\protobuf\FieldDescriptorProto\Type::TYPE_UINT32(),
                    'label' => \google\protobuf\FieldDescriptorProto\Label::LABEL_OPTIONAL()
                ]),
                \google\protobuf\FieldDescriptorProto::fromArray([
                    'number' => 41,
                    'name' => 'lifetime_followers',
                    'type' => \google\protobuf\FieldDescriptorProto\Type::TYPE_UINT32(),
                    'label' => \google\protobuf\FieldDescriptorProto\Label::LABEL_OPTIONAL()
                ]),
                \google\protobuf\FieldDescriptorProto::fromArray([
                    'number' => 62,
                    'name' => 'lifetime_playtime',
                    'type' => \google\protobuf\FieldDescriptorProto\Type::TYPE_UINT64(),
                    'label' => \google\protobuf\FieldDescriptorProto\Label::LABEL_OPTIONAL()
                ]),
                \google\protobuf\FieldDescriptorProto::fromArray([
                    'number' => 63,
                    'name' => 'lifetime_playtime_sessions',
                    'type' => \google\protobuf\FieldDescriptorProto\Type::TYPE_UINT64(),
                    'label' => \google\protobuf\FieldDescriptorProto\Label::LABEL_OPTIONAL()
                ]),
                \google\protobuf\FieldDescriptorProto::fromArray([
                    'number' => 42,
                    'name' => 'views',
                    'type' => \google\protobuf\FieldDescriptorProto\Type::TYPE_UINT32(),
                    'label' => \google\protobuf\FieldDescriptorProto\Label::LABEL_OPTIONAL()
                ]),
                \google\protobuf\FieldDescriptorProto::fromArray([
                    'number' => 43,
                    'name' => 'image_width',
                    'type' => \google\protobuf\FieldDescriptorProto\Type::TYPE_UINT32(),
                    'label' => \google\protobuf\FieldDescriptorProto\Label::LABEL_OPTIONAL()
                ]),
                \google\protobuf\FieldDescriptorProto::fromArray([
                    'number' => 44,
                    'name' => 'image_height',
                    'type' => \google\protobuf\FieldDescriptorProto\Type::TYPE_UINT32(),
                    'label' => \google\protobuf\FieldDescriptorProto\Label::LABEL_OPTIONAL()
                ]),
                \google\protobuf\FieldDescriptorProto::fromArray([
                    'number' => 45,
                    'name' => 'image_url',
                    'type' => \google\protobuf\FieldDescriptorProto\Type::TYPE_STRING(),
                    'label' => \google\protobuf\FieldDescriptorProto\Label::LABEL_OPTIONAL()
                ]),
                \google\protobuf\FieldDescriptorProto::fromArray([
                    'number' => 46,
                    'name' => 'spoiler_tag',
                    'type' => \google\protobuf\FieldDescriptorProto\Type::TYPE_BOOL(),
                    'label' => \google\protobuf\FieldDescriptorProto\Label::LABEL_OPTIONAL()
                ]),
                \google\protobuf\FieldDescriptorProto::fromArray([
                    'number' => 47,
                    'name' => 'shortcutid',
                    'type' => \google\protobuf\FieldDescriptorProto\Type::TYPE_UINT32(),
                    'label' => \google\protobuf\FieldDescriptorProto\Label::LABEL_OPTIONAL()
                ]),
                \google\protobuf\FieldDescriptorProto::fromArray([
                    'number' => 48,
                    'name' => 'shortcutname',
                    'type' => \google\protobuf\FieldDescriptorProto\Type::TYPE_STRING(),
                    'label' => \google\protobuf\FieldDescriptorProto\Label::LABEL_OPTIONAL()
                ]),
                \google\protobuf\FieldDescriptorProto::fromArray([
                    'number' => 49,
                    'name' => 'num_children',
                    'type' => \google\protobuf\FieldDescriptorProto\Type::TYPE_UINT32(),
                    'label' => \google\protobuf\FieldDescriptorProto\Label::LABEL_OPTIONAL()
                ]),
                \google\protobuf\FieldDescriptorProto::fromArray([
                    'number' => 50,
                    'name' => 'num_reports',
                    'type' => \google\protobuf\FieldDescriptorProto\Type::TYPE_UINT32(),
                    'label' => \google\protobuf\FieldDescriptorProto\Label::LABEL_OPTIONAL()
                ]),
                \google\protobuf\FieldDescriptorProto::fromArray([
                    'number' => 51,
                    'name' => 'previews',
                    'type' => \google\protobuf\FieldDescriptorProto\Type::TYPE_MESSAGE(),
                    'label' => \google\protobuf\FieldDescriptorProto\Label::LABEL_REPEATED(),
                    'type_name' => '.SteamKit.Base.Unified.SteamMsgPublishedFile.PublishedFileDetails.Preview'
                ]),
                \google\protobuf\FieldDescriptorProto::fromArray([
                    'number' => 52,
                    'name' => 'tags',
                    'type' => \google\protobuf\FieldDescriptorProto\Type::TYPE_MESSAGE(),
                    'label' => \google\protobuf\FieldDescriptorProto\Label::LABEL_REPEATED(),
                    'type_name' => '.SteamKit.Base.Unified.SteamMsgPublishedFile.PublishedFileDetails.Tag'
                ]),
                \google\protobuf\FieldDescriptorProto::fromArray([
                    'number' => 53,
                    'name' => 'children',
                    'type' => \google\protobuf\FieldDescriptorProto\Type::TYPE_MESSAGE(),
                    'label' => \google\protobuf\FieldDescriptorProto\Label::LABEL_REPEATED(),
                    'type_name' => '.SteamKit.Base.Unified.SteamMsgPublishedFile.PublishedFileDetails.Child'
                ]),
                \google\protobuf\FieldDescriptorProto::fromArray([
                    'number' => 54,
                    'name' => 'kvtags',
                    'type' => \google\protobuf\FieldDescriptorProto\Type::TYPE_MESSAGE(),
                    'label' => \google\protobuf\FieldDescriptorProto\Label::LABEL_REPEATED(),
                    'type_name' => '.SteamKit.Base.Unified.SteamMsgPublishedFile.PublishedFileDetails.KVTag'
                ]),
                \google\protobuf\FieldDescriptorProto::fromArray([
                    'number' => 55,
                    'name' => 'vote_data',
                    'type' => \google\protobuf\FieldDescriptorProto\Type::TYPE_MESSAGE(),
                    'label' => \google\protobuf\FieldDescriptorProto\Label::LABEL_OPTIONAL(),
                    'type_name' => '.SteamKit.Base.Unified.SteamMsgPublishedFile.PublishedFileDetails.VoteData'
                ]),
                \google\protobuf\FieldDescriptorProto::fromArray([
                    'number' => 56,
                    'name' => 'time_subscribed',
                    'type' => \google\protobuf\FieldDescriptorProto\Type::TYPE_UINT32(),
                    'label' => \google\protobuf\FieldDescriptorProto\Label::LABEL_OPTIONAL()
                ]),
                \google\protobuf\FieldDescriptorProto::fromArray([
                    'number' => 57,
                    'name' => 'for_sale_data',
                    'type' => \google\protobuf\FieldDescriptorProto\Type::TYPE_MESSAGE(),
                    'label' => \google\protobuf\FieldDescriptorProto\Label::LABEL_OPTIONAL(),
                    'type_name' => '.SteamKit.Base.Unified.SteamMsgPublishedFile.PublishedFileDetails.ForSaleData'
                ]),
                \google\protobuf\FieldDescriptorProto::fromArray([
                    'number' => 58,
                    'name' => 'metadata',
                    'type' => \google\protobuf\FieldDescriptorProto\Type::TYPE_STRING(),
                    'label' => \google\protobuf\FieldDescriptorProto\Label::LABEL_OPTIONAL()
                ]),
                \google\protobuf\FieldDescriptorProto::fromArray([
                    'number' => 59,
                    'name' => 'incompatible_actor',
                    'type' => \google\protobuf\FieldDescriptorProto\Type::TYPE_FIXED64(),
                    'label' => \google\protobuf\FieldDescriptorProto\Label::LABEL_OPTIONAL()
                ]),
                \google\protobuf\FieldDescriptorProto::fromArray([
                    'number' => 60,
                    'name' => 'incompatible_timestamp',
                    'type' => \google\protobuf\FieldDescriptorProto\Type::TYPE_UINT32(),
                    'label' => \google\protobuf\FieldDescriptorProto\Label::LABEL_OPTIONAL()
                ]),
                \google\protobuf\FieldDescriptorProto::fromArray([
                    'number' => 61,
                    'name' => 'language',
                    'type' => \google\protobuf\FieldDescriptorProto\Type::TYPE_INT32(),
                    'label' => \google\protobuf\FieldDescriptorProto\Label::LABEL_OPTIONAL(),
                    'default_value' => '0'
                ]),
            ],
        ]);
    }

    /**
     * {@inheritdoc}
     */
    public function toStream(\Protobuf\Configuration $configuration = null)
    {
        $config  = $configuration ?: \Protobuf\Configuration::getInstance();
        $context = $config->createWriteContext();
        $stream  = $context->getStream();

        $this->writeTo($context);
        $stream->seek(0);

        return $stream;
    }

    /**
     * {@inheritdoc}
     */
    public function writeTo(\Protobuf\WriteContext $context)
    {
        $stream      = $context->getStream();
        $writer      = $context->getWriter();
        $sizeContext = $context->getComputeSizeContext();

        if ($this->result !== null) {
            $writer->writeVarint($stream, 8);
            $writer->writeVarint($stream, $this->result);
        }

        if ($this->publishedfileid !== null) {
            $writer->writeVarint($stream, 16);
            $writer->writeVarint($stream, $this->publishedfileid);
        }

        if ($this->creator !== null) {
            $writer->writeVarint($stream, 25);
            $writer->writeFixed64($stream, $this->creator);
        }

        if ($this->creator_appid !== null) {
            $writer->writeVarint($stream, 32);
            $writer->writeVarint($stream, $this->creator_appid);
        }

        if ($this->consumer_appid !== null) {
            $writer->writeVarint($stream, 40);
            $writer->writeVarint($stream, $this->consumer_appid);
        }

        if ($this->consumer_shortcutid !== null) {
            $writer->writeVarint($stream, 48);
            $writer->writeVarint($stream, $this->consumer_shortcutid);
        }

        if ($this->filename !== null) {
            $writer->writeVarint($stream, 58);
            $writer->writeString($stream, $this->filename);
        }

        if ($this->file_size !== null) {
            $writer->writeVarint($stream, 64);
            $writer->writeVarint($stream, $this->file_size);
        }

        if ($this->preview_file_size !== null) {
            $writer->writeVarint($stream, 72);
            $writer->writeVarint($stream, $this->preview_file_size);
        }

        if ($this->file_url !== null) {
            $writer->writeVarint($stream, 82);
            $writer->writeString($stream, $this->file_url);
        }

        if ($this->preview_url !== null) {
            $writer->writeVarint($stream, 90);
            $writer->writeString($stream, $this->preview_url);
        }

        if ($this->youtubevideoid !== null) {
            $writer->writeVarint($stream, 98);
            $writer->writeString($stream, $this->youtubevideoid);
        }

        if ($this->url !== null) {
            $writer->writeVarint($stream, 106);
            $writer->writeString($stream, $this->url);
        }

        if ($this->hcontent_file !== null) {
            $writer->writeVarint($stream, 113);
            $writer->writeFixed64($stream, $this->hcontent_file);
        }

        if ($this->hcontent_preview !== null) {
            $writer->writeVarint($stream, 121);
            $writer->writeFixed64($stream, $this->hcontent_preview);
        }

        if ($this->title !== null) {
            $writer->writeVarint($stream, 130);
            $writer->writeString($stream, $this->title);
        }

        if ($this->file_description !== null) {
            $writer->writeVarint($stream, 138);
            $writer->writeString($stream, $this->file_description);
        }

        if ($this->short_description !== null) {
            $writer->writeVarint($stream, 146);
            $writer->writeString($stream, $this->short_description);
        }

        if ($this->time_created !== null) {
            $writer->writeVarint($stream, 152);
            $writer->writeVarint($stream, $this->time_created);
        }

        if ($this->time_updated !== null) {
            $writer->writeVarint($stream, 160);
            $writer->writeVarint($stream, $this->time_updated);
        }

        if ($this->visibility !== null) {
            $writer->writeVarint($stream, 168);
            $writer->writeVarint($stream, $this->visibility);
        }

        if ($this->flags !== null) {
            $writer->writeVarint($stream, 176);
            $writer->writeVarint($stream, $this->flags);
        }

        if ($this->workshop_file !== null) {
            $writer->writeVarint($stream, 184);
            $writer->writeBool($stream, $this->workshop_file);
        }

        if ($this->workshop_accepted !== null) {
            $writer->writeVarint($stream, 192);
            $writer->writeBool($stream, $this->workshop_accepted);
        }

        if ($this->show_subscribe_all !== null) {
            $writer->writeVarint($stream, 200);
            $writer->writeBool($stream, $this->show_subscribe_all);
        }

        if ($this->num_comments_developer !== null) {
            $writer->writeVarint($stream, 208);
            $writer->writeVarint($stream, $this->num_comments_developer);
        }

        if ($this->num_comments_public !== null) {
            $writer->writeVarint($stream, 216);
            $writer->writeVarint($stream, $this->num_comments_public);
        }

        if ($this->banned !== null) {
            $writer->writeVarint($stream, 224);
            $writer->writeBool($stream, $this->banned);
        }

        if ($this->ban_reason !== null) {
            $writer->writeVarint($stream, 234);
            $writer->writeString($stream, $this->ban_reason);
        }

        if ($this->banner !== null) {
            $writer->writeVarint($stream, 241);
            $writer->writeFixed64($stream, $this->banner);
        }

        if ($this->can_be_deleted !== null) {
            $writer->writeVarint($stream, 248);
            $writer->writeBool($stream, $this->can_be_deleted);
        }

        if ($this->incompatible !== null) {
            $writer->writeVarint($stream, 256);
            $writer->writeBool($stream, $this->incompatible);
        }

        if ($this->app_name !== null) {
            $writer->writeVarint($stream, 266);
            $writer->writeString($stream, $this->app_name);
        }

        if ($this->file_type !== null) {
            $writer->writeVarint($stream, 272);
            $writer->writeVarint($stream, $this->file_type);
        }

        if ($this->can_subscribe !== null) {
            $writer->writeVarint($stream, 280);
            $writer->writeBool($stream, $this->can_subscribe);
        }

        if ($this->subscriptions !== null) {
            $writer->writeVarint($stream, 288);
            $writer->writeVarint($stream, $this->subscriptions);
        }

        if ($this->favorited !== null) {
            $writer->writeVarint($stream, 296);
            $writer->writeVarint($stream, $this->favorited);
        }

        if ($this->followers !== null) {
            $writer->writeVarint($stream, 304);
            $writer->writeVarint($stream, $this->followers);
        }

        if ($this->lifetime_subscriptions !== null) {
            $writer->writeVarint($stream, 312);
            $writer->writeVarint($stream, $this->lifetime_subscriptions);
        }

        if ($this->lifetime_favorited !== null) {
            $writer->writeVarint($stream, 320);
            $writer->writeVarint($stream, $this->lifetime_favorited);
        }

        if ($this->lifetime_followers !== null) {
            $writer->writeVarint($stream, 328);
            $writer->writeVarint($stream, $this->lifetime_followers);
        }

        if ($this->lifetime_playtime !== null) {
            $writer->writeVarint($stream, 496);
            $writer->writeVarint($stream, $this->lifetime_playtime);
        }

        if ($this->lifetime_playtime_sessions !== null) {
            $writer->writeVarint($stream, 504);
            $writer->writeVarint($stream, $this->lifetime_playtime_sessions);
        }

        if ($this->views !== null) {
            $writer->writeVarint($stream, 336);
            $writer->writeVarint($stream, $this->views);
        }

        if ($this->image_width !== null) {
            $writer->writeVarint($stream, 344);
            $writer->writeVarint($stream, $this->image_width);
        }

        if ($this->image_height !== null) {
            $writer->writeVarint($stream, 352);
            $writer->writeVarint($stream, $this->image_height);
        }

        if ($this->image_url !== null) {
            $writer->writeVarint($stream, 362);
            $writer->writeString($stream, $this->image_url);
        }

        if ($this->spoiler_tag !== null) {
            $writer->writeVarint($stream, 368);
            $writer->writeBool($stream, $this->spoiler_tag);
        }

        if ($this->shortcutid !== null) {
            $writer->writeVarint($stream, 376);
            $writer->writeVarint($stream, $this->shortcutid);
        }

        if ($this->shortcutname !== null) {
            $writer->writeVarint($stream, 386);
            $writer->writeString($stream, $this->shortcutname);
        }

        if ($this->num_children !== null) {
            $writer->writeVarint($stream, 392);
            $writer->writeVarint($stream, $this->num_children);
        }

        if ($this->num_reports !== null) {
            $writer->writeVarint($stream, 400);
            $writer->writeVarint($stream, $this->num_reports);
        }

        if ($this->previews !== null) {
            foreach ($this->previews as $val) {
                $writer->writeVarint($stream, 410);
                $writer->writeVarint($stream, $val->serializedSize($sizeContext));
                $val->writeTo($context);
            }
        }

        if ($this->tags !== null) {
            foreach ($this->tags as $val) {
                $writer->writeVarint($stream, 418);
                $writer->writeVarint($stream, $val->serializedSize($sizeContext));
                $val->writeTo($context);
            }
        }

        if ($this->children !== null) {
            foreach ($this->children as $val) {
                $writer->writeVarint($stream, 426);
                $writer->writeVarint($stream, $val->serializedSize($sizeContext));
                $val->writeTo($context);
            }
        }

        if ($this->kvtags !== null) {
            foreach ($this->kvtags as $val) {
                $writer->writeVarint($stream, 434);
                $writer->writeVarint($stream, $val->serializedSize($sizeContext));
                $val->writeTo($context);
            }
        }

        if ($this->vote_data !== null) {
            $writer->writeVarint($stream, 442);
            $writer->writeVarint($stream, $this->vote_data->serializedSize($sizeContext));
            $this->vote_data->writeTo($context);
        }

        if ($this->time_subscribed !== null) {
            $writer->writeVarint($stream, 448);
            $writer->writeVarint($stream, $this->time_subscribed);
        }

        if ($this->for_sale_data !== null) {
            $writer->writeVarint($stream, 458);
            $writer->writeVarint($stream, $this->for_sale_data->serializedSize($sizeContext));
            $this->for_sale_data->writeTo($context);
        }

        if ($this->metadata !== null) {
            $writer->writeVarint($stream, 466);
            $writer->writeString($stream, $this->metadata);
        }

        if ($this->incompatible_actor !== null) {
            $writer->writeVarint($stream, 473);
            $writer->writeFixed64($stream, $this->incompatible_actor);
        }

        if ($this->incompatible_timestamp !== null) {
            $writer->writeVarint($stream, 480);
            $writer->writeVarint($stream, $this->incompatible_timestamp);
        }

        if ($this->language !== null) {
            $writer->writeVarint($stream, 488);
            $writer->writeVarint($stream, $this->language);
        }

        if ($this->extensions !== null) {
            $this->extensions->writeTo($context);
        }

        return $stream;
    }

    /**
     * {@inheritdoc}
     */
    public function readFrom(\Protobuf\ReadContext $context)
    {
        $reader = $context->getReader();
        $length = $context->getLength();
        $stream = $context->getStream();

        $limit = ($length !== null)
            ? ($stream->tell() + $length)
            : null;

        while ($limit === null || $stream->tell() < $limit) {

            if ($stream->eof()) {
                break;
            }

            $key  = $reader->readVarint($stream);
            $wire = \Protobuf\WireFormat::getTagWireType($key);
            $tag  = \Protobuf\WireFormat::getTagFieldNumber($key);

            if ($stream->eof()) {
                break;
            }

            if ($tag === 1) {
                \Protobuf\WireFormat::assertWireType($wire, 13);

                $this->result = $reader->readVarint($stream);

                continue;
            }

            if ($tag === 2) {
                \Protobuf\WireFormat::assertWireType($wire, 4);

                $this->publishedfileid = $reader->readVarint($stream);

                continue;
            }

            if ($tag === 3) {
                \Protobuf\WireFormat::assertWireType($wire, 6);

                $this->creator = $reader->readFixed64($stream);

                continue;
            }

            if ($tag === 4) {
                \Protobuf\WireFormat::assertWireType($wire, 13);

                $this->creator_appid = $reader->readVarint($stream);

                continue;
            }

            if ($tag === 5) {
                \Protobuf\WireFormat::assertWireType($wire, 13);

                $this->consumer_appid = $reader->readVarint($stream);

                continue;
            }

            if ($tag === 6) {
                \Protobuf\WireFormat::assertWireType($wire, 13);

                $this->consumer_shortcutid = $reader->readVarint($stream);

                continue;
            }

            if ($tag === 7) {
                \Protobuf\WireFormat::assertWireType($wire, 9);

                $this->filename = $reader->readString($stream);

                continue;
            }

            if ($tag === 8) {
                \Protobuf\WireFormat::assertWireType($wire, 4);

                $this->file_size = $reader->readVarint($stream);

                continue;
            }

            if ($tag === 9) {
                \Protobuf\WireFormat::assertWireType($wire, 4);

                $this->preview_file_size = $reader->readVarint($stream);

                continue;
            }

            if ($tag === 10) {
                \Protobuf\WireFormat::assertWireType($wire, 9);

                $this->file_url = $reader->readString($stream);

                continue;
            }

            if ($tag === 11) {
                \Protobuf\WireFormat::assertWireType($wire, 9);

                $this->preview_url = $reader->readString($stream);

                continue;
            }

            if ($tag === 12) {
                \Protobuf\WireFormat::assertWireType($wire, 9);

                $this->youtubevideoid = $reader->readString($stream);

                continue;
            }

            if ($tag === 13) {
                \Protobuf\WireFormat::assertWireType($wire, 9);

                $this->url = $reader->readString($stream);

                continue;
            }

            if ($tag === 14) {
                \Protobuf\WireFormat::assertWireType($wire, 6);

                $this->hcontent_file = $reader->readFixed64($stream);

                continue;
            }

            if ($tag === 15) {
                \Protobuf\WireFormat::assertWireType($wire, 6);

                $this->hcontent_preview = $reader->readFixed64($stream);

                continue;
            }

            if ($tag === 16) {
                \Protobuf\WireFormat::assertWireType($wire, 9);

                $this->title = $reader->readString($stream);

                continue;
            }

            if ($tag === 17) {
                \Protobuf\WireFormat::assertWireType($wire, 9);

                $this->file_description = $reader->readString($stream);

                continue;
            }

            if ($tag === 18) {
                \Protobuf\WireFormat::assertWireType($wire, 9);

                $this->short_description = $reader->readString($stream);

                continue;
            }

            if ($tag === 19) {
                \Protobuf\WireFormat::assertWireType($wire, 13);

                $this->time_created = $reader->readVarint($stream);

                continue;
            }

            if ($tag === 20) {
                \Protobuf\WireFormat::assertWireType($wire, 13);

                $this->time_updated = $reader->readVarint($stream);

                continue;
            }

            if ($tag === 21) {
                \Protobuf\WireFormat::assertWireType($wire, 13);

                $this->visibility = $reader->readVarint($stream);

                continue;
            }

            if ($tag === 22) {
                \Protobuf\WireFormat::assertWireType($wire, 13);

                $this->flags = $reader->readVarint($stream);

                continue;
            }

            if ($tag === 23) {
                \Protobuf\WireFormat::assertWireType($wire, 8);

                $this->workshop_file = $reader->readBool($stream);

                continue;
            }

            if ($tag === 24) {
                \Protobuf\WireFormat::assertWireType($wire, 8);

                $this->workshop_accepted = $reader->readBool($stream);

                continue;
            }

            if ($tag === 25) {
                \Protobuf\WireFormat::assertWireType($wire, 8);

                $this->show_subscribe_all = $reader->readBool($stream);

                continue;
            }

            if ($tag === 26) {
                \Protobuf\WireFormat::assertWireType($wire, 5);

                $this->num_comments_developer = $reader->readVarint($stream);

                continue;
            }

            if ($tag === 27) {
                \Protobuf\WireFormat::assertWireType($wire, 5);

                $this->num_comments_public = $reader->readVarint($stream);

                continue;
            }

            if ($tag === 28) {
                \Protobuf\WireFormat::assertWireType($wire, 8);

                $this->banned = $reader->readBool($stream);

                continue;
            }

            if ($tag === 29) {
                \Protobuf\WireFormat::assertWireType($wire, 9);

                $this->ban_reason = $reader->readString($stream);

                continue;
            }

            if ($tag === 30) {
                \Protobuf\WireFormat::assertWireType($wire, 6);

                $this->banner = $reader->readFixed64($stream);

                continue;
            }

            if ($tag === 31) {
                \Protobuf\WireFormat::assertWireType($wire, 8);

                $this->can_be_deleted = $reader->readBool($stream);

                continue;
            }

            if ($tag === 32) {
                \Protobuf\WireFormat::assertWireType($wire, 8);

                $this->incompatible = $reader->readBool($stream);

                continue;
            }

            if ($tag === 33) {
                \Protobuf\WireFormat::assertWireType($wire, 9);

                $this->app_name = $reader->readString($stream);

                continue;
            }

            if ($tag === 34) {
                \Protobuf\WireFormat::assertWireType($wire, 13);

                $this->file_type = $reader->readVarint($stream);

                continue;
            }

            if ($tag === 35) {
                \Protobuf\WireFormat::assertWireType($wire, 8);

                $this->can_subscribe = $reader->readBool($stream);

                continue;
            }

            if ($tag === 36) {
                \Protobuf\WireFormat::assertWireType($wire, 13);

                $this->subscriptions = $reader->readVarint($stream);

                continue;
            }

            if ($tag === 37) {
                \Protobuf\WireFormat::assertWireType($wire, 13);

                $this->favorited = $reader->readVarint($stream);

                continue;
            }

            if ($tag === 38) {
                \Protobuf\WireFormat::assertWireType($wire, 13);

                $this->followers = $reader->readVarint($stream);

                continue;
            }

            if ($tag === 39) {
                \Protobuf\WireFormat::assertWireType($wire, 13);

                $this->lifetime_subscriptions = $reader->readVarint($stream);

                continue;
            }

            if ($tag === 40) {
                \Protobuf\WireFormat::assertWireType($wire, 13);

                $this->lifetime_favorited = $reader->readVarint($stream);

                continue;
            }

            if ($tag === 41) {
                \Protobuf\WireFormat::assertWireType($wire, 13);

                $this->lifetime_followers = $reader->readVarint($stream);

                continue;
            }

            if ($tag === 62) {
                \Protobuf\WireFormat::assertWireType($wire, 4);

                $this->lifetime_playtime = $reader->readVarint($stream);

                continue;
            }

            if ($tag === 63) {
                \Protobuf\WireFormat::assertWireType($wire, 4);

                $this->lifetime_playtime_sessions = $reader->readVarint($stream);

                continue;
            }

            if ($tag === 42) {
                \Protobuf\WireFormat::assertWireType($wire, 13);

                $this->views = $reader->readVarint($stream);

                continue;
            }

            if ($tag === 43) {
                \Protobuf\WireFormat::assertWireType($wire, 13);

                $this->image_width = $reader->readVarint($stream);

                continue;
            }

            if ($tag === 44) {
                \Protobuf\WireFormat::assertWireType($wire, 13);

                $this->image_height = $reader->readVarint($stream);

                continue;
            }

            if ($tag === 45) {
                \Protobuf\WireFormat::assertWireType($wire, 9);

                $this->image_url = $reader->readString($stream);

                continue;
            }

            if ($tag === 46) {
                \Protobuf\WireFormat::assertWireType($wire, 8);

                $this->spoiler_tag = $reader->readBool($stream);

                continue;
            }

            if ($tag === 47) {
                \Protobuf\WireFormat::assertWireType($wire, 13);

                $this->shortcutid = $reader->readVarint($stream);

                continue;
            }

            if ($tag === 48) {
                \Protobuf\WireFormat::assertWireType($wire, 9);

                $this->shortcutname = $reader->readString($stream);

                continue;
            }

            if ($tag === 49) {
                \Protobuf\WireFormat::assertWireType($wire, 13);

                $this->num_children = $reader->readVarint($stream);

                continue;
            }

            if ($tag === 50) {
                \Protobuf\WireFormat::assertWireType($wire, 13);

                $this->num_reports = $reader->readVarint($stream);

                continue;
            }

            if ($tag === 51) {
                \Protobuf\WireFormat::assertWireType($wire, 11);

                $innerSize    = $reader->readVarint($stream);
                $innerMessage = new \SteamKit\Base\Unified\SteamMsgPublishedFile\PublishedFileDetails\Preview();

                if ($this->previews === null) {
                    $this->previews = new \Protobuf\MessageCollection();
                }

                $this->previews->add($innerMessage);

                $context->setLength($innerSize);
                $innerMessage->readFrom($context);
                $context->setLength($length);

                continue;
            }

            if ($tag === 52) {
                \Protobuf\WireFormat::assertWireType($wire, 11);

                $innerSize    = $reader->readVarint($stream);
                $innerMessage = new \SteamKit\Base\Unified\SteamMsgPublishedFile\PublishedFileDetails\Tag();

                if ($this->tags === null) {
                    $this->tags = new \Protobuf\MessageCollection();
                }

                $this->tags->add($innerMessage);

                $context->setLength($innerSize);
                $innerMessage->readFrom($context);
                $context->setLength($length);

                continue;
            }

            if ($tag === 53) {
                \Protobuf\WireFormat::assertWireType($wire, 11);

                $innerSize    = $reader->readVarint($stream);
                $innerMessage = new \SteamKit\Base\Unified\SteamMsgPublishedFile\PublishedFileDetails\Child();

                if ($this->children === null) {
                    $this->children = new \Protobuf\MessageCollection();
                }

                $this->children->add($innerMessage);

                $context->setLength($innerSize);
                $innerMessage->readFrom($context);
                $context->setLength($length);

                continue;
            }

            if ($tag === 54) {
                \Protobuf\WireFormat::assertWireType($wire, 11);

                $innerSize    = $reader->readVarint($stream);
                $innerMessage = new \SteamKit\Base\Unified\SteamMsgPublishedFile\PublishedFileDetails\KVTag();

                if ($this->kvtags === null) {
                    $this->kvtags = new \Protobuf\MessageCollection();
                }

                $this->kvtags->add($innerMessage);

                $context->setLength($innerSize);
                $innerMessage->readFrom($context);
                $context->setLength($length);

                continue;
            }

            if ($tag === 55) {
                \Protobuf\WireFormat::assertWireType($wire, 11);

                $innerSize    = $reader->readVarint($stream);
                $innerMessage = new \SteamKit\Base\Unified\SteamMsgPublishedFile\PublishedFileDetails\VoteData();

                $this->vote_data = $innerMessage;

                $context->setLength($innerSize);
                $innerMessage->readFrom($context);
                $context->setLength($length);

                continue;
            }

            if ($tag === 56) {
                \Protobuf\WireFormat::assertWireType($wire, 13);

                $this->time_subscribed = $reader->readVarint($stream);

                continue;
            }

            if ($tag === 57) {
                \Protobuf\WireFormat::assertWireType($wire, 11);

                $innerSize    = $reader->readVarint($stream);
                $innerMessage = new \SteamKit\Base\Unified\SteamMsgPublishedFile\PublishedFileDetails\ForSaleData();

                $this->for_sale_data = $innerMessage;

                $context->setLength($innerSize);
                $innerMessage->readFrom($context);
                $context->setLength($length);

                continue;
            }

            if ($tag === 58) {
                \Protobuf\WireFormat::assertWireType($wire, 9);

                $this->metadata = $reader->readString($stream);

                continue;
            }

            if ($tag === 59) {
                \Protobuf\WireFormat::assertWireType($wire, 6);

                $this->incompatible_actor = $reader->readFixed64($stream);

                continue;
            }

            if ($tag === 60) {
                \Protobuf\WireFormat::assertWireType($wire, 13);

                $this->incompatible_timestamp = $reader->readVarint($stream);

                continue;
            }

            if ($tag === 61) {
                \Protobuf\WireFormat::assertWireType($wire, 5);

                $this->language = $reader->readVarint($stream);

                continue;
            }

            $extensions = $context->getExtensionRegistry();
            $extension  = $extensions ? $extensions->findByNumber(__CLASS__, $tag) : null;

            if ($extension !== null) {
                $this->extensions()->add($extension, $extension->readFrom($context, $wire));

                continue;
            }

            if ($this->unknownFieldSet === null) {
                $this->unknownFieldSet = new \Protobuf\UnknownFieldSet();
            }

            $data    = $reader->readUnknown($stream, $wire);
            $unknown = new \Protobuf\Unknown($tag, $wire, $data);

            $this->unknownFieldSet->add($unknown);

        }
    }

    /**
     * {@inheritdoc}
     */
    public function serializedSize(\Protobuf\ComputeSizeContext $context)
    {
        $calculator = $context->getSizeCalculator();
        $size       = 0;

        if ($this->result !== null) {
            $size += 1;
            $size += $calculator->computeVarintSize($this->result);
        }

        if ($this->publishedfileid !== null) {
            $size += 1;
            $size += $calculator->computeVarintSize($this->publishedfileid);
        }

        if ($this->creator !== null) {
            $size += 1;
            $size += 8;
        }

        if ($this->creator_appid !== null) {
            $size += 1;
            $size += $calculator->computeVarintSize($this->creator_appid);
        }

        if ($this->consumer_appid !== null) {
            $size += 1;
            $size += $calculator->computeVarintSize($this->consumer_appid);
        }

        if ($this->consumer_shortcutid !== null) {
            $size += 1;
            $size += $calculator->computeVarintSize($this->consumer_shortcutid);
        }

        if ($this->filename !== null) {
            $size += 1;
            $size += $calculator->computeStringSize($this->filename);
        }

        if ($this->file_size !== null) {
            $size += 1;
            $size += $calculator->computeVarintSize($this->file_size);
        }

        if ($this->preview_file_size !== null) {
            $size += 1;
            $size += $calculator->computeVarintSize($this->preview_file_size);
        }

        if ($this->file_url !== null) {
            $size += 1;
            $size += $calculator->computeStringSize($this->file_url);
        }

        if ($this->preview_url !== null) {
            $size += 1;
            $size += $calculator->computeStringSize($this->preview_url);
        }

        if ($this->youtubevideoid !== null) {
            $size += 1;
            $size += $calculator->computeStringSize($this->youtubevideoid);
        }

        if ($this->url !== null) {
            $size += 1;
            $size += $calculator->computeStringSize($this->url);
        }

        if ($this->hcontent_file !== null) {
            $size += 1;
            $size += 8;
        }

        if ($this->hcontent_preview !== null) {
            $size += 1;
            $size += 8;
        }

        if ($this->title !== null) {
            $size += 2;
            $size += $calculator->computeStringSize($this->title);
        }

        if ($this->file_description !== null) {
            $size += 2;
            $size += $calculator->computeStringSize($this->file_description);
        }

        if ($this->short_description !== null) {
            $size += 2;
            $size += $calculator->computeStringSize($this->short_description);
        }

        if ($this->time_created !== null) {
            $size += 2;
            $size += $calculator->computeVarintSize($this->time_created);
        }

        if ($this->time_updated !== null) {
            $size += 2;
            $size += $calculator->computeVarintSize($this->time_updated);
        }

        if ($this->visibility !== null) {
            $size += 2;
            $size += $calculator->computeVarintSize($this->visibility);
        }

        if ($this->flags !== null) {
            $size += 2;
            $size += $calculator->computeVarintSize($this->flags);
        }

        if ($this->workshop_file !== null) {
            $size += 2;
            $size += 1;
        }

        if ($this->workshop_accepted !== null) {
            $size += 2;
            $size += 1;
        }

        if ($this->show_subscribe_all !== null) {
            $size += 2;
            $size += 1;
        }

        if ($this->num_comments_developer !== null) {
            $size += 2;
            $size += $calculator->computeVarintSize($this->num_comments_developer);
        }

        if ($this->num_comments_public !== null) {
            $size += 2;
            $size += $calculator->computeVarintSize($this->num_comments_public);
        }

        if ($this->banned !== null) {
            $size += 2;
            $size += 1;
        }

        if ($this->ban_reason !== null) {
            $size += 2;
            $size += $calculator->computeStringSize($this->ban_reason);
        }

        if ($this->banner !== null) {
            $size += 2;
            $size += 8;
        }

        if ($this->can_be_deleted !== null) {
            $size += 2;
            $size += 1;
        }

        if ($this->incompatible !== null) {
            $size += 2;
            $size += 1;
        }

        if ($this->app_name !== null) {
            $size += 2;
            $size += $calculator->computeStringSize($this->app_name);
        }

        if ($this->file_type !== null) {
            $size += 2;
            $size += $calculator->computeVarintSize($this->file_type);
        }

        if ($this->can_subscribe !== null) {
            $size += 2;
            $size += 1;
        }

        if ($this->subscriptions !== null) {
            $size += 2;
            $size += $calculator->computeVarintSize($this->subscriptions);
        }

        if ($this->favorited !== null) {
            $size += 2;
            $size += $calculator->computeVarintSize($this->favorited);
        }

        if ($this->followers !== null) {
            $size += 2;
            $size += $calculator->computeVarintSize($this->followers);
        }

        if ($this->lifetime_subscriptions !== null) {
            $size += 2;
            $size += $calculator->computeVarintSize($this->lifetime_subscriptions);
        }

        if ($this->lifetime_favorited !== null) {
            $size += 2;
            $size += $calculator->computeVarintSize($this->lifetime_favorited);
        }

        if ($this->lifetime_followers !== null) {
            $size += 2;
            $size += $calculator->computeVarintSize($this->lifetime_followers);
        }

        if ($this->lifetime_playtime !== null) {
            $size += 2;
            $size += $calculator->computeVarintSize($this->lifetime_playtime);
        }

        if ($this->lifetime_playtime_sessions !== null) {
            $size += 2;
            $size += $calculator->computeVarintSize($this->lifetime_playtime_sessions);
        }

        if ($this->views !== null) {
            $size += 2;
            $size += $calculator->computeVarintSize($this->views);
        }

        if ($this->image_width !== null) {
            $size += 2;
            $size += $calculator->computeVarintSize($this->image_width);
        }

        if ($this->image_height !== null) {
            $size += 2;
            $size += $calculator->computeVarintSize($this->image_height);
        }

        if ($this->image_url !== null) {
            $size += 2;
            $size += $calculator->computeStringSize($this->image_url);
        }

        if ($this->spoiler_tag !== null) {
            $size += 2;
            $size += 1;
        }

        if ($this->shortcutid !== null) {
            $size += 2;
            $size += $calculator->computeVarintSize($this->shortcutid);
        }

        if ($this->shortcutname !== null) {
            $size += 2;
            $size += $calculator->computeStringSize($this->shortcutname);
        }

        if ($this->num_children !== null) {
            $size += 2;
            $size += $calculator->computeVarintSize($this->num_children);
        }

        if ($this->num_reports !== null) {
            $size += 2;
            $size += $calculator->computeVarintSize($this->num_reports);
        }

        if ($this->previews !== null) {
            foreach ($this->previews as $val) {
                $innerSize = $val->serializedSize($context);

                $size += 2;
                $size += $innerSize;
                $size += $calculator->computeVarintSize($innerSize);
            }
        }

        if ($this->tags !== null) {
            foreach ($this->tags as $val) {
                $innerSize = $val->serializedSize($context);

                $size += 2;
                $size += $innerSize;
                $size += $calculator->computeVarintSize($innerSize);
            }
        }

        if ($this->children !== null) {
            foreach ($this->children as $val) {
                $innerSize = $val->serializedSize($context);

                $size += 2;
                $size += $innerSize;
                $size += $calculator->computeVarintSize($innerSize);
            }
        }

        if ($this->kvtags !== null) {
            foreach ($this->kvtags as $val) {
                $innerSize = $val->serializedSize($context);

                $size += 2;
                $size += $innerSize;
                $size += $calculator->computeVarintSize($innerSize);
            }
        }

        if ($this->vote_data !== null) {
            $innerSize = $this->vote_data->serializedSize($context);

            $size += 2;
            $size += $innerSize;
            $size += $calculator->computeVarintSize($innerSize);
        }

        if ($this->time_subscribed !== null) {
            $size += 2;
            $size += $calculator->computeVarintSize($this->time_subscribed);
        }

        if ($this->for_sale_data !== null) {
            $innerSize = $this->for_sale_data->serializedSize($context);

            $size += 2;
            $size += $innerSize;
            $size += $calculator->computeVarintSize($innerSize);
        }

        if ($this->metadata !== null) {
            $size += 2;
            $size += $calculator->computeStringSize($this->metadata);
        }

        if ($this->incompatible_actor !== null) {
            $size += 2;
            $size += 8;
        }

        if ($this->incompatible_timestamp !== null) {
            $size += 2;
            $size += $calculator->computeVarintSize($this->incompatible_timestamp);
        }

        if ($this->language !== null) {
            $size += 2;
            $size += $calculator->computeVarintSize($this->language);
        }

        if ($this->extensions !== null) {
            $size += $this->extensions->serializedSize($context);
        }

        return $size;
    }

    /**
     * {@inheritdoc}
     */
    public function clear()
    {
        $this->result = null;
        $this->publishedfileid = null;
        $this->creator = null;
        $this->creator_appid = null;
        $this->consumer_appid = null;
        $this->consumer_shortcutid = null;
        $this->filename = null;
        $this->file_size = null;
        $this->preview_file_size = null;
        $this->file_url = null;
        $this->preview_url = null;
        $this->youtubevideoid = null;
        $this->url = null;
        $this->hcontent_file = null;
        $this->hcontent_preview = null;
        $this->title = null;
        $this->file_description = null;
        $this->short_description = null;
        $this->time_created = null;
        $this->time_updated = null;
        $this->visibility = null;
        $this->flags = null;
        $this->workshop_file = null;
        $this->workshop_accepted = null;
        $this->show_subscribe_all = null;
        $this->num_comments_developer = null;
        $this->num_comments_public = null;
        $this->banned = null;
        $this->ban_reason = null;
        $this->banner = null;
        $this->can_be_deleted = null;
        $this->incompatible = null;
        $this->app_name = null;
        $this->file_type = null;
        $this->can_subscribe = null;
        $this->subscriptions = null;
        $this->favorited = null;
        $this->followers = null;
        $this->lifetime_subscriptions = null;
        $this->lifetime_favorited = null;
        $this->lifetime_followers = null;
        $this->lifetime_playtime = null;
        $this->lifetime_playtime_sessions = null;
        $this->views = null;
        $this->image_width = null;
        $this->image_height = null;
        $this->image_url = null;
        $this->spoiler_tag = null;
        $this->shortcutid = null;
        $this->shortcutname = null;
        $this->num_children = null;
        $this->num_reports = null;
        $this->previews = null;
        $this->tags = null;
        $this->children = null;
        $this->kvtags = null;
        $this->vote_data = null;
        $this->time_subscribed = null;
        $this->for_sale_data = null;
        $this->metadata = null;
        $this->incompatible_actor = null;
        $this->incompatible_timestamp = null;
        $this->language = '0';
    }

    /**
     * {@inheritdoc}
     */
    public function merge(\Protobuf\Message $message)
    {
        if ( ! $message instanceof \SteamKit\Base\Unified\SteamMsgPublishedFile\PublishedFileDetails) {
            throw new \InvalidArgumentException(sprintf('Argument 1 passed to %s must be a %s, %s given', __METHOD__, __CLASS__, get_class($message)));
        }

        $this->result = ($message->result !== null) ? $message->result : $this->result;
        $this->publishedfileid = ($message->publishedfileid !== null) ? $message->publishedfileid : $this->publishedfileid;
        $this->creator = ($message->creator !== null) ? $message->creator : $this->creator;
        $this->creator_appid = ($message->creator_appid !== null) ? $message->creator_appid : $this->creator_appid;
        $this->consumer_appid = ($message->consumer_appid !== null) ? $message->consumer_appid : $this->consumer_appid;
        $this->consumer_shortcutid = ($message->consumer_shortcutid !== null) ? $message->consumer_shortcutid : $this->consumer_shortcutid;
        $this->filename = ($message->filename !== null) ? $message->filename : $this->filename;
        $this->file_size = ($message->file_size !== null) ? $message->file_size : $this->file_size;
        $this->preview_file_size = ($message->preview_file_size !== null) ? $message->preview_file_size : $this->preview_file_size;
        $this->file_url = ($message->file_url !== null) ? $message->file_url : $this->file_url;
        $this->preview_url = ($message->preview_url !== null) ? $message->preview_url : $this->preview_url;
        $this->youtubevideoid = ($message->youtubevideoid !== null) ? $message->youtubevideoid : $this->youtubevideoid;
        $this->url = ($message->url !== null) ? $message->url : $this->url;
        $this->hcontent_file = ($message->hcontent_file !== null) ? $message->hcontent_file : $this->hcontent_file;
        $this->hcontent_preview = ($message->hcontent_preview !== null) ? $message->hcontent_preview : $this->hcontent_preview;
        $this->title = ($message->title !== null) ? $message->title : $this->title;
        $this->file_description = ($message->file_description !== null) ? $message->file_description : $this->file_description;
        $this->short_description = ($message->short_description !== null) ? $message->short_description : $this->short_description;
        $this->time_created = ($message->time_created !== null) ? $message->time_created : $this->time_created;
        $this->time_updated = ($message->time_updated !== null) ? $message->time_updated : $this->time_updated;
        $this->visibility = ($message->visibility !== null) ? $message->visibility : $this->visibility;
        $this->flags = ($message->flags !== null) ? $message->flags : $this->flags;
        $this->workshop_file = ($message->workshop_file !== null) ? $message->workshop_file : $this->workshop_file;
        $this->workshop_accepted = ($message->workshop_accepted !== null) ? $message->workshop_accepted : $this->workshop_accepted;
        $this->show_subscribe_all = ($message->show_subscribe_all !== null) ? $message->show_subscribe_all : $this->show_subscribe_all;
        $this->num_comments_developer = ($message->num_comments_developer !== null) ? $message->num_comments_developer : $this->num_comments_developer;
        $this->num_comments_public = ($message->num_comments_public !== null) ? $message->num_comments_public : $this->num_comments_public;
        $this->banned = ($message->banned !== null) ? $message->banned : $this->banned;
        $this->ban_reason = ($message->ban_reason !== null) ? $message->ban_reason : $this->ban_reason;
        $this->banner = ($message->banner !== null) ? $message->banner : $this->banner;
        $this->can_be_deleted = ($message->can_be_deleted !== null) ? $message->can_be_deleted : $this->can_be_deleted;
        $this->incompatible = ($message->incompatible !== null) ? $message->incompatible : $this->incompatible;
        $this->app_name = ($message->app_name !== null) ? $message->app_name : $this->app_name;
        $this->file_type = ($message->file_type !== null) ? $message->file_type : $this->file_type;
        $this->can_subscribe = ($message->can_subscribe !== null) ? $message->can_subscribe : $this->can_subscribe;
        $this->subscriptions = ($message->subscriptions !== null) ? $message->subscriptions : $this->subscriptions;
        $this->favorited = ($message->favorited !== null) ? $message->favorited : $this->favorited;
        $this->followers = ($message->followers !== null) ? $message->followers : $this->followers;
        $this->lifetime_subscriptions = ($message->lifetime_subscriptions !== null) ? $message->lifetime_subscriptions : $this->lifetime_subscriptions;
        $this->lifetime_favorited = ($message->lifetime_favorited !== null) ? $message->lifetime_favorited : $this->lifetime_favorited;
        $this->lifetime_followers = ($message->lifetime_followers !== null) ? $message->lifetime_followers : $this->lifetime_followers;
        $this->lifetime_playtime = ($message->lifetime_playtime !== null) ? $message->lifetime_playtime : $this->lifetime_playtime;
        $this->lifetime_playtime_sessions = ($message->lifetime_playtime_sessions !== null) ? $message->lifetime_playtime_sessions : $this->lifetime_playtime_sessions;
        $this->views = ($message->views !== null) ? $message->views : $this->views;
        $this->image_width = ($message->image_width !== null) ? $message->image_width : $this->image_width;
        $this->image_height = ($message->image_height !== null) ? $message->image_height : $this->image_height;
        $this->image_url = ($message->image_url !== null) ? $message->image_url : $this->image_url;
        $this->spoiler_tag = ($message->spoiler_tag !== null) ? $message->spoiler_tag : $this->spoiler_tag;
        $this->shortcutid = ($message->shortcutid !== null) ? $message->shortcutid : $this->shortcutid;
        $this->shortcutname = ($message->shortcutname !== null) ? $message->shortcutname : $this->shortcutname;
        $this->num_children = ($message->num_children !== null) ? $message->num_children : $this->num_children;
        $this->num_reports = ($message->num_reports !== null) ? $message->num_reports : $this->num_reports;
        $this->previews = ($message->previews !== null) ? $message->previews : $this->previews;
        $this->tags = ($message->tags !== null) ? $message->tags : $this->tags;
        $this->children = ($message->children !== null) ? $message->children : $this->children;
        $this->kvtags = ($message->kvtags !== null) ? $message->kvtags : $this->kvtags;
        $this->vote_data = ($message->vote_data !== null) ? $message->vote_data : $this->vote_data;
        $this->time_subscribed = ($message->time_subscribed !== null) ? $message->time_subscribed : $this->time_subscribed;
        $this->for_sale_data = ($message->for_sale_data !== null) ? $message->for_sale_data : $this->for_sale_data;
        $this->metadata = ($message->metadata !== null) ? $message->metadata : $this->metadata;
        $this->incompatible_actor = ($message->incompatible_actor !== null) ? $message->incompatible_actor : $this->incompatible_actor;
        $this->incompatible_timestamp = ($message->incompatible_timestamp !== null) ? $message->incompatible_timestamp : $this->incompatible_timestamp;
        $this->language = ($message->language !== null) ? $message->language : $this->language;
    }


}

