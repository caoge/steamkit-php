<?php
/**
 * Generated by Protobuf protoc plugin.
 *
 * File descriptor : csgo/base_gcmessages.proto
 */


namespace SteamKit\Base\GC\CSGO\SteamMsgGC;

/**
 * Protobuf enum : SteamKit.Base.GC.CSGO.SteamMsgGC.GC_BannedWordType
 */
class GC_BannedWordType extends \Protobuf\Enum
{

    /**
     * GC_BANNED_WORD_DISABLE_WORD = 0
     */
    const GC_BANNED_WORD_DISABLE_WORD_VALUE = 0;

    /**
     * GC_BANNED_WORD_ENABLE_WORD = 1
     */
    const GC_BANNED_WORD_ENABLE_WORD_VALUE = 1;

    /**
     * @var \SteamKit\Base\GC\CSGO\SteamMsgGC\GC_BannedWordType
     */
    protected static $GC_BANNED_WORD_DISABLE_WORD = null;

    /**
     * @var \SteamKit\Base\GC\CSGO\SteamMsgGC\GC_BannedWordType
     */
    protected static $GC_BANNED_WORD_ENABLE_WORD = null;

    /**
     * @return \SteamKit\Base\GC\CSGO\SteamMsgGC\GC_BannedWordType
     */
    public static function GC_BANNED_WORD_DISABLE_WORD()
    {
        if (self::$GC_BANNED_WORD_DISABLE_WORD !== null) {
            return self::$GC_BANNED_WORD_DISABLE_WORD;
        }

        return self::$GC_BANNED_WORD_DISABLE_WORD = new self('GC_BANNED_WORD_DISABLE_WORD', self::GC_BANNED_WORD_DISABLE_WORD_VALUE);
    }

    /**
     * @return \SteamKit\Base\GC\CSGO\SteamMsgGC\GC_BannedWordType
     */
    public static function GC_BANNED_WORD_ENABLE_WORD()
    {
        if (self::$GC_BANNED_WORD_ENABLE_WORD !== null) {
            return self::$GC_BANNED_WORD_ENABLE_WORD;
        }

        return self::$GC_BANNED_WORD_ENABLE_WORD = new self('GC_BANNED_WORD_ENABLE_WORD', self::GC_BANNED_WORD_ENABLE_WORD_VALUE);
    }

    /**
     * @param int $value
     * @return \SteamKit\Base\GC\CSGO\SteamMsgGC\GC_BannedWordType
     */
    public static function valueOf($value)
    {
        switch ($value) {
            case 0: return self::GC_BANNED_WORD_DISABLE_WORD();
            case 1: return self::GC_BANNED_WORD_ENABLE_WORD();
            default: return null;
        }
    }


}

