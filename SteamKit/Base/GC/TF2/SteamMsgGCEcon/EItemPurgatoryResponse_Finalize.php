<?php
/**
 * Generated by Protobuf protoc plugin.
 *
 * File descriptor : tf/econ_gcmessages.proto
 */


namespace SteamKit\Base\GC\TF2\SteamMsgGCEcon;

/**
 * Protobuf enum :
 * SteamKit.Base.GC.TF2.SteamMsgGCEcon.EItemPurgatoryResponse_Finalize
 */
class EItemPurgatoryResponse_Finalize extends \Protobuf\Enum
{

    /**
     * k_ItemPurgatoryResponse_Finalize_Succeeded = 0
     */
    const k_ItemPurgatoryResponse_Finalize_Succeeded_VALUE = 0;

    /**
     * k_ItemPurgatoryResponse_Finalize_Failed_Incomplete = 1
     */
    const k_ItemPurgatoryResponse_Finalize_Failed_Incomplete_VALUE = 1;

    /**
     * k_ItemPurgatoryResponse_Finalize_Failed_ItemsNotInPurgatory = 2
     */
    const k_ItemPurgatoryResponse_Finalize_Failed_ItemsNotInPurgatory_VALUE = 2;

    /**
     * k_ItemPurgatoryResponse_Finalize_Failed_CouldNotFindItems = 3
     */
    const k_ItemPurgatoryResponse_Finalize_Failed_CouldNotFindItems_VALUE = 3;

    /**
     * k_ItemPurgatoryResponse_Finalize_Failed_NoSOCache = 4
     */
    const k_ItemPurgatoryResponse_Finalize_Failed_NoSOCache_VALUE = 4;

    /**
     * k_ItemPurgatoryResponse_Finalize_BackpackFull = 5
     */
    const k_ItemPurgatoryResponse_Finalize_BackpackFull_VALUE = 5;

    /**
     * @var \SteamKit\Base\GC\TF2\SteamMsgGCEcon\EItemPurgatoryResponse_Finalize
     */
    protected static $k_ItemPurgatoryResponse_Finalize_Succeeded = null;

    /**
     * @var \SteamKit\Base\GC\TF2\SteamMsgGCEcon\EItemPurgatoryResponse_Finalize
     */
    protected static $k_ItemPurgatoryResponse_Finalize_Failed_Incomplete = null;

    /**
     * @var \SteamKit\Base\GC\TF2\SteamMsgGCEcon\EItemPurgatoryResponse_Finalize
     */
    protected static $k_ItemPurgatoryResponse_Finalize_Failed_ItemsNotInPurgatory = null;

    /**
     * @var \SteamKit\Base\GC\TF2\SteamMsgGCEcon\EItemPurgatoryResponse_Finalize
     */
    protected static $k_ItemPurgatoryResponse_Finalize_Failed_CouldNotFindItems = null;

    /**
     * @var \SteamKit\Base\GC\TF2\SteamMsgGCEcon\EItemPurgatoryResponse_Finalize
     */
    protected static $k_ItemPurgatoryResponse_Finalize_Failed_NoSOCache = null;

    /**
     * @var \SteamKit\Base\GC\TF2\SteamMsgGCEcon\EItemPurgatoryResponse_Finalize
     */
    protected static $k_ItemPurgatoryResponse_Finalize_BackpackFull = null;

    /**
     * @return \SteamKit\Base\GC\TF2\SteamMsgGCEcon\EItemPurgatoryResponse_Finalize
     */
    public static function k_ItemPurgatoryResponse_Finalize_Succeeded()
    {
        if (self::$k_ItemPurgatoryResponse_Finalize_Succeeded !== null) {
            return self::$k_ItemPurgatoryResponse_Finalize_Succeeded;
        }

        return self::$k_ItemPurgatoryResponse_Finalize_Succeeded = new self('k_ItemPurgatoryResponse_Finalize_Succeeded', self::k_ItemPurgatoryResponse_Finalize_Succeeded_VALUE);
    }

    /**
     * @return \SteamKit\Base\GC\TF2\SteamMsgGCEcon\EItemPurgatoryResponse_Finalize
     */
    public static function k_ItemPurgatoryResponse_Finalize_Failed_Incomplete()
    {
        if (self::$k_ItemPurgatoryResponse_Finalize_Failed_Incomplete !== null) {
            return self::$k_ItemPurgatoryResponse_Finalize_Failed_Incomplete;
        }

        return self::$k_ItemPurgatoryResponse_Finalize_Failed_Incomplete = new self('k_ItemPurgatoryResponse_Finalize_Failed_Incomplete', self::k_ItemPurgatoryResponse_Finalize_Failed_Incomplete_VALUE);
    }

    /**
     * @return \SteamKit\Base\GC\TF2\SteamMsgGCEcon\EItemPurgatoryResponse_Finalize
     */
    public static function k_ItemPurgatoryResponse_Finalize_Failed_ItemsNotInPurgatory()
    {
        if (self::$k_ItemPurgatoryResponse_Finalize_Failed_ItemsNotInPurgatory !== null) {
            return self::$k_ItemPurgatoryResponse_Finalize_Failed_ItemsNotInPurgatory;
        }

        return self::$k_ItemPurgatoryResponse_Finalize_Failed_ItemsNotInPurgatory = new self('k_ItemPurgatoryResponse_Finalize_Failed_ItemsNotInPurgatory', self::k_ItemPurgatoryResponse_Finalize_Failed_ItemsNotInPurgatory_VALUE);
    }

    /**
     * @return \SteamKit\Base\GC\TF2\SteamMsgGCEcon\EItemPurgatoryResponse_Finalize
     */
    public static function k_ItemPurgatoryResponse_Finalize_Failed_CouldNotFindItems()
    {
        if (self::$k_ItemPurgatoryResponse_Finalize_Failed_CouldNotFindItems !== null) {
            return self::$k_ItemPurgatoryResponse_Finalize_Failed_CouldNotFindItems;
        }

        return self::$k_ItemPurgatoryResponse_Finalize_Failed_CouldNotFindItems = new self('k_ItemPurgatoryResponse_Finalize_Failed_CouldNotFindItems', self::k_ItemPurgatoryResponse_Finalize_Failed_CouldNotFindItems_VALUE);
    }

    /**
     * @return \SteamKit\Base\GC\TF2\SteamMsgGCEcon\EItemPurgatoryResponse_Finalize
     */
    public static function k_ItemPurgatoryResponse_Finalize_Failed_NoSOCache()
    {
        if (self::$k_ItemPurgatoryResponse_Finalize_Failed_NoSOCache !== null) {
            return self::$k_ItemPurgatoryResponse_Finalize_Failed_NoSOCache;
        }

        return self::$k_ItemPurgatoryResponse_Finalize_Failed_NoSOCache = new self('k_ItemPurgatoryResponse_Finalize_Failed_NoSOCache', self::k_ItemPurgatoryResponse_Finalize_Failed_NoSOCache_VALUE);
    }

    /**
     * @return \SteamKit\Base\GC\TF2\SteamMsgGCEcon\EItemPurgatoryResponse_Finalize
     */
    public static function k_ItemPurgatoryResponse_Finalize_BackpackFull()
    {
        if (self::$k_ItemPurgatoryResponse_Finalize_BackpackFull !== null) {
            return self::$k_ItemPurgatoryResponse_Finalize_BackpackFull;
        }

        return self::$k_ItemPurgatoryResponse_Finalize_BackpackFull = new self('k_ItemPurgatoryResponse_Finalize_BackpackFull', self::k_ItemPurgatoryResponse_Finalize_BackpackFull_VALUE);
    }

    /**
     * @param int $value
     * @return \SteamKit\Base\GC\TF2\SteamMsgGCEcon\EItemPurgatoryResponse_Finalize
     */
    public static function valueOf($value)
    {
        switch ($value) {
            case 0: return self::k_ItemPurgatoryResponse_Finalize_Succeeded();
            case 1: return self::k_ItemPurgatoryResponse_Finalize_Failed_Incomplete();
            case 2: return self::k_ItemPurgatoryResponse_Finalize_Failed_ItemsNotInPurgatory();
            case 3: return self::k_ItemPurgatoryResponse_Finalize_Failed_CouldNotFindItems();
            case 4: return self::k_ItemPurgatoryResponse_Finalize_Failed_NoSOCache();
            case 5: return self::k_ItemPurgatoryResponse_Finalize_BackpackFull();
            default: return null;
        }
    }


}

