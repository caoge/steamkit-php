<?php
/**
 * Generated by Protobuf protoc plugin.
 *
 * File descriptor : tf/steammessages.proto
 */


namespace SteamKit\Base\GC\TF2\SteamMsgBase;

/**
 * Protobuf message :
 * SteamKit.Base.GC.TF2.SteamMsgBase.CGCSystemMsg_GetAccountDetails_Response
 */
class CGCSystemMsg_GetAccountDetails_Response extends \Protobuf\AbstractMessage
{

    /**
     * @var \Protobuf\UnknownFieldSet
     */
    protected $unknownFieldSet = null;

    /**
     * @var \Protobuf\Extension\ExtensionFieldMap
     */
    protected $extensions = null;

    /**
     * eresult_deprecated optional uint32 = 1
     *
     * @var int
     */
    protected $eresult_deprecated = null;

    /**
     * account_name optional string = 2
     *
     * @var string
     */
    protected $account_name = null;

    /**
     * persona_name optional string = 3
     *
     * @var string
     */
    protected $persona_name = null;

    /**
     * is_profile_public optional bool = 4
     *
     * @var bool
     */
    protected $is_profile_public = null;

    /**
     * is_inventory_public optional bool = 5
     *
     * @var bool
     */
    protected $is_inventory_public = null;

    /**
     * is_vac_banned optional bool = 7
     *
     * @var bool
     */
    protected $is_vac_banned = null;

    /**
     * is_cyber_cafe optional bool = 8
     *
     * @var bool
     */
    protected $is_cyber_cafe = null;

    /**
     * is_school_account optional bool = 9
     *
     * @var bool
     */
    protected $is_school_account = null;

    /**
     * is_limited optional bool = 10
     *
     * @var bool
     */
    protected $is_limited = null;

    /**
     * is_subscribed optional bool = 11
     *
     * @var bool
     */
    protected $is_subscribed = null;

    /**
     * package optional uint32 = 12
     *
     * @var int
     */
    protected $package = null;

    /**
     * is_free_trial_account optional bool = 13
     *
     * @var bool
     */
    protected $is_free_trial_account = null;

    /**
     * free_trial_expiration optional uint32 = 14
     *
     * @var int
     */
    protected $free_trial_expiration = null;

    /**
     * is_low_violence optional bool = 15
     *
     * @var bool
     */
    protected $is_low_violence = null;

    /**
     * is_account_locked_down optional bool = 16
     *
     * @var bool
     */
    protected $is_account_locked_down = null;

    /**
     * is_community_banned optional bool = 17
     *
     * @var bool
     */
    protected $is_community_banned = null;

    /**
     * is_trade_banned optional bool = 18
     *
     * @var bool
     */
    protected $is_trade_banned = null;

    /**
     * trade_ban_expiration optional uint32 = 19
     *
     * @var int
     */
    protected $trade_ban_expiration = null;

    /**
     * accountid optional uint32 = 20
     *
     * @var int
     */
    protected $accountid = null;

    /**
     * suspension_end_time optional uint32 = 21
     *
     * @var int
     */
    protected $suspension_end_time = null;

    /**
     * currency optional string = 22
     *
     * @var string
     */
    protected $currency = null;

    /**
     * steam_level optional uint32 = 23
     *
     * @var int
     */
    protected $steam_level = null;

    /**
     * friend_count optional uint32 = 24
     *
     * @var int
     */
    protected $friend_count = null;

    /**
     * account_creation_time optional uint32 = 25
     *
     * @var int
     */
    protected $account_creation_time = null;

    /**
     * is_steamguard_enabled optional bool = 27
     *
     * @var bool
     */
    protected $is_steamguard_enabled = null;

    /**
     * is_phone_verified optional bool = 28
     *
     * @var bool
     */
    protected $is_phone_verified = null;

    /**
     * is_two_factor_auth_enabled optional bool = 29
     *
     * @var bool
     */
    protected $is_two_factor_auth_enabled = null;

    /**
     * two_factor_enabled_time optional uint32 = 30
     *
     * @var int
     */
    protected $two_factor_enabled_time = null;

    /**
     * phone_verification_time optional uint32 = 31
     *
     * @var int
     */
    protected $phone_verification_time = null;

    /**
     * phone_id optional uint64 = 33
     *
     * @var int
     */
    protected $phone_id = null;

    /**
     * is_phone_identifying optional bool = 34
     *
     * @var bool
     */
    protected $is_phone_identifying = null;

    /**
     * {@inheritdoc}
     */
    public function __construct($stream = null, \Protobuf\Configuration $configuration = null)
    {
        $this->eresult_deprecated = '2';

        parent::__construct($stream, $configuration);
    }

    /**
     * Check if 'eresult_deprecated' has a value
     *
     * @return bool
     */
    public function hasEresultDeprecated()
    {
        return $this->eresult_deprecated !== null;
    }

    /**
     * Get 'eresult_deprecated' value
     *
     * @return int
     */
    public function getEresultDeprecated()
    {
        return $this->eresult_deprecated;
    }

    /**
     * Set 'eresult_deprecated' value
     *
     * @param int $value
     */
    public function setEresultDeprecated($value = null)
    {
        $this->eresult_deprecated = $value;
    }

    /**
     * Check if 'account_name' has a value
     *
     * @return bool
     */
    public function hasAccountName()
    {
        return $this->account_name !== null;
    }

    /**
     * Get 'account_name' value
     *
     * @return string
     */
    public function getAccountName()
    {
        return $this->account_name;
    }

    /**
     * Set 'account_name' value
     *
     * @param string $value
     */
    public function setAccountName($value = null)
    {
        $this->account_name = $value;
    }

    /**
     * Check if 'persona_name' has a value
     *
     * @return bool
     */
    public function hasPersonaName()
    {
        return $this->persona_name !== null;
    }

    /**
     * Get 'persona_name' value
     *
     * @return string
     */
    public function getPersonaName()
    {
        return $this->persona_name;
    }

    /**
     * Set 'persona_name' value
     *
     * @param string $value
     */
    public function setPersonaName($value = null)
    {
        $this->persona_name = $value;
    }

    /**
     * Check if 'is_profile_public' has a value
     *
     * @return bool
     */
    public function hasIsProfilePublic()
    {
        return $this->is_profile_public !== null;
    }

    /**
     * Get 'is_profile_public' value
     *
     * @return bool
     */
    public function getIsProfilePublic()
    {
        return $this->is_profile_public;
    }

    /**
     * Set 'is_profile_public' value
     *
     * @param bool $value
     */
    public function setIsProfilePublic($value = null)
    {
        $this->is_profile_public = $value;
    }

    /**
     * Check if 'is_inventory_public' has a value
     *
     * @return bool
     */
    public function hasIsInventoryPublic()
    {
        return $this->is_inventory_public !== null;
    }

    /**
     * Get 'is_inventory_public' value
     *
     * @return bool
     */
    public function getIsInventoryPublic()
    {
        return $this->is_inventory_public;
    }

    /**
     * Set 'is_inventory_public' value
     *
     * @param bool $value
     */
    public function setIsInventoryPublic($value = null)
    {
        $this->is_inventory_public = $value;
    }

    /**
     * Check if 'is_vac_banned' has a value
     *
     * @return bool
     */
    public function hasIsVacBanned()
    {
        return $this->is_vac_banned !== null;
    }

    /**
     * Get 'is_vac_banned' value
     *
     * @return bool
     */
    public function getIsVacBanned()
    {
        return $this->is_vac_banned;
    }

    /**
     * Set 'is_vac_banned' value
     *
     * @param bool $value
     */
    public function setIsVacBanned($value = null)
    {
        $this->is_vac_banned = $value;
    }

    /**
     * Check if 'is_cyber_cafe' has a value
     *
     * @return bool
     */
    public function hasIsCyberCafe()
    {
        return $this->is_cyber_cafe !== null;
    }

    /**
     * Get 'is_cyber_cafe' value
     *
     * @return bool
     */
    public function getIsCyberCafe()
    {
        return $this->is_cyber_cafe;
    }

    /**
     * Set 'is_cyber_cafe' value
     *
     * @param bool $value
     */
    public function setIsCyberCafe($value = null)
    {
        $this->is_cyber_cafe = $value;
    }

    /**
     * Check if 'is_school_account' has a value
     *
     * @return bool
     */
    public function hasIsSchoolAccount()
    {
        return $this->is_school_account !== null;
    }

    /**
     * Get 'is_school_account' value
     *
     * @return bool
     */
    public function getIsSchoolAccount()
    {
        return $this->is_school_account;
    }

    /**
     * Set 'is_school_account' value
     *
     * @param bool $value
     */
    public function setIsSchoolAccount($value = null)
    {
        $this->is_school_account = $value;
    }

    /**
     * Check if 'is_limited' has a value
     *
     * @return bool
     */
    public function hasIsLimited()
    {
        return $this->is_limited !== null;
    }

    /**
     * Get 'is_limited' value
     *
     * @return bool
     */
    public function getIsLimited()
    {
        return $this->is_limited;
    }

    /**
     * Set 'is_limited' value
     *
     * @param bool $value
     */
    public function setIsLimited($value = null)
    {
        $this->is_limited = $value;
    }

    /**
     * Check if 'is_subscribed' has a value
     *
     * @return bool
     */
    public function hasIsSubscribed()
    {
        return $this->is_subscribed !== null;
    }

    /**
     * Get 'is_subscribed' value
     *
     * @return bool
     */
    public function getIsSubscribed()
    {
        return $this->is_subscribed;
    }

    /**
     * Set 'is_subscribed' value
     *
     * @param bool $value
     */
    public function setIsSubscribed($value = null)
    {
        $this->is_subscribed = $value;
    }

    /**
     * Check if 'package' has a value
     *
     * @return bool
     */
    public function hasPackage()
    {
        return $this->package !== null;
    }

    /**
     * Get 'package' value
     *
     * @return int
     */
    public function getPackage()
    {
        return $this->package;
    }

    /**
     * Set 'package' value
     *
     * @param int $value
     */
    public function setPackage($value = null)
    {
        $this->package = $value;
    }

    /**
     * Check if 'is_free_trial_account' has a value
     *
     * @return bool
     */
    public function hasIsFreeTrialAccount()
    {
        return $this->is_free_trial_account !== null;
    }

    /**
     * Get 'is_free_trial_account' value
     *
     * @return bool
     */
    public function getIsFreeTrialAccount()
    {
        return $this->is_free_trial_account;
    }

    /**
     * Set 'is_free_trial_account' value
     *
     * @param bool $value
     */
    public function setIsFreeTrialAccount($value = null)
    {
        $this->is_free_trial_account = $value;
    }

    /**
     * Check if 'free_trial_expiration' has a value
     *
     * @return bool
     */
    public function hasFreeTrialExpiration()
    {
        return $this->free_trial_expiration !== null;
    }

    /**
     * Get 'free_trial_expiration' value
     *
     * @return int
     */
    public function getFreeTrialExpiration()
    {
        return $this->free_trial_expiration;
    }

    /**
     * Set 'free_trial_expiration' value
     *
     * @param int $value
     */
    public function setFreeTrialExpiration($value = null)
    {
        $this->free_trial_expiration = $value;
    }

    /**
     * Check if 'is_low_violence' has a value
     *
     * @return bool
     */
    public function hasIsLowViolence()
    {
        return $this->is_low_violence !== null;
    }

    /**
     * Get 'is_low_violence' value
     *
     * @return bool
     */
    public function getIsLowViolence()
    {
        return $this->is_low_violence;
    }

    /**
     * Set 'is_low_violence' value
     *
     * @param bool $value
     */
    public function setIsLowViolence($value = null)
    {
        $this->is_low_violence = $value;
    }

    /**
     * Check if 'is_account_locked_down' has a value
     *
     * @return bool
     */
    public function hasIsAccountLockedDown()
    {
        return $this->is_account_locked_down !== null;
    }

    /**
     * Get 'is_account_locked_down' value
     *
     * @return bool
     */
    public function getIsAccountLockedDown()
    {
        return $this->is_account_locked_down;
    }

    /**
     * Set 'is_account_locked_down' value
     *
     * @param bool $value
     */
    public function setIsAccountLockedDown($value = null)
    {
        $this->is_account_locked_down = $value;
    }

    /**
     * Check if 'is_community_banned' has a value
     *
     * @return bool
     */
    public function hasIsCommunityBanned()
    {
        return $this->is_community_banned !== null;
    }

    /**
     * Get 'is_community_banned' value
     *
     * @return bool
     */
    public function getIsCommunityBanned()
    {
        return $this->is_community_banned;
    }

    /**
     * Set 'is_community_banned' value
     *
     * @param bool $value
     */
    public function setIsCommunityBanned($value = null)
    {
        $this->is_community_banned = $value;
    }

    /**
     * Check if 'is_trade_banned' has a value
     *
     * @return bool
     */
    public function hasIsTradeBanned()
    {
        return $this->is_trade_banned !== null;
    }

    /**
     * Get 'is_trade_banned' value
     *
     * @return bool
     */
    public function getIsTradeBanned()
    {
        return $this->is_trade_banned;
    }

    /**
     * Set 'is_trade_banned' value
     *
     * @param bool $value
     */
    public function setIsTradeBanned($value = null)
    {
        $this->is_trade_banned = $value;
    }

    /**
     * Check if 'trade_ban_expiration' has a value
     *
     * @return bool
     */
    public function hasTradeBanExpiration()
    {
        return $this->trade_ban_expiration !== null;
    }

    /**
     * Get 'trade_ban_expiration' value
     *
     * @return int
     */
    public function getTradeBanExpiration()
    {
        return $this->trade_ban_expiration;
    }

    /**
     * Set 'trade_ban_expiration' value
     *
     * @param int $value
     */
    public function setTradeBanExpiration($value = null)
    {
        $this->trade_ban_expiration = $value;
    }

    /**
     * Check if 'accountid' has a value
     *
     * @return bool
     */
    public function hasAccountid()
    {
        return $this->accountid !== null;
    }

    /**
     * Get 'accountid' value
     *
     * @return int
     */
    public function getAccountid()
    {
        return $this->accountid;
    }

    /**
     * Set 'accountid' value
     *
     * @param int $value
     */
    public function setAccountid($value = null)
    {
        $this->accountid = $value;
    }

    /**
     * Check if 'suspension_end_time' has a value
     *
     * @return bool
     */
    public function hasSuspensionEndTime()
    {
        return $this->suspension_end_time !== null;
    }

    /**
     * Get 'suspension_end_time' value
     *
     * @return int
     */
    public function getSuspensionEndTime()
    {
        return $this->suspension_end_time;
    }

    /**
     * Set 'suspension_end_time' value
     *
     * @param int $value
     */
    public function setSuspensionEndTime($value = null)
    {
        $this->suspension_end_time = $value;
    }

    /**
     * Check if 'currency' has a value
     *
     * @return bool
     */
    public function hasCurrency()
    {
        return $this->currency !== null;
    }

    /**
     * Get 'currency' value
     *
     * @return string
     */
    public function getCurrency()
    {
        return $this->currency;
    }

    /**
     * Set 'currency' value
     *
     * @param string $value
     */
    public function setCurrency($value = null)
    {
        $this->currency = $value;
    }

    /**
     * Check if 'steam_level' has a value
     *
     * @return bool
     */
    public function hasSteamLevel()
    {
        return $this->steam_level !== null;
    }

    /**
     * Get 'steam_level' value
     *
     * @return int
     */
    public function getSteamLevel()
    {
        return $this->steam_level;
    }

    /**
     * Set 'steam_level' value
     *
     * @param int $value
     */
    public function setSteamLevel($value = null)
    {
        $this->steam_level = $value;
    }

    /**
     * Check if 'friend_count' has a value
     *
     * @return bool
     */
    public function hasFriendCount()
    {
        return $this->friend_count !== null;
    }

    /**
     * Get 'friend_count' value
     *
     * @return int
     */
    public function getFriendCount()
    {
        return $this->friend_count;
    }

    /**
     * Set 'friend_count' value
     *
     * @param int $value
     */
    public function setFriendCount($value = null)
    {
        $this->friend_count = $value;
    }

    /**
     * Check if 'account_creation_time' has a value
     *
     * @return bool
     */
    public function hasAccountCreationTime()
    {
        return $this->account_creation_time !== null;
    }

    /**
     * Get 'account_creation_time' value
     *
     * @return int
     */
    public function getAccountCreationTime()
    {
        return $this->account_creation_time;
    }

    /**
     * Set 'account_creation_time' value
     *
     * @param int $value
     */
    public function setAccountCreationTime($value = null)
    {
        $this->account_creation_time = $value;
    }

    /**
     * Check if 'is_steamguard_enabled' has a value
     *
     * @return bool
     */
    public function hasIsSteamguardEnabled()
    {
        return $this->is_steamguard_enabled !== null;
    }

    /**
     * Get 'is_steamguard_enabled' value
     *
     * @return bool
     */
    public function getIsSteamguardEnabled()
    {
        return $this->is_steamguard_enabled;
    }

    /**
     * Set 'is_steamguard_enabled' value
     *
     * @param bool $value
     */
    public function setIsSteamguardEnabled($value = null)
    {
        $this->is_steamguard_enabled = $value;
    }

    /**
     * Check if 'is_phone_verified' has a value
     *
     * @return bool
     */
    public function hasIsPhoneVerified()
    {
        return $this->is_phone_verified !== null;
    }

    /**
     * Get 'is_phone_verified' value
     *
     * @return bool
     */
    public function getIsPhoneVerified()
    {
        return $this->is_phone_verified;
    }

    /**
     * Set 'is_phone_verified' value
     *
     * @param bool $value
     */
    public function setIsPhoneVerified($value = null)
    {
        $this->is_phone_verified = $value;
    }

    /**
     * Check if 'is_two_factor_auth_enabled' has a value
     *
     * @return bool
     */
    public function hasIsTwoFactorAuthEnabled()
    {
        return $this->is_two_factor_auth_enabled !== null;
    }

    /**
     * Get 'is_two_factor_auth_enabled' value
     *
     * @return bool
     */
    public function getIsTwoFactorAuthEnabled()
    {
        return $this->is_two_factor_auth_enabled;
    }

    /**
     * Set 'is_two_factor_auth_enabled' value
     *
     * @param bool $value
     */
    public function setIsTwoFactorAuthEnabled($value = null)
    {
        $this->is_two_factor_auth_enabled = $value;
    }

    /**
     * Check if 'two_factor_enabled_time' has a value
     *
     * @return bool
     */
    public function hasTwoFactorEnabledTime()
    {
        return $this->two_factor_enabled_time !== null;
    }

    /**
     * Get 'two_factor_enabled_time' value
     *
     * @return int
     */
    public function getTwoFactorEnabledTime()
    {
        return $this->two_factor_enabled_time;
    }

    /**
     * Set 'two_factor_enabled_time' value
     *
     * @param int $value
     */
    public function setTwoFactorEnabledTime($value = null)
    {
        $this->two_factor_enabled_time = $value;
    }

    /**
     * Check if 'phone_verification_time' has a value
     *
     * @return bool
     */
    public function hasPhoneVerificationTime()
    {
        return $this->phone_verification_time !== null;
    }

    /**
     * Get 'phone_verification_time' value
     *
     * @return int
     */
    public function getPhoneVerificationTime()
    {
        return $this->phone_verification_time;
    }

    /**
     * Set 'phone_verification_time' value
     *
     * @param int $value
     */
    public function setPhoneVerificationTime($value = null)
    {
        $this->phone_verification_time = $value;
    }

    /**
     * Check if 'phone_id' has a value
     *
     * @return bool
     */
    public function hasPhoneId()
    {
        return $this->phone_id !== null;
    }

    /**
     * Get 'phone_id' value
     *
     * @return int
     */
    public function getPhoneId()
    {
        return $this->phone_id;
    }

    /**
     * Set 'phone_id' value
     *
     * @param int $value
     */
    public function setPhoneId($value = null)
    {
        $this->phone_id = $value;
    }

    /**
     * Check if 'is_phone_identifying' has a value
     *
     * @return bool
     */
    public function hasIsPhoneIdentifying()
    {
        return $this->is_phone_identifying !== null;
    }

    /**
     * Get 'is_phone_identifying' value
     *
     * @return bool
     */
    public function getIsPhoneIdentifying()
    {
        return $this->is_phone_identifying;
    }

    /**
     * Set 'is_phone_identifying' value
     *
     * @param bool $value
     */
    public function setIsPhoneIdentifying($value = null)
    {
        $this->is_phone_identifying = $value;
    }

    /**
     * {@inheritdoc}
     */
    public function extensions()
    {
        if ( $this->extensions !== null) {
            return $this->extensions;
        }

        return $this->extensions = new \Protobuf\Extension\ExtensionFieldMap(__CLASS__);
    }

    /**
     * {@inheritdoc}
     */
    public function unknownFieldSet()
    {
        return $this->unknownFieldSet;
    }

    /**
     * {@inheritdoc}
     */
    public static function fromStream($stream, \Protobuf\Configuration $configuration = null)
    {
        return new self($stream, $configuration);
    }

    /**
     * {@inheritdoc}
     */
    public static function fromArray(array $values)
    {
        $message = new self();
        $values  = array_merge([
            'eresult_deprecated' => '2',
            'account_name' => null,
            'persona_name' => null,
            'is_profile_public' => null,
            'is_inventory_public' => null,
            'is_vac_banned' => null,
            'is_cyber_cafe' => null,
            'is_school_account' => null,
            'is_limited' => null,
            'is_subscribed' => null,
            'package' => null,
            'is_free_trial_account' => null,
            'free_trial_expiration' => null,
            'is_low_violence' => null,
            'is_account_locked_down' => null,
            'is_community_banned' => null,
            'is_trade_banned' => null,
            'trade_ban_expiration' => null,
            'accountid' => null,
            'suspension_end_time' => null,
            'currency' => null,
            'steam_level' => null,
            'friend_count' => null,
            'account_creation_time' => null,
            'is_steamguard_enabled' => null,
            'is_phone_verified' => null,
            'is_two_factor_auth_enabled' => null,
            'two_factor_enabled_time' => null,
            'phone_verification_time' => null,
            'phone_id' => null,
            'is_phone_identifying' => null
        ], $values);

        $message->setEresultDeprecated($values['eresult_deprecated']);
        $message->setAccountName($values['account_name']);
        $message->setPersonaName($values['persona_name']);
        $message->setIsProfilePublic($values['is_profile_public']);
        $message->setIsInventoryPublic($values['is_inventory_public']);
        $message->setIsVacBanned($values['is_vac_banned']);
        $message->setIsCyberCafe($values['is_cyber_cafe']);
        $message->setIsSchoolAccount($values['is_school_account']);
        $message->setIsLimited($values['is_limited']);
        $message->setIsSubscribed($values['is_subscribed']);
        $message->setPackage($values['package']);
        $message->setIsFreeTrialAccount($values['is_free_trial_account']);
        $message->setFreeTrialExpiration($values['free_trial_expiration']);
        $message->setIsLowViolence($values['is_low_violence']);
        $message->setIsAccountLockedDown($values['is_account_locked_down']);
        $message->setIsCommunityBanned($values['is_community_banned']);
        $message->setIsTradeBanned($values['is_trade_banned']);
        $message->setTradeBanExpiration($values['trade_ban_expiration']);
        $message->setAccountid($values['accountid']);
        $message->setSuspensionEndTime($values['suspension_end_time']);
        $message->setCurrency($values['currency']);
        $message->setSteamLevel($values['steam_level']);
        $message->setFriendCount($values['friend_count']);
        $message->setAccountCreationTime($values['account_creation_time']);
        $message->setIsSteamguardEnabled($values['is_steamguard_enabled']);
        $message->setIsPhoneVerified($values['is_phone_verified']);
        $message->setIsTwoFactorAuthEnabled($values['is_two_factor_auth_enabled']);
        $message->setTwoFactorEnabledTime($values['two_factor_enabled_time']);
        $message->setPhoneVerificationTime($values['phone_verification_time']);
        $message->setPhoneId($values['phone_id']);
        $message->setIsPhoneIdentifying($values['is_phone_identifying']);

        return $message;
    }

    /**
     * {@inheritdoc}
     */
    public static function descriptor()
    {
        $options = \google\protobuf\MessageOptions::fromArray([
        ]);

        $options->extensions()->add(\SteamKit\Base\GC\TF2\SteamMsgBase\Extension::msgpoolSoftLimit(), 128);
        $options->extensions()->add(\SteamKit\Base\GC\TF2\SteamMsgBase\Extension::msgpoolHardLimit(), 512);

        return \google\protobuf\DescriptorProto::fromArray([
            'name'      => 'CGCSystemMsg_GetAccountDetails_Response',
            'field'     => [
                \google\protobuf\FieldDescriptorProto::fromArray([
                    'number' => 1,
                    'name' => 'eresult_deprecated',
                    'type' => \google\protobuf\FieldDescriptorProto\Type::TYPE_UINT32(),
                    'label' => \google\protobuf\FieldDescriptorProto\Label::LABEL_OPTIONAL(),
                    'default_value' => '2'
                ]),
                \google\protobuf\FieldDescriptorProto::fromArray([
                    'number' => 2,
                    'name' => 'account_name',
                    'type' => \google\protobuf\FieldDescriptorProto\Type::TYPE_STRING(),
                    'label' => \google\protobuf\FieldDescriptorProto\Label::LABEL_OPTIONAL()
                ]),
                \google\protobuf\FieldDescriptorProto::fromArray([
                    'number' => 3,
                    'name' => 'persona_name',
                    'type' => \google\protobuf\FieldDescriptorProto\Type::TYPE_STRING(),
                    'label' => \google\protobuf\FieldDescriptorProto\Label::LABEL_OPTIONAL()
                ]),
                \google\protobuf\FieldDescriptorProto::fromArray([
                    'number' => 4,
                    'name' => 'is_profile_public',
                    'type' => \google\protobuf\FieldDescriptorProto\Type::TYPE_BOOL(),
                    'label' => \google\protobuf\FieldDescriptorProto\Label::LABEL_OPTIONAL()
                ]),
                \google\protobuf\FieldDescriptorProto::fromArray([
                    'number' => 5,
                    'name' => 'is_inventory_public',
                    'type' => \google\protobuf\FieldDescriptorProto\Type::TYPE_BOOL(),
                    'label' => \google\protobuf\FieldDescriptorProto\Label::LABEL_OPTIONAL()
                ]),
                \google\protobuf\FieldDescriptorProto::fromArray([
                    'number' => 7,
                    'name' => 'is_vac_banned',
                    'type' => \google\protobuf\FieldDescriptorProto\Type::TYPE_BOOL(),
                    'label' => \google\protobuf\FieldDescriptorProto\Label::LABEL_OPTIONAL()
                ]),
                \google\protobuf\FieldDescriptorProto::fromArray([
                    'number' => 8,
                    'name' => 'is_cyber_cafe',
                    'type' => \google\protobuf\FieldDescriptorProto\Type::TYPE_BOOL(),
                    'label' => \google\protobuf\FieldDescriptorProto\Label::LABEL_OPTIONAL()
                ]),
                \google\protobuf\FieldDescriptorProto::fromArray([
                    'number' => 9,
                    'name' => 'is_school_account',
                    'type' => \google\protobuf\FieldDescriptorProto\Type::TYPE_BOOL(),
                    'label' => \google\protobuf\FieldDescriptorProto\Label::LABEL_OPTIONAL()
                ]),
                \google\protobuf\FieldDescriptorProto::fromArray([
                    'number' => 10,
                    'name' => 'is_limited',
                    'type' => \google\protobuf\FieldDescriptorProto\Type::TYPE_BOOL(),
                    'label' => \google\protobuf\FieldDescriptorProto\Label::LABEL_OPTIONAL()
                ]),
                \google\protobuf\FieldDescriptorProto::fromArray([
                    'number' => 11,
                    'name' => 'is_subscribed',
                    'type' => \google\protobuf\FieldDescriptorProto\Type::TYPE_BOOL(),
                    'label' => \google\protobuf\FieldDescriptorProto\Label::LABEL_OPTIONAL()
                ]),
                \google\protobuf\FieldDescriptorProto::fromArray([
                    'number' => 12,
                    'name' => 'package',
                    'type' => \google\protobuf\FieldDescriptorProto\Type::TYPE_UINT32(),
                    'label' => \google\protobuf\FieldDescriptorProto\Label::LABEL_OPTIONAL()
                ]),
                \google\protobuf\FieldDescriptorProto::fromArray([
                    'number' => 13,
                    'name' => 'is_free_trial_account',
                    'type' => \google\protobuf\FieldDescriptorProto\Type::TYPE_BOOL(),
                    'label' => \google\protobuf\FieldDescriptorProto\Label::LABEL_OPTIONAL()
                ]),
                \google\protobuf\FieldDescriptorProto::fromArray([
                    'number' => 14,
                    'name' => 'free_trial_expiration',
                    'type' => \google\protobuf\FieldDescriptorProto\Type::TYPE_UINT32(),
                    'label' => \google\protobuf\FieldDescriptorProto\Label::LABEL_OPTIONAL()
                ]),
                \google\protobuf\FieldDescriptorProto::fromArray([
                    'number' => 15,
                    'name' => 'is_low_violence',
                    'type' => \google\protobuf\FieldDescriptorProto\Type::TYPE_BOOL(),
                    'label' => \google\protobuf\FieldDescriptorProto\Label::LABEL_OPTIONAL()
                ]),
                \google\protobuf\FieldDescriptorProto::fromArray([
                    'number' => 16,
                    'name' => 'is_account_locked_down',
                    'type' => \google\protobuf\FieldDescriptorProto\Type::TYPE_BOOL(),
                    'label' => \google\protobuf\FieldDescriptorProto\Label::LABEL_OPTIONAL()
                ]),
                \google\protobuf\FieldDescriptorProto::fromArray([
                    'number' => 17,
                    'name' => 'is_community_banned',
                    'type' => \google\protobuf\FieldDescriptorProto\Type::TYPE_BOOL(),
                    'label' => \google\protobuf\FieldDescriptorProto\Label::LABEL_OPTIONAL()
                ]),
                \google\protobuf\FieldDescriptorProto::fromArray([
                    'number' => 18,
                    'name' => 'is_trade_banned',
                    'type' => \google\protobuf\FieldDescriptorProto\Type::TYPE_BOOL(),
                    'label' => \google\protobuf\FieldDescriptorProto\Label::LABEL_OPTIONAL()
                ]),
                \google\protobuf\FieldDescriptorProto::fromArray([
                    'number' => 19,
                    'name' => 'trade_ban_expiration',
                    'type' => \google\protobuf\FieldDescriptorProto\Type::TYPE_UINT32(),
                    'label' => \google\protobuf\FieldDescriptorProto\Label::LABEL_OPTIONAL()
                ]),
                \google\protobuf\FieldDescriptorProto::fromArray([
                    'number' => 20,
                    'name' => 'accountid',
                    'type' => \google\protobuf\FieldDescriptorProto\Type::TYPE_UINT32(),
                    'label' => \google\protobuf\FieldDescriptorProto\Label::LABEL_OPTIONAL()
                ]),
                \google\protobuf\FieldDescriptorProto::fromArray([
                    'number' => 21,
                    'name' => 'suspension_end_time',
                    'type' => \google\protobuf\FieldDescriptorProto\Type::TYPE_UINT32(),
                    'label' => \google\protobuf\FieldDescriptorProto\Label::LABEL_OPTIONAL()
                ]),
                \google\protobuf\FieldDescriptorProto::fromArray([
                    'number' => 22,
                    'name' => 'currency',
                    'type' => \google\protobuf\FieldDescriptorProto\Type::TYPE_STRING(),
                    'label' => \google\protobuf\FieldDescriptorProto\Label::LABEL_OPTIONAL()
                ]),
                \google\protobuf\FieldDescriptorProto::fromArray([
                    'number' => 23,
                    'name' => 'steam_level',
                    'type' => \google\protobuf\FieldDescriptorProto\Type::TYPE_UINT32(),
                    'label' => \google\protobuf\FieldDescriptorProto\Label::LABEL_OPTIONAL()
                ]),
                \google\protobuf\FieldDescriptorProto::fromArray([
                    'number' => 24,
                    'name' => 'friend_count',
                    'type' => \google\protobuf\FieldDescriptorProto\Type::TYPE_UINT32(),
                    'label' => \google\protobuf\FieldDescriptorProto\Label::LABEL_OPTIONAL()
                ]),
                \google\protobuf\FieldDescriptorProto::fromArray([
                    'number' => 25,
                    'name' => 'account_creation_time',
                    'type' => \google\protobuf\FieldDescriptorProto\Type::TYPE_UINT32(),
                    'label' => \google\protobuf\FieldDescriptorProto\Label::LABEL_OPTIONAL()
                ]),
                \google\protobuf\FieldDescriptorProto::fromArray([
                    'number' => 27,
                    'name' => 'is_steamguard_enabled',
                    'type' => \google\protobuf\FieldDescriptorProto\Type::TYPE_BOOL(),
                    'label' => \google\protobuf\FieldDescriptorProto\Label::LABEL_OPTIONAL()
                ]),
                \google\protobuf\FieldDescriptorProto::fromArray([
                    'number' => 28,
                    'name' => 'is_phone_verified',
                    'type' => \google\protobuf\FieldDescriptorProto\Type::TYPE_BOOL(),
                    'label' => \google\protobuf\FieldDescriptorProto\Label::LABEL_OPTIONAL()
                ]),
                \google\protobuf\FieldDescriptorProto::fromArray([
                    'number' => 29,
                    'name' => 'is_two_factor_auth_enabled',
                    'type' => \google\protobuf\FieldDescriptorProto\Type::TYPE_BOOL(),
                    'label' => \google\protobuf\FieldDescriptorProto\Label::LABEL_OPTIONAL()
                ]),
                \google\protobuf\FieldDescriptorProto::fromArray([
                    'number' => 30,
                    'name' => 'two_factor_enabled_time',
                    'type' => \google\protobuf\FieldDescriptorProto\Type::TYPE_UINT32(),
                    'label' => \google\protobuf\FieldDescriptorProto\Label::LABEL_OPTIONAL()
                ]),
                \google\protobuf\FieldDescriptorProto::fromArray([
                    'number' => 31,
                    'name' => 'phone_verification_time',
                    'type' => \google\protobuf\FieldDescriptorProto\Type::TYPE_UINT32(),
                    'label' => \google\protobuf\FieldDescriptorProto\Label::LABEL_OPTIONAL()
                ]),
                \google\protobuf\FieldDescriptorProto::fromArray([
                    'number' => 33,
                    'name' => 'phone_id',
                    'type' => \google\protobuf\FieldDescriptorProto\Type::TYPE_UINT64(),
                    'label' => \google\protobuf\FieldDescriptorProto\Label::LABEL_OPTIONAL()
                ]),
                \google\protobuf\FieldDescriptorProto::fromArray([
                    'number' => 34,
                    'name' => 'is_phone_identifying',
                    'type' => \google\protobuf\FieldDescriptorProto\Type::TYPE_BOOL(),
                    'label' => \google\protobuf\FieldDescriptorProto\Label::LABEL_OPTIONAL()
                ]),
            ],
            'options' => $options
        ]);
    }

    /**
     * {@inheritdoc}
     */
    public function toStream(\Protobuf\Configuration $configuration = null)
    {
        $config  = $configuration ?: \Protobuf\Configuration::getInstance();
        $context = $config->createWriteContext();
        $stream  = $context->getStream();

        $this->writeTo($context);
        $stream->seek(0);

        return $stream;
    }

    /**
     * {@inheritdoc}
     */
    public function writeTo(\Protobuf\WriteContext $context)
    {
        $stream      = $context->getStream();
        $writer      = $context->getWriter();
        $sizeContext = $context->getComputeSizeContext();

        if ($this->eresult_deprecated !== null) {
            $writer->writeVarint($stream, 8);
            $writer->writeVarint($stream, $this->eresult_deprecated);
        }

        if ($this->account_name !== null) {
            $writer->writeVarint($stream, 18);
            $writer->writeString($stream, $this->account_name);
        }

        if ($this->persona_name !== null) {
            $writer->writeVarint($stream, 26);
            $writer->writeString($stream, $this->persona_name);
        }

        if ($this->is_profile_public !== null) {
            $writer->writeVarint($stream, 32);
            $writer->writeBool($stream, $this->is_profile_public);
        }

        if ($this->is_inventory_public !== null) {
            $writer->writeVarint($stream, 40);
            $writer->writeBool($stream, $this->is_inventory_public);
        }

        if ($this->is_vac_banned !== null) {
            $writer->writeVarint($stream, 56);
            $writer->writeBool($stream, $this->is_vac_banned);
        }

        if ($this->is_cyber_cafe !== null) {
            $writer->writeVarint($stream, 64);
            $writer->writeBool($stream, $this->is_cyber_cafe);
        }

        if ($this->is_school_account !== null) {
            $writer->writeVarint($stream, 72);
            $writer->writeBool($stream, $this->is_school_account);
        }

        if ($this->is_limited !== null) {
            $writer->writeVarint($stream, 80);
            $writer->writeBool($stream, $this->is_limited);
        }

        if ($this->is_subscribed !== null) {
            $writer->writeVarint($stream, 88);
            $writer->writeBool($stream, $this->is_subscribed);
        }

        if ($this->package !== null) {
            $writer->writeVarint($stream, 96);
            $writer->writeVarint($stream, $this->package);
        }

        if ($this->is_free_trial_account !== null) {
            $writer->writeVarint($stream, 104);
            $writer->writeBool($stream, $this->is_free_trial_account);
        }

        if ($this->free_trial_expiration !== null) {
            $writer->writeVarint($stream, 112);
            $writer->writeVarint($stream, $this->free_trial_expiration);
        }

        if ($this->is_low_violence !== null) {
            $writer->writeVarint($stream, 120);
            $writer->writeBool($stream, $this->is_low_violence);
        }

        if ($this->is_account_locked_down !== null) {
            $writer->writeVarint($stream, 128);
            $writer->writeBool($stream, $this->is_account_locked_down);
        }

        if ($this->is_community_banned !== null) {
            $writer->writeVarint($stream, 136);
            $writer->writeBool($stream, $this->is_community_banned);
        }

        if ($this->is_trade_banned !== null) {
            $writer->writeVarint($stream, 144);
            $writer->writeBool($stream, $this->is_trade_banned);
        }

        if ($this->trade_ban_expiration !== null) {
            $writer->writeVarint($stream, 152);
            $writer->writeVarint($stream, $this->trade_ban_expiration);
        }

        if ($this->accountid !== null) {
            $writer->writeVarint($stream, 160);
            $writer->writeVarint($stream, $this->accountid);
        }

        if ($this->suspension_end_time !== null) {
            $writer->writeVarint($stream, 168);
            $writer->writeVarint($stream, $this->suspension_end_time);
        }

        if ($this->currency !== null) {
            $writer->writeVarint($stream, 178);
            $writer->writeString($stream, $this->currency);
        }

        if ($this->steam_level !== null) {
            $writer->writeVarint($stream, 184);
            $writer->writeVarint($stream, $this->steam_level);
        }

        if ($this->friend_count !== null) {
            $writer->writeVarint($stream, 192);
            $writer->writeVarint($stream, $this->friend_count);
        }

        if ($this->account_creation_time !== null) {
            $writer->writeVarint($stream, 200);
            $writer->writeVarint($stream, $this->account_creation_time);
        }

        if ($this->is_steamguard_enabled !== null) {
            $writer->writeVarint($stream, 216);
            $writer->writeBool($stream, $this->is_steamguard_enabled);
        }

        if ($this->is_phone_verified !== null) {
            $writer->writeVarint($stream, 224);
            $writer->writeBool($stream, $this->is_phone_verified);
        }

        if ($this->is_two_factor_auth_enabled !== null) {
            $writer->writeVarint($stream, 232);
            $writer->writeBool($stream, $this->is_two_factor_auth_enabled);
        }

        if ($this->two_factor_enabled_time !== null) {
            $writer->writeVarint($stream, 240);
            $writer->writeVarint($stream, $this->two_factor_enabled_time);
        }

        if ($this->phone_verification_time !== null) {
            $writer->writeVarint($stream, 248);
            $writer->writeVarint($stream, $this->phone_verification_time);
        }

        if ($this->phone_id !== null) {
            $writer->writeVarint($stream, 264);
            $writer->writeVarint($stream, $this->phone_id);
        }

        if ($this->is_phone_identifying !== null) {
            $writer->writeVarint($stream, 272);
            $writer->writeBool($stream, $this->is_phone_identifying);
        }

        if ($this->extensions !== null) {
            $this->extensions->writeTo($context);
        }

        return $stream;
    }

    /**
     * {@inheritdoc}
     */
    public function readFrom(\Protobuf\ReadContext $context)
    {
        $reader = $context->getReader();
        $length = $context->getLength();
        $stream = $context->getStream();

        $limit = ($length !== null)
            ? ($stream->tell() + $length)
            : null;

        while ($limit === null || $stream->tell() < $limit) {

            if ($stream->eof()) {
                break;
            }

            $key  = $reader->readVarint($stream);
            $wire = \Protobuf\WireFormat::getTagWireType($key);
            $tag  = \Protobuf\WireFormat::getTagFieldNumber($key);

            if ($stream->eof()) {
                break;
            }

            if ($tag === 1) {
                \Protobuf\WireFormat::assertWireType($wire, 13);

                $this->eresult_deprecated = $reader->readVarint($stream);

                continue;
            }

            if ($tag === 2) {
                \Protobuf\WireFormat::assertWireType($wire, 9);

                $this->account_name = $reader->readString($stream);

                continue;
            }

            if ($tag === 3) {
                \Protobuf\WireFormat::assertWireType($wire, 9);

                $this->persona_name = $reader->readString($stream);

                continue;
            }

            if ($tag === 4) {
                \Protobuf\WireFormat::assertWireType($wire, 8);

                $this->is_profile_public = $reader->readBool($stream);

                continue;
            }

            if ($tag === 5) {
                \Protobuf\WireFormat::assertWireType($wire, 8);

                $this->is_inventory_public = $reader->readBool($stream);

                continue;
            }

            if ($tag === 7) {
                \Protobuf\WireFormat::assertWireType($wire, 8);

                $this->is_vac_banned = $reader->readBool($stream);

                continue;
            }

            if ($tag === 8) {
                \Protobuf\WireFormat::assertWireType($wire, 8);

                $this->is_cyber_cafe = $reader->readBool($stream);

                continue;
            }

            if ($tag === 9) {
                \Protobuf\WireFormat::assertWireType($wire, 8);

                $this->is_school_account = $reader->readBool($stream);

                continue;
            }

            if ($tag === 10) {
                \Protobuf\WireFormat::assertWireType($wire, 8);

                $this->is_limited = $reader->readBool($stream);

                continue;
            }

            if ($tag === 11) {
                \Protobuf\WireFormat::assertWireType($wire, 8);

                $this->is_subscribed = $reader->readBool($stream);

                continue;
            }

            if ($tag === 12) {
                \Protobuf\WireFormat::assertWireType($wire, 13);

                $this->package = $reader->readVarint($stream);

                continue;
            }

            if ($tag === 13) {
                \Protobuf\WireFormat::assertWireType($wire, 8);

                $this->is_free_trial_account = $reader->readBool($stream);

                continue;
            }

            if ($tag === 14) {
                \Protobuf\WireFormat::assertWireType($wire, 13);

                $this->free_trial_expiration = $reader->readVarint($stream);

                continue;
            }

            if ($tag === 15) {
                \Protobuf\WireFormat::assertWireType($wire, 8);

                $this->is_low_violence = $reader->readBool($stream);

                continue;
            }

            if ($tag === 16) {
                \Protobuf\WireFormat::assertWireType($wire, 8);

                $this->is_account_locked_down = $reader->readBool($stream);

                continue;
            }

            if ($tag === 17) {
                \Protobuf\WireFormat::assertWireType($wire, 8);

                $this->is_community_banned = $reader->readBool($stream);

                continue;
            }

            if ($tag === 18) {
                \Protobuf\WireFormat::assertWireType($wire, 8);

                $this->is_trade_banned = $reader->readBool($stream);

                continue;
            }

            if ($tag === 19) {
                \Protobuf\WireFormat::assertWireType($wire, 13);

                $this->trade_ban_expiration = $reader->readVarint($stream);

                continue;
            }

            if ($tag === 20) {
                \Protobuf\WireFormat::assertWireType($wire, 13);

                $this->accountid = $reader->readVarint($stream);

                continue;
            }

            if ($tag === 21) {
                \Protobuf\WireFormat::assertWireType($wire, 13);

                $this->suspension_end_time = $reader->readVarint($stream);

                continue;
            }

            if ($tag === 22) {
                \Protobuf\WireFormat::assertWireType($wire, 9);

                $this->currency = $reader->readString($stream);

                continue;
            }

            if ($tag === 23) {
                \Protobuf\WireFormat::assertWireType($wire, 13);

                $this->steam_level = $reader->readVarint($stream);

                continue;
            }

            if ($tag === 24) {
                \Protobuf\WireFormat::assertWireType($wire, 13);

                $this->friend_count = $reader->readVarint($stream);

                continue;
            }

            if ($tag === 25) {
                \Protobuf\WireFormat::assertWireType($wire, 13);

                $this->account_creation_time = $reader->readVarint($stream);

                continue;
            }

            if ($tag === 27) {
                \Protobuf\WireFormat::assertWireType($wire, 8);

                $this->is_steamguard_enabled = $reader->readBool($stream);

                continue;
            }

            if ($tag === 28) {
                \Protobuf\WireFormat::assertWireType($wire, 8);

                $this->is_phone_verified = $reader->readBool($stream);

                continue;
            }

            if ($tag === 29) {
                \Protobuf\WireFormat::assertWireType($wire, 8);

                $this->is_two_factor_auth_enabled = $reader->readBool($stream);

                continue;
            }

            if ($tag === 30) {
                \Protobuf\WireFormat::assertWireType($wire, 13);

                $this->two_factor_enabled_time = $reader->readVarint($stream);

                continue;
            }

            if ($tag === 31) {
                \Protobuf\WireFormat::assertWireType($wire, 13);

                $this->phone_verification_time = $reader->readVarint($stream);

                continue;
            }

            if ($tag === 33) {
                \Protobuf\WireFormat::assertWireType($wire, 4);

                $this->phone_id = $reader->readVarint($stream);

                continue;
            }

            if ($tag === 34) {
                \Protobuf\WireFormat::assertWireType($wire, 8);

                $this->is_phone_identifying = $reader->readBool($stream);

                continue;
            }

            $extensions = $context->getExtensionRegistry();
            $extension  = $extensions ? $extensions->findByNumber(__CLASS__, $tag) : null;

            if ($extension !== null) {
                $this->extensions()->add($extension, $extension->readFrom($context, $wire));

                continue;
            }

            if ($this->unknownFieldSet === null) {
                $this->unknownFieldSet = new \Protobuf\UnknownFieldSet();
            }

            $data    = $reader->readUnknown($stream, $wire);
            $unknown = new \Protobuf\Unknown($tag, $wire, $data);

            $this->unknownFieldSet->add($unknown);

        }
    }

    /**
     * {@inheritdoc}
     */
    public function serializedSize(\Protobuf\ComputeSizeContext $context)
    {
        $calculator = $context->getSizeCalculator();
        $size       = 0;

        if ($this->eresult_deprecated !== null) {
            $size += 1;
            $size += $calculator->computeVarintSize($this->eresult_deprecated);
        }

        if ($this->account_name !== null) {
            $size += 1;
            $size += $calculator->computeStringSize($this->account_name);
        }

        if ($this->persona_name !== null) {
            $size += 1;
            $size += $calculator->computeStringSize($this->persona_name);
        }

        if ($this->is_profile_public !== null) {
            $size += 1;
            $size += 1;
        }

        if ($this->is_inventory_public !== null) {
            $size += 1;
            $size += 1;
        }

        if ($this->is_vac_banned !== null) {
            $size += 1;
            $size += 1;
        }

        if ($this->is_cyber_cafe !== null) {
            $size += 1;
            $size += 1;
        }

        if ($this->is_school_account !== null) {
            $size += 1;
            $size += 1;
        }

        if ($this->is_limited !== null) {
            $size += 1;
            $size += 1;
        }

        if ($this->is_subscribed !== null) {
            $size += 1;
            $size += 1;
        }

        if ($this->package !== null) {
            $size += 1;
            $size += $calculator->computeVarintSize($this->package);
        }

        if ($this->is_free_trial_account !== null) {
            $size += 1;
            $size += 1;
        }

        if ($this->free_trial_expiration !== null) {
            $size += 1;
            $size += $calculator->computeVarintSize($this->free_trial_expiration);
        }

        if ($this->is_low_violence !== null) {
            $size += 1;
            $size += 1;
        }

        if ($this->is_account_locked_down !== null) {
            $size += 2;
            $size += 1;
        }

        if ($this->is_community_banned !== null) {
            $size += 2;
            $size += 1;
        }

        if ($this->is_trade_banned !== null) {
            $size += 2;
            $size += 1;
        }

        if ($this->trade_ban_expiration !== null) {
            $size += 2;
            $size += $calculator->computeVarintSize($this->trade_ban_expiration);
        }

        if ($this->accountid !== null) {
            $size += 2;
            $size += $calculator->computeVarintSize($this->accountid);
        }

        if ($this->suspension_end_time !== null) {
            $size += 2;
            $size += $calculator->computeVarintSize($this->suspension_end_time);
        }

        if ($this->currency !== null) {
            $size += 2;
            $size += $calculator->computeStringSize($this->currency);
        }

        if ($this->steam_level !== null) {
            $size += 2;
            $size += $calculator->computeVarintSize($this->steam_level);
        }

        if ($this->friend_count !== null) {
            $size += 2;
            $size += $calculator->computeVarintSize($this->friend_count);
        }

        if ($this->account_creation_time !== null) {
            $size += 2;
            $size += $calculator->computeVarintSize($this->account_creation_time);
        }

        if ($this->is_steamguard_enabled !== null) {
            $size += 2;
            $size += 1;
        }

        if ($this->is_phone_verified !== null) {
            $size += 2;
            $size += 1;
        }

        if ($this->is_two_factor_auth_enabled !== null) {
            $size += 2;
            $size += 1;
        }

        if ($this->two_factor_enabled_time !== null) {
            $size += 2;
            $size += $calculator->computeVarintSize($this->two_factor_enabled_time);
        }

        if ($this->phone_verification_time !== null) {
            $size += 2;
            $size += $calculator->computeVarintSize($this->phone_verification_time);
        }

        if ($this->phone_id !== null) {
            $size += 2;
            $size += $calculator->computeVarintSize($this->phone_id);
        }

        if ($this->is_phone_identifying !== null) {
            $size += 2;
            $size += 1;
        }

        if ($this->extensions !== null) {
            $size += $this->extensions->serializedSize($context);
        }

        return $size;
    }

    /**
     * {@inheritdoc}
     */
    public function clear()
    {
        $this->eresult_deprecated = '2';
        $this->account_name = null;
        $this->persona_name = null;
        $this->is_profile_public = null;
        $this->is_inventory_public = null;
        $this->is_vac_banned = null;
        $this->is_cyber_cafe = null;
        $this->is_school_account = null;
        $this->is_limited = null;
        $this->is_subscribed = null;
        $this->package = null;
        $this->is_free_trial_account = null;
        $this->free_trial_expiration = null;
        $this->is_low_violence = null;
        $this->is_account_locked_down = null;
        $this->is_community_banned = null;
        $this->is_trade_banned = null;
        $this->trade_ban_expiration = null;
        $this->accountid = null;
        $this->suspension_end_time = null;
        $this->currency = null;
        $this->steam_level = null;
        $this->friend_count = null;
        $this->account_creation_time = null;
        $this->is_steamguard_enabled = null;
        $this->is_phone_verified = null;
        $this->is_two_factor_auth_enabled = null;
        $this->two_factor_enabled_time = null;
        $this->phone_verification_time = null;
        $this->phone_id = null;
        $this->is_phone_identifying = null;
    }

    /**
     * {@inheritdoc}
     */
    public function merge(\Protobuf\Message $message)
    {
        if ( ! $message instanceof \SteamKit\Base\GC\TF2\SteamMsgBase\CGCSystemMsg_GetAccountDetails_Response) {
            throw new \InvalidArgumentException(sprintf('Argument 1 passed to %s must be a %s, %s given', __METHOD__, __CLASS__, get_class($message)));
        }

        $this->eresult_deprecated = ($message->eresult_deprecated !== null) ? $message->eresult_deprecated : $this->eresult_deprecated;
        $this->account_name = ($message->account_name !== null) ? $message->account_name : $this->account_name;
        $this->persona_name = ($message->persona_name !== null) ? $message->persona_name : $this->persona_name;
        $this->is_profile_public = ($message->is_profile_public !== null) ? $message->is_profile_public : $this->is_profile_public;
        $this->is_inventory_public = ($message->is_inventory_public !== null) ? $message->is_inventory_public : $this->is_inventory_public;
        $this->is_vac_banned = ($message->is_vac_banned !== null) ? $message->is_vac_banned : $this->is_vac_banned;
        $this->is_cyber_cafe = ($message->is_cyber_cafe !== null) ? $message->is_cyber_cafe : $this->is_cyber_cafe;
        $this->is_school_account = ($message->is_school_account !== null) ? $message->is_school_account : $this->is_school_account;
        $this->is_limited = ($message->is_limited !== null) ? $message->is_limited : $this->is_limited;
        $this->is_subscribed = ($message->is_subscribed !== null) ? $message->is_subscribed : $this->is_subscribed;
        $this->package = ($message->package !== null) ? $message->package : $this->package;
        $this->is_free_trial_account = ($message->is_free_trial_account !== null) ? $message->is_free_trial_account : $this->is_free_trial_account;
        $this->free_trial_expiration = ($message->free_trial_expiration !== null) ? $message->free_trial_expiration : $this->free_trial_expiration;
        $this->is_low_violence = ($message->is_low_violence !== null) ? $message->is_low_violence : $this->is_low_violence;
        $this->is_account_locked_down = ($message->is_account_locked_down !== null) ? $message->is_account_locked_down : $this->is_account_locked_down;
        $this->is_community_banned = ($message->is_community_banned !== null) ? $message->is_community_banned : $this->is_community_banned;
        $this->is_trade_banned = ($message->is_trade_banned !== null) ? $message->is_trade_banned : $this->is_trade_banned;
        $this->trade_ban_expiration = ($message->trade_ban_expiration !== null) ? $message->trade_ban_expiration : $this->trade_ban_expiration;
        $this->accountid = ($message->accountid !== null) ? $message->accountid : $this->accountid;
        $this->suspension_end_time = ($message->suspension_end_time !== null) ? $message->suspension_end_time : $this->suspension_end_time;
        $this->currency = ($message->currency !== null) ? $message->currency : $this->currency;
        $this->steam_level = ($message->steam_level !== null) ? $message->steam_level : $this->steam_level;
        $this->friend_count = ($message->friend_count !== null) ? $message->friend_count : $this->friend_count;
        $this->account_creation_time = ($message->account_creation_time !== null) ? $message->account_creation_time : $this->account_creation_time;
        $this->is_steamguard_enabled = ($message->is_steamguard_enabled !== null) ? $message->is_steamguard_enabled : $this->is_steamguard_enabled;
        $this->is_phone_verified = ($message->is_phone_verified !== null) ? $message->is_phone_verified : $this->is_phone_verified;
        $this->is_two_factor_auth_enabled = ($message->is_two_factor_auth_enabled !== null) ? $message->is_two_factor_auth_enabled : $this->is_two_factor_auth_enabled;
        $this->two_factor_enabled_time = ($message->two_factor_enabled_time !== null) ? $message->two_factor_enabled_time : $this->two_factor_enabled_time;
        $this->phone_verification_time = ($message->phone_verification_time !== null) ? $message->phone_verification_time : $this->phone_verification_time;
        $this->phone_id = ($message->phone_id !== null) ? $message->phone_id : $this->phone_id;
        $this->is_phone_identifying = ($message->is_phone_identifying !== null) ? $message->is_phone_identifying : $this->is_phone_identifying;
    }


}

