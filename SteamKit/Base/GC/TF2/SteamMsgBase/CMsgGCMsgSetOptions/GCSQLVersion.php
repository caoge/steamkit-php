<?php
/**
 * Generated by Protobuf protoc plugin.
 *
 * File descriptor : tf/steammessages.proto
 */


namespace SteamKit\Base\GC\TF2\SteamMsgBase\CMsgGCMsgSetOptions;

/**
 * Protobuf enum :
 * SteamKit.Base.GC.TF2.SteamMsgBase.CMsgGCMsgSetOptions.GCSQLVersion
 */
class GCSQLVersion extends \Protobuf\Enum
{

    /**
     * GCSQL_VERSION_BASELINE = 1
     */
    const GCSQL_VERSION_BASELINE_VALUE = 1;

    /**
     * GCSQL_VERSION_BOOLTYPE = 2
     */
    const GCSQL_VERSION_BOOLTYPE_VALUE = 2;

    /**
     * @var \SteamKit\Base\GC\TF2\SteamMsgBase\CMsgGCMsgSetOptions\GCSQLVersion
     */
    protected static $GCSQL_VERSION_BASELINE = null;

    /**
     * @var \SteamKit\Base\GC\TF2\SteamMsgBase\CMsgGCMsgSetOptions\GCSQLVersion
     */
    protected static $GCSQL_VERSION_BOOLTYPE = null;

    /**
     * @return \SteamKit\Base\GC\TF2\SteamMsgBase\CMsgGCMsgSetOptions\GCSQLVersion
     */
    public static function GCSQL_VERSION_BASELINE()
    {
        if (self::$GCSQL_VERSION_BASELINE !== null) {
            return self::$GCSQL_VERSION_BASELINE;
        }

        return self::$GCSQL_VERSION_BASELINE = new self('GCSQL_VERSION_BASELINE', self::GCSQL_VERSION_BASELINE_VALUE);
    }

    /**
     * @return \SteamKit\Base\GC\TF2\SteamMsgBase\CMsgGCMsgSetOptions\GCSQLVersion
     */
    public static function GCSQL_VERSION_BOOLTYPE()
    {
        if (self::$GCSQL_VERSION_BOOLTYPE !== null) {
            return self::$GCSQL_VERSION_BOOLTYPE;
        }

        return self::$GCSQL_VERSION_BOOLTYPE = new self('GCSQL_VERSION_BOOLTYPE', self::GCSQL_VERSION_BOOLTYPE_VALUE);
    }

    /**
     * @param int $value
     * @return \SteamKit\Base\GC\TF2\SteamMsgBase\CMsgGCMsgSetOptions\GCSQLVersion
     */
    public static function valueOf($value)
    {
        switch ($value) {
            case 1: return self::GCSQL_VERSION_BASELINE();
            case 2: return self::GCSQL_VERSION_BOOLTYPE();
            default: return null;
        }
    }


}

