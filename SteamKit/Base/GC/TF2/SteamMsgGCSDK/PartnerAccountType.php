<?php
/**
 * Generated by Protobuf protoc plugin.
 *
 * File descriptor : tf/gcsdk_gcmessages.proto
 */


namespace SteamKit\Base\GC\TF2\SteamMsgGCSDK;

/**
 * Protobuf enum : SteamKit.Base.GC.TF2.SteamMsgGCSDK.PartnerAccountType
 */
class PartnerAccountType extends \Protobuf\Enum
{

    /**
     * PARTNER_NONE = 0
     */
    const PARTNER_NONE_VALUE = 0;

    /**
     * PARTNER_PERFECT_WORLD = 1
     */
    const PARTNER_PERFECT_WORLD_VALUE = 1;

    /**
     * PARTNER_NEXON = 2
     */
    const PARTNER_NEXON_VALUE = 2;

    /**
     * @var \SteamKit\Base\GC\TF2\SteamMsgGCSDK\PartnerAccountType
     */
    protected static $PARTNER_NONE = null;

    /**
     * @var \SteamKit\Base\GC\TF2\SteamMsgGCSDK\PartnerAccountType
     */
    protected static $PARTNER_PERFECT_WORLD = null;

    /**
     * @var \SteamKit\Base\GC\TF2\SteamMsgGCSDK\PartnerAccountType
     */
    protected static $PARTNER_NEXON = null;

    /**
     * @return \SteamKit\Base\GC\TF2\SteamMsgGCSDK\PartnerAccountType
     */
    public static function PARTNER_NONE()
    {
        if (self::$PARTNER_NONE !== null) {
            return self::$PARTNER_NONE;
        }

        return self::$PARTNER_NONE = new self('PARTNER_NONE', self::PARTNER_NONE_VALUE);
    }

    /**
     * @return \SteamKit\Base\GC\TF2\SteamMsgGCSDK\PartnerAccountType
     */
    public static function PARTNER_PERFECT_WORLD()
    {
        if (self::$PARTNER_PERFECT_WORLD !== null) {
            return self::$PARTNER_PERFECT_WORLD;
        }

        return self::$PARTNER_PERFECT_WORLD = new self('PARTNER_PERFECT_WORLD', self::PARTNER_PERFECT_WORLD_VALUE);
    }

    /**
     * @return \SteamKit\Base\GC\TF2\SteamMsgGCSDK\PartnerAccountType
     */
    public static function PARTNER_NEXON()
    {
        if (self::$PARTNER_NEXON !== null) {
            return self::$PARTNER_NEXON;
        }

        return self::$PARTNER_NEXON = new self('PARTNER_NEXON', self::PARTNER_NEXON_VALUE);
    }

    /**
     * @param int $value
     * @return \SteamKit\Base\GC\TF2\SteamMsgGCSDK\PartnerAccountType
     */
    public static function valueOf($value)
    {
        switch ($value) {
            case 0: return self::PARTNER_NONE();
            case 1: return self::PARTNER_PERFECT_WORLD();
            case 2: return self::PARTNER_NEXON();
            default: return null;
        }
    }


}

