package SteamKit.Base.Unified.SteamMsgVideo;
import "steammessages_unified_base.steamclient.proto";

option cc_generic_services = true;

message CVideo_ClientGetVideoURL_Request {
	optional uint64 video_id = 1 [(SteamKit.Base.Unified.SteamMsgUnifiedBase.description) = "Video ID"];
	optional uint32 client_cellid = 2 [(SteamKit.Base.Unified.SteamMsgUnifiedBase.description) = "Cell ID of client, zero if unknown"];
}

message CVideo_ClientGetVideoURL_Response {
	optional uint64 video_id = 1 [(SteamKit.Base.Unified.SteamMsgUnifiedBase.description) = "Video ID"];
	optional string video_url = 2 [(SteamKit.Base.Unified.SteamMsgUnifiedBase.description) = "URL for video manifest"];
}

message CVideo_UnlockedH264_Notification {
	optional bytes encryption_key = 1;
}

service Video {
	option (SteamKit.Base.Unified.SteamMsgUnifiedBase.service_description) = "Video methods";
	rpc ClientGetVideoURL (CVideo_ClientGetVideoURL_Request) returns (CVideo_ClientGetVideoURL_Response) {
		option (SteamKit.Base.Unified.SteamMsgUnifiedBase.method_description) = "Get the initial URL to begin streaming a video";
	}
}
service VideoClient {
	option (SteamKit.Base.Unified.SteamMsgUnifiedBase.service_execution_site) = k_EProtoExecutionSiteSteamClient;
	rpc NotifyUnlockedH264 (CVideo_UnlockedH264_Notification) returns (SteamKit.Base.Unified.SteamMsgUnifiedBase.NoResponse) {
		option (SteamKit.Base.Unified.SteamMsgUnifiedBase.method_description) = "Notification from server to client that h264 has been unlocked";
	}
}
